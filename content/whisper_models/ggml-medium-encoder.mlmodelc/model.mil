program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.33.5"}, {"coremlc-version", "1877.40.3"}, {"coremltools-component-torch", "2.1.0"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "8.2"}})]
{
    func main<ios15>(tensor<fp32, [1, 80, 3000]> logmel_data) {
            tensor<string, []> var_68_pad_type_0 = const()[name = tensor<string, []>("op_68_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [2]> var_68_pad_0 = const()[name = tensor<string, []>("op_68_pad_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [1]> var_68_strides_0 = const()[name = tensor<string, []>("op_68_strides_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, [1]> var_68_dilations_0 = const()[name = tensor<string, []>("op_68_dilations_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, []> var_68_groups_0 = const()[name = tensor<string, []>("op_68_groups_0"), val = tensor<int32, []>(1)];
            tensor<string, []> logmel_data_to_fp16_dtype_0 = const()[name = tensor<string, []>("logmel_data_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [1024, 80, 3]> const_0_to_fp16 = const()[name = tensor<string, []>("const_0_to_fp16"), val = tensor<fp16, [1024, 80, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [1024]> const_1_to_fp16 = const()[name = tensor<string, []>("const_1_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(491648)))];
            tensor<fp16, [1, 80, 3000]> logmel_data_to_fp16 = cast(dtype = logmel_data_to_fp16_dtype_0, x = logmel_data)[name = tensor<string, []>("cast_100")];
            tensor<fp16, [1, 1024, 3000]> var_68_cast_fp16 = conv(bias = const_1_to_fp16, dilations = var_68_dilations_0, groups = var_68_groups_0, pad = var_68_pad_0, pad_type = var_68_pad_type_0, strides = var_68_strides_0, weight = const_0_to_fp16, x = logmel_data_to_fp16)[name = tensor<string, []>("op_68_cast_fp16")];
            tensor<string, []> input_1_mode_0 = const()[name = tensor<string, []>("input_1_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1024, 3000]> input_1_cast_fp16 = gelu(mode = input_1_mode_0, x = var_68_cast_fp16)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<string, []> var_86_pad_type_0 = const()[name = tensor<string, []>("op_86_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [2]> var_86_pad_0 = const()[name = tensor<string, []>("op_86_pad_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [1]> var_86_strides_0 = const()[name = tensor<string, []>("op_86_strides_0"), val = tensor<int32, [1]>([2])];
            tensor<int32, [1]> var_86_dilations_0 = const()[name = tensor<string, []>("op_86_dilations_0"), val = tensor<int32, [1]>([1])];
            tensor<int32, []> var_86_groups_0 = const()[name = tensor<string, []>("op_86_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 3]> const_2_to_fp16 = const()[name = tensor<string, []>("const_2_to_fp16"), val = tensor<fp16, [1024, 1024, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(493760)))];
            tensor<fp16, [1024]> const_3_to_fp16 = const()[name = tensor<string, []>("const_3_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6785280)))];
            tensor<fp16, [1, 1024, 1500]> var_86_cast_fp16 = conv(bias = const_3_to_fp16, dilations = var_86_dilations_0, groups = var_86_groups_0, pad = var_86_pad_0, pad_type = var_86_pad_type_0, strides = var_86_strides_0, weight = const_2_to_fp16, x = input_1_cast_fp16)[name = tensor<string, []>("op_86_cast_fp16")];
            tensor<string, []> x_3_mode_0 = const()[name = tensor<string, []>("x_3_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1024, 1500]> x_3_cast_fp16 = gelu(mode = x_3_mode_0, x = var_86_cast_fp16)[name = tensor<string, []>("x_3_cast_fp16")];
            tensor<fp16, [1024, 1500]> var_91_to_fp16 = const()[name = tensor<string, []>("op_91_to_fp16"), val = tensor<fp16, [1024, 1500]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6787392)))];
            tensor<fp16, [1, 1024, 1500]> var_93_cast_fp16 = add(x = x_3_cast_fp16, y = var_91_to_fp16)[name = tensor<string, []>("op_93_cast_fp16")];
            tensor<int32, [1]> inputs_1_axes_0 = const()[name = tensor<string, []>("inputs_1_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_1_cast_fp16 = expand_dims(axes = inputs_1_axes_0, x = var_93_cast_fp16)[name = tensor<string, []>("inputs_1_cast_fp16")];
            tensor<int32, []> var_108 = const()[name = tensor<string, []>("op_108"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_3_axes_0 = const()[name = tensor<string, []>("input_3_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_3_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9859456)))];
            tensor<fp16, [1024]> input_3_beta_0_to_fp16 = const()[name = tensor<string, []>("input_3_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9861568)))];
            tensor<fp16, []> var_124_to_fp16 = const()[name = tensor<string, []>("op_124_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_3_cast_fp16 = layer_norm(axes = input_3_axes_0, beta = input_3_beta_0_to_fp16, epsilon = var_124_to_fp16, gamma = input_3_gamma_0_to_fp16, x = inputs_1_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<string, []> q_1_pad_type_0 = const()[name = tensor<string, []>("q_1_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_1_strides_0 = const()[name = tensor<string, []>("q_1_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_1_pad_0 = const()[name = tensor<string, []>("q_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_1_dilations_0 = const()[name = tensor<string, []>("q_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_1_groups_0 = const()[name = tensor<string, []>("q_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_159_weight_0_to_fp16 = const()[name = tensor<string, []>("op_159_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9863680)))];
            tensor<fp16, [1024]> var_159_bias_0_to_fp16 = const()[name = tensor<string, []>("op_159_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11960896)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_159_cast_fp16 = conv(bias = var_159_bias_0_to_fp16, dilations = q_1_dilations_0, groups = q_1_groups_0, pad = q_1_pad_0, pad_type = q_1_pad_type_0, strides = q_1_strides_0, weight = var_159_weight_0_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("op_159_cast_fp16")];
            tensor<string, []> k_1_pad_type_0 = const()[name = tensor<string, []>("k_1_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_1_strides_0 = const()[name = tensor<string, []>("k_1_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_1_pad_0 = const()[name = tensor<string, []>("k_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_1_dilations_0 = const()[name = tensor<string, []>("k_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_1_groups_0 = const()[name = tensor<string, []>("k_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_0_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11963008)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_1_cast_fp16 = conv(dilations = k_1_dilations_0, groups = k_1_groups_0, pad = k_1_pad_0, pad_type = k_1_pad_type_0, strides = k_1_strides_0, weight = blocks_0_attn_key_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("k_1_cast_fp16")];
            tensor<string, []> var_157_pad_type_0 = const()[name = tensor<string, []>("op_157_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_157_strides_0 = const()[name = tensor<string, []>("op_157_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_157_pad_0 = const()[name = tensor<string, []>("op_157_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_157_dilations_0 = const()[name = tensor<string, []>("op_157_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_157_groups_0 = const()[name = tensor<string, []>("op_157_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_0_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14060224)))];
            tensor<fp16, [1024]> blocks_0_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16157440)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_157_cast_fp16 = conv(bias = blocks_0_attn_value_bias_to_fp16, dilations = var_157_dilations_0, groups = var_157_groups_0, pad = var_157_pad_0, pad_type = var_157_pad_type_0, strides = var_157_strides_0, weight = blocks_0_attn_value_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("op_157_cast_fp16")];
            tensor<int32, [16]> tile_0 = const()[name = tensor<string, []>("tile_0"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_160_axis_0 = const()[name = tensor<string, []>("op_160_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_160_cast_fp16_15 = split(axis = var_160_axis_0, split_sizes = tile_0, x = var_159_cast_fp16)[name = tensor<string, []>("op_160_cast_fp16")];
            tensor<int32, [4]> var_177_perm_0 = const()[name = tensor<string, []>("op_177_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_1 = const()[name = tensor<string, []>("tile_1"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_178_axis_0 = const()[name = tensor<string, []>("op_178_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_177_cast_fp16 = transpose(perm = var_177_perm_0, x = k_1_cast_fp16)[name = tensor<string, []>("transpose_24")];
            tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_178_cast_fp16_15 = split(axis = var_178_axis_0, split_sizes = tile_1, x = var_177_cast_fp16)[name = tensor<string, []>("op_178_cast_fp16")];
            tensor<int32, [16]> tile_2 = const()[name = tensor<string, []>("tile_2"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_195_axis_0 = const()[name = tensor<string, []>("op_195_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_195_cast_fp16_15 = split(axis = var_195_axis_0, split_sizes = tile_2, x = var_157_cast_fp16)[name = tensor<string, []>("op_195_cast_fp16")];
            tensor<string, []> aw_1_equation_0 = const()[name = tensor<string, []>("aw_1_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_1_cast_fp16 = einsum(equation = aw_1_equation_0, values = (var_178_cast_fp16_0, var_160_cast_fp16_0))[name = tensor<string, []>("aw_1_cast_fp16")];
            tensor<string, []> aw_3_equation_0 = const()[name = tensor<string, []>("aw_3_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_3_cast_fp16 = einsum(equation = aw_3_equation_0, values = (var_178_cast_fp16_1, var_160_cast_fp16_1))[name = tensor<string, []>("aw_3_cast_fp16")];
            tensor<string, []> aw_5_equation_0 = const()[name = tensor<string, []>("aw_5_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_5_cast_fp16 = einsum(equation = aw_5_equation_0, values = (var_178_cast_fp16_2, var_160_cast_fp16_2))[name = tensor<string, []>("aw_5_cast_fp16")];
            tensor<string, []> aw_7_equation_0 = const()[name = tensor<string, []>("aw_7_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_7_cast_fp16 = einsum(equation = aw_7_equation_0, values = (var_178_cast_fp16_3, var_160_cast_fp16_3))[name = tensor<string, []>("aw_7_cast_fp16")];
            tensor<string, []> aw_9_equation_0 = const()[name = tensor<string, []>("aw_9_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_9_cast_fp16 = einsum(equation = aw_9_equation_0, values = (var_178_cast_fp16_4, var_160_cast_fp16_4))[name = tensor<string, []>("aw_9_cast_fp16")];
            tensor<string, []> aw_11_equation_0 = const()[name = tensor<string, []>("aw_11_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_11_cast_fp16 = einsum(equation = aw_11_equation_0, values = (var_178_cast_fp16_5, var_160_cast_fp16_5))[name = tensor<string, []>("aw_11_cast_fp16")];
            tensor<string, []> aw_13_equation_0 = const()[name = tensor<string, []>("aw_13_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_13_cast_fp16 = einsum(equation = aw_13_equation_0, values = (var_178_cast_fp16_6, var_160_cast_fp16_6))[name = tensor<string, []>("aw_13_cast_fp16")];
            tensor<string, []> aw_15_equation_0 = const()[name = tensor<string, []>("aw_15_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_15_cast_fp16 = einsum(equation = aw_15_equation_0, values = (var_178_cast_fp16_7, var_160_cast_fp16_7))[name = tensor<string, []>("aw_15_cast_fp16")];
            tensor<string, []> aw_17_equation_0 = const()[name = tensor<string, []>("aw_17_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_17_cast_fp16 = einsum(equation = aw_17_equation_0, values = (var_178_cast_fp16_8, var_160_cast_fp16_8))[name = tensor<string, []>("aw_17_cast_fp16")];
            tensor<string, []> aw_19_equation_0 = const()[name = tensor<string, []>("aw_19_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_19_cast_fp16 = einsum(equation = aw_19_equation_0, values = (var_178_cast_fp16_9, var_160_cast_fp16_9))[name = tensor<string, []>("aw_19_cast_fp16")];
            tensor<string, []> aw_21_equation_0 = const()[name = tensor<string, []>("aw_21_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_21_cast_fp16 = einsum(equation = aw_21_equation_0, values = (var_178_cast_fp16_10, var_160_cast_fp16_10))[name = tensor<string, []>("aw_21_cast_fp16")];
            tensor<string, []> aw_23_equation_0 = const()[name = tensor<string, []>("aw_23_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_23_cast_fp16 = einsum(equation = aw_23_equation_0, values = (var_178_cast_fp16_11, var_160_cast_fp16_11))[name = tensor<string, []>("aw_23_cast_fp16")];
            tensor<string, []> aw_25_equation_0 = const()[name = tensor<string, []>("aw_25_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_25_cast_fp16 = einsum(equation = aw_25_equation_0, values = (var_178_cast_fp16_12, var_160_cast_fp16_12))[name = tensor<string, []>("aw_25_cast_fp16")];
            tensor<string, []> aw_27_equation_0 = const()[name = tensor<string, []>("aw_27_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_27_cast_fp16 = einsum(equation = aw_27_equation_0, values = (var_178_cast_fp16_13, var_160_cast_fp16_13))[name = tensor<string, []>("aw_27_cast_fp16")];
            tensor<string, []> aw_29_equation_0 = const()[name = tensor<string, []>("aw_29_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_29_cast_fp16 = einsum(equation = aw_29_equation_0, values = (var_178_cast_fp16_14, var_160_cast_fp16_14))[name = tensor<string, []>("aw_29_cast_fp16")];
            tensor<string, []> aw_31_equation_0 = const()[name = tensor<string, []>("aw_31_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_31_cast_fp16 = einsum(equation = aw_31_equation_0, values = (var_178_cast_fp16_15, var_160_cast_fp16_15))[name = tensor<string, []>("aw_31_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_244_cast_fp16 = softmax(axis = var_108, x = aw_1_cast_fp16)[name = tensor<string, []>("op_244_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_245_cast_fp16 = softmax(axis = var_108, x = aw_3_cast_fp16)[name = tensor<string, []>("op_245_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_246_cast_fp16 = softmax(axis = var_108, x = aw_5_cast_fp16)[name = tensor<string, []>("op_246_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_247_cast_fp16 = softmax(axis = var_108, x = aw_7_cast_fp16)[name = tensor<string, []>("op_247_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_248_cast_fp16 = softmax(axis = var_108, x = aw_9_cast_fp16)[name = tensor<string, []>("op_248_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_249_cast_fp16 = softmax(axis = var_108, x = aw_11_cast_fp16)[name = tensor<string, []>("op_249_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_250_cast_fp16 = softmax(axis = var_108, x = aw_13_cast_fp16)[name = tensor<string, []>("op_250_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_251_cast_fp16 = softmax(axis = var_108, x = aw_15_cast_fp16)[name = tensor<string, []>("op_251_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_252_cast_fp16 = softmax(axis = var_108, x = aw_17_cast_fp16)[name = tensor<string, []>("op_252_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_253_cast_fp16 = softmax(axis = var_108, x = aw_19_cast_fp16)[name = tensor<string, []>("op_253_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_254_cast_fp16 = softmax(axis = var_108, x = aw_21_cast_fp16)[name = tensor<string, []>("op_254_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_255_cast_fp16 = softmax(axis = var_108, x = aw_23_cast_fp16)[name = tensor<string, []>("op_255_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_256_cast_fp16 = softmax(axis = var_108, x = aw_25_cast_fp16)[name = tensor<string, []>("op_256_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_257_cast_fp16 = softmax(axis = var_108, x = aw_27_cast_fp16)[name = tensor<string, []>("op_257_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_258_cast_fp16 = softmax(axis = var_108, x = aw_29_cast_fp16)[name = tensor<string, []>("op_258_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_259_cast_fp16 = softmax(axis = var_108, x = aw_31_cast_fp16)[name = tensor<string, []>("op_259_cast_fp16")];
            tensor<string, []> var_261_equation_0 = const()[name = tensor<string, []>("op_261_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_261_cast_fp16 = einsum(equation = var_261_equation_0, values = (var_195_cast_fp16_0, var_244_cast_fp16))[name = tensor<string, []>("op_261_cast_fp16")];
            tensor<string, []> var_263_equation_0 = const()[name = tensor<string, []>("op_263_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_263_cast_fp16 = einsum(equation = var_263_equation_0, values = (var_195_cast_fp16_1, var_245_cast_fp16))[name = tensor<string, []>("op_263_cast_fp16")];
            tensor<string, []> var_265_equation_0 = const()[name = tensor<string, []>("op_265_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_265_cast_fp16 = einsum(equation = var_265_equation_0, values = (var_195_cast_fp16_2, var_246_cast_fp16))[name = tensor<string, []>("op_265_cast_fp16")];
            tensor<string, []> var_267_equation_0 = const()[name = tensor<string, []>("op_267_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_267_cast_fp16 = einsum(equation = var_267_equation_0, values = (var_195_cast_fp16_3, var_247_cast_fp16))[name = tensor<string, []>("op_267_cast_fp16")];
            tensor<string, []> var_269_equation_0 = const()[name = tensor<string, []>("op_269_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_269_cast_fp16 = einsum(equation = var_269_equation_0, values = (var_195_cast_fp16_4, var_248_cast_fp16))[name = tensor<string, []>("op_269_cast_fp16")];
            tensor<string, []> var_271_equation_0 = const()[name = tensor<string, []>("op_271_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_271_cast_fp16 = einsum(equation = var_271_equation_0, values = (var_195_cast_fp16_5, var_249_cast_fp16))[name = tensor<string, []>("op_271_cast_fp16")];
            tensor<string, []> var_273_equation_0 = const()[name = tensor<string, []>("op_273_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_273_cast_fp16 = einsum(equation = var_273_equation_0, values = (var_195_cast_fp16_6, var_250_cast_fp16))[name = tensor<string, []>("op_273_cast_fp16")];
            tensor<string, []> var_275_equation_0 = const()[name = tensor<string, []>("op_275_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_275_cast_fp16 = einsum(equation = var_275_equation_0, values = (var_195_cast_fp16_7, var_251_cast_fp16))[name = tensor<string, []>("op_275_cast_fp16")];
            tensor<string, []> var_277_equation_0 = const()[name = tensor<string, []>("op_277_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_277_cast_fp16 = einsum(equation = var_277_equation_0, values = (var_195_cast_fp16_8, var_252_cast_fp16))[name = tensor<string, []>("op_277_cast_fp16")];
            tensor<string, []> var_279_equation_0 = const()[name = tensor<string, []>("op_279_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_279_cast_fp16 = einsum(equation = var_279_equation_0, values = (var_195_cast_fp16_9, var_253_cast_fp16))[name = tensor<string, []>("op_279_cast_fp16")];
            tensor<string, []> var_281_equation_0 = const()[name = tensor<string, []>("op_281_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_281_cast_fp16 = einsum(equation = var_281_equation_0, values = (var_195_cast_fp16_10, var_254_cast_fp16))[name = tensor<string, []>("op_281_cast_fp16")];
            tensor<string, []> var_283_equation_0 = const()[name = tensor<string, []>("op_283_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_283_cast_fp16 = einsum(equation = var_283_equation_0, values = (var_195_cast_fp16_11, var_255_cast_fp16))[name = tensor<string, []>("op_283_cast_fp16")];
            tensor<string, []> var_285_equation_0 = const()[name = tensor<string, []>("op_285_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_285_cast_fp16 = einsum(equation = var_285_equation_0, values = (var_195_cast_fp16_12, var_256_cast_fp16))[name = tensor<string, []>("op_285_cast_fp16")];
            tensor<string, []> var_287_equation_0 = const()[name = tensor<string, []>("op_287_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_287_cast_fp16 = einsum(equation = var_287_equation_0, values = (var_195_cast_fp16_13, var_257_cast_fp16))[name = tensor<string, []>("op_287_cast_fp16")];
            tensor<string, []> var_289_equation_0 = const()[name = tensor<string, []>("op_289_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_289_cast_fp16 = einsum(equation = var_289_equation_0, values = (var_195_cast_fp16_14, var_258_cast_fp16))[name = tensor<string, []>("op_289_cast_fp16")];
            tensor<string, []> var_291_equation_0 = const()[name = tensor<string, []>("op_291_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_291_cast_fp16 = einsum(equation = var_291_equation_0, values = (var_195_cast_fp16_15, var_259_cast_fp16))[name = tensor<string, []>("op_291_cast_fp16")];
            tensor<bool, []> input_5_interleave_0 = const()[name = tensor<string, []>("input_5_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_5_cast_fp16 = concat(axis = var_108, interleave = input_5_interleave_0, values = (var_261_cast_fp16, var_263_cast_fp16, var_265_cast_fp16, var_267_cast_fp16, var_269_cast_fp16, var_271_cast_fp16, var_273_cast_fp16, var_275_cast_fp16, var_277_cast_fp16, var_279_cast_fp16, var_281_cast_fp16, var_283_cast_fp16, var_285_cast_fp16, var_287_cast_fp16, var_289_cast_fp16, var_291_cast_fp16))[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<string, []> var_300_pad_type_0 = const()[name = tensor<string, []>("op_300_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_300_strides_0 = const()[name = tensor<string, []>("op_300_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_300_pad_0 = const()[name = tensor<string, []>("op_300_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_300_dilations_0 = const()[name = tensor<string, []>("op_300_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_300_groups_0 = const()[name = tensor<string, []>("op_300_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_0_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16159552)))];
            tensor<fp16, [1024]> blocks_0_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18256768)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_300_cast_fp16 = conv(bias = blocks_0_attn_out_bias_to_fp16, dilations = var_300_dilations_0, groups = var_300_groups_0, pad = var_300_pad_0, pad_type = var_300_pad_type_0, strides = var_300_strides_0, weight = blocks_0_attn_out_weight_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("op_300_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_3_cast_fp16 = add(x = inputs_1_cast_fp16, y = var_300_cast_fp16)[name = tensor<string, []>("inputs_3_cast_fp16")];
            tensor<int32, [1]> input_7_axes_0 = const()[name = tensor<string, []>("input_7_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_7_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_7_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18258880)))];
            tensor<fp16, [1024]> input_7_beta_0_to_fp16 = const()[name = tensor<string, []>("input_7_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18260992)))];
            tensor<fp16, []> var_310_to_fp16 = const()[name = tensor<string, []>("op_310_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_7_cast_fp16 = layer_norm(axes = input_7_axes_0, beta = input_7_beta_0_to_fp16, epsilon = var_310_to_fp16, gamma = input_7_gamma_0_to_fp16, x = inputs_3_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_9_strides_0 = const()[name = tensor<string, []>("input_9_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_9_dilations_0 = const()[name = tensor<string, []>("input_9_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_9_groups_0 = const()[name = tensor<string, []>("input_9_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_0_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18263104)))];
            tensor<fp16, [4096]> blocks_0_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26651776)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_9_cast_fp16 = conv(bias = blocks_0_mlp_0_bias_to_fp16, dilations = input_9_dilations_0, groups = input_9_groups_0, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = input_9_strides_0, weight = blocks_0_mlp_0_weight_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<string, []> input_11_mode_0 = const()[name = tensor<string, []>("input_11_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_11_cast_fp16 = gelu(mode = input_11_mode_0, x = input_9_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<string, []> var_336_pad_type_0 = const()[name = tensor<string, []>("op_336_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_336_strides_0 = const()[name = tensor<string, []>("op_336_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_336_pad_0 = const()[name = tensor<string, []>("op_336_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_336_dilations_0 = const()[name = tensor<string, []>("op_336_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_336_groups_0 = const()[name = tensor<string, []>("op_336_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_0_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26660032)))];
            tensor<fp16, [1024]> blocks_0_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35048704)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_336_cast_fp16 = conv(bias = blocks_0_mlp_2_bias_to_fp16, dilations = var_336_dilations_0, groups = var_336_groups_0, pad = var_336_pad_0, pad_type = var_336_pad_type_0, strides = var_336_strides_0, weight = blocks_0_mlp_2_weight_to_fp16, x = input_11_cast_fp16)[name = tensor<string, []>("op_336_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_5_cast_fp16 = add(x = inputs_3_cast_fp16, y = var_336_cast_fp16)[name = tensor<string, []>("inputs_5_cast_fp16")];
            tensor<int32, []> var_345 = const()[name = tensor<string, []>("op_345"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_13_axes_0 = const()[name = tensor<string, []>("input_13_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_13_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35050816)))];
            tensor<fp16, [1024]> input_13_beta_0_to_fp16 = const()[name = tensor<string, []>("input_13_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35052928)))];
            tensor<fp16, []> var_361_to_fp16 = const()[name = tensor<string, []>("op_361_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_13_cast_fp16 = layer_norm(axes = input_13_axes_0, beta = input_13_beta_0_to_fp16, epsilon = var_361_to_fp16, gamma = input_13_gamma_0_to_fp16, x = inputs_5_cast_fp16)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<string, []> q_3_pad_type_0 = const()[name = tensor<string, []>("q_3_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_3_strides_0 = const()[name = tensor<string, []>("q_3_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_3_pad_0 = const()[name = tensor<string, []>("q_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_3_dilations_0 = const()[name = tensor<string, []>("q_3_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_3_groups_0 = const()[name = tensor<string, []>("q_3_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_396_weight_0_to_fp16 = const()[name = tensor<string, []>("op_396_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35055040)))];
            tensor<fp16, [1024]> var_396_bias_0_to_fp16 = const()[name = tensor<string, []>("op_396_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37152256)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_396_cast_fp16 = conv(bias = var_396_bias_0_to_fp16, dilations = q_3_dilations_0, groups = q_3_groups_0, pad = q_3_pad_0, pad_type = q_3_pad_type_0, strides = q_3_strides_0, weight = var_396_weight_0_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("op_396_cast_fp16")];
            tensor<string, []> k_3_pad_type_0 = const()[name = tensor<string, []>("k_3_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_3_strides_0 = const()[name = tensor<string, []>("k_3_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_3_pad_0 = const()[name = tensor<string, []>("k_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_3_dilations_0 = const()[name = tensor<string, []>("k_3_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_3_groups_0 = const()[name = tensor<string, []>("k_3_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_1_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37154368)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_3_cast_fp16 = conv(dilations = k_3_dilations_0, groups = k_3_groups_0, pad = k_3_pad_0, pad_type = k_3_pad_type_0, strides = k_3_strides_0, weight = blocks_1_attn_key_weight_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("k_3_cast_fp16")];
            tensor<string, []> var_394_pad_type_0 = const()[name = tensor<string, []>("op_394_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_394_strides_0 = const()[name = tensor<string, []>("op_394_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_394_pad_0 = const()[name = tensor<string, []>("op_394_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_394_dilations_0 = const()[name = tensor<string, []>("op_394_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_394_groups_0 = const()[name = tensor<string, []>("op_394_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_1_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39251584)))];
            tensor<fp16, [1024]> blocks_1_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41348800)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_394_cast_fp16 = conv(bias = blocks_1_attn_value_bias_to_fp16, dilations = var_394_dilations_0, groups = var_394_groups_0, pad = var_394_pad_0, pad_type = var_394_pad_type_0, strides = var_394_strides_0, weight = blocks_1_attn_value_weight_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("op_394_cast_fp16")];
            tensor<int32, [16]> tile_3 = const()[name = tensor<string, []>("tile_3"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_397_axis_0 = const()[name = tensor<string, []>("op_397_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_397_cast_fp16_15 = split(axis = var_397_axis_0, split_sizes = tile_3, x = var_396_cast_fp16)[name = tensor<string, []>("op_397_cast_fp16")];
            tensor<int32, [4]> var_414_perm_0 = const()[name = tensor<string, []>("op_414_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_4 = const()[name = tensor<string, []>("tile_4"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_415_axis_0 = const()[name = tensor<string, []>("op_415_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_414_cast_fp16 = transpose(perm = var_414_perm_0, x = k_3_cast_fp16)[name = tensor<string, []>("transpose_23")];
            tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_415_cast_fp16_15 = split(axis = var_415_axis_0, split_sizes = tile_4, x = var_414_cast_fp16)[name = tensor<string, []>("op_415_cast_fp16")];
            tensor<int32, [16]> tile_5 = const()[name = tensor<string, []>("tile_5"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_432_axis_0 = const()[name = tensor<string, []>("op_432_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_432_cast_fp16_15 = split(axis = var_432_axis_0, split_sizes = tile_5, x = var_394_cast_fp16)[name = tensor<string, []>("op_432_cast_fp16")];
            tensor<string, []> aw_33_equation_0 = const()[name = tensor<string, []>("aw_33_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_33_cast_fp16 = einsum(equation = aw_33_equation_0, values = (var_415_cast_fp16_0, var_397_cast_fp16_0))[name = tensor<string, []>("aw_33_cast_fp16")];
            tensor<string, []> aw_35_equation_0 = const()[name = tensor<string, []>("aw_35_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_35_cast_fp16 = einsum(equation = aw_35_equation_0, values = (var_415_cast_fp16_1, var_397_cast_fp16_1))[name = tensor<string, []>("aw_35_cast_fp16")];
            tensor<string, []> aw_37_equation_0 = const()[name = tensor<string, []>("aw_37_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_37_cast_fp16 = einsum(equation = aw_37_equation_0, values = (var_415_cast_fp16_2, var_397_cast_fp16_2))[name = tensor<string, []>("aw_37_cast_fp16")];
            tensor<string, []> aw_39_equation_0 = const()[name = tensor<string, []>("aw_39_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_39_cast_fp16 = einsum(equation = aw_39_equation_0, values = (var_415_cast_fp16_3, var_397_cast_fp16_3))[name = tensor<string, []>("aw_39_cast_fp16")];
            tensor<string, []> aw_41_equation_0 = const()[name = tensor<string, []>("aw_41_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_41_cast_fp16 = einsum(equation = aw_41_equation_0, values = (var_415_cast_fp16_4, var_397_cast_fp16_4))[name = tensor<string, []>("aw_41_cast_fp16")];
            tensor<string, []> aw_43_equation_0 = const()[name = tensor<string, []>("aw_43_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_43_cast_fp16 = einsum(equation = aw_43_equation_0, values = (var_415_cast_fp16_5, var_397_cast_fp16_5))[name = tensor<string, []>("aw_43_cast_fp16")];
            tensor<string, []> aw_45_equation_0 = const()[name = tensor<string, []>("aw_45_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_45_cast_fp16 = einsum(equation = aw_45_equation_0, values = (var_415_cast_fp16_6, var_397_cast_fp16_6))[name = tensor<string, []>("aw_45_cast_fp16")];
            tensor<string, []> aw_47_equation_0 = const()[name = tensor<string, []>("aw_47_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_47_cast_fp16 = einsum(equation = aw_47_equation_0, values = (var_415_cast_fp16_7, var_397_cast_fp16_7))[name = tensor<string, []>("aw_47_cast_fp16")];
            tensor<string, []> aw_49_equation_0 = const()[name = tensor<string, []>("aw_49_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_49_cast_fp16 = einsum(equation = aw_49_equation_0, values = (var_415_cast_fp16_8, var_397_cast_fp16_8))[name = tensor<string, []>("aw_49_cast_fp16")];
            tensor<string, []> aw_51_equation_0 = const()[name = tensor<string, []>("aw_51_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_51_cast_fp16 = einsum(equation = aw_51_equation_0, values = (var_415_cast_fp16_9, var_397_cast_fp16_9))[name = tensor<string, []>("aw_51_cast_fp16")];
            tensor<string, []> aw_53_equation_0 = const()[name = tensor<string, []>("aw_53_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_53_cast_fp16 = einsum(equation = aw_53_equation_0, values = (var_415_cast_fp16_10, var_397_cast_fp16_10))[name = tensor<string, []>("aw_53_cast_fp16")];
            tensor<string, []> aw_55_equation_0 = const()[name = tensor<string, []>("aw_55_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_55_cast_fp16 = einsum(equation = aw_55_equation_0, values = (var_415_cast_fp16_11, var_397_cast_fp16_11))[name = tensor<string, []>("aw_55_cast_fp16")];
            tensor<string, []> aw_57_equation_0 = const()[name = tensor<string, []>("aw_57_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_57_cast_fp16 = einsum(equation = aw_57_equation_0, values = (var_415_cast_fp16_12, var_397_cast_fp16_12))[name = tensor<string, []>("aw_57_cast_fp16")];
            tensor<string, []> aw_59_equation_0 = const()[name = tensor<string, []>("aw_59_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_59_cast_fp16 = einsum(equation = aw_59_equation_0, values = (var_415_cast_fp16_13, var_397_cast_fp16_13))[name = tensor<string, []>("aw_59_cast_fp16")];
            tensor<string, []> aw_61_equation_0 = const()[name = tensor<string, []>("aw_61_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_61_cast_fp16 = einsum(equation = aw_61_equation_0, values = (var_415_cast_fp16_14, var_397_cast_fp16_14))[name = tensor<string, []>("aw_61_cast_fp16")];
            tensor<string, []> aw_63_equation_0 = const()[name = tensor<string, []>("aw_63_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_63_cast_fp16 = einsum(equation = aw_63_equation_0, values = (var_415_cast_fp16_15, var_397_cast_fp16_15))[name = tensor<string, []>("aw_63_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_481_cast_fp16 = softmax(axis = var_345, x = aw_33_cast_fp16)[name = tensor<string, []>("op_481_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_482_cast_fp16 = softmax(axis = var_345, x = aw_35_cast_fp16)[name = tensor<string, []>("op_482_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_483_cast_fp16 = softmax(axis = var_345, x = aw_37_cast_fp16)[name = tensor<string, []>("op_483_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_484_cast_fp16 = softmax(axis = var_345, x = aw_39_cast_fp16)[name = tensor<string, []>("op_484_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_485_cast_fp16 = softmax(axis = var_345, x = aw_41_cast_fp16)[name = tensor<string, []>("op_485_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_486_cast_fp16 = softmax(axis = var_345, x = aw_43_cast_fp16)[name = tensor<string, []>("op_486_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_487_cast_fp16 = softmax(axis = var_345, x = aw_45_cast_fp16)[name = tensor<string, []>("op_487_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_488_cast_fp16 = softmax(axis = var_345, x = aw_47_cast_fp16)[name = tensor<string, []>("op_488_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_489_cast_fp16 = softmax(axis = var_345, x = aw_49_cast_fp16)[name = tensor<string, []>("op_489_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_490_cast_fp16 = softmax(axis = var_345, x = aw_51_cast_fp16)[name = tensor<string, []>("op_490_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_491_cast_fp16 = softmax(axis = var_345, x = aw_53_cast_fp16)[name = tensor<string, []>("op_491_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_492_cast_fp16 = softmax(axis = var_345, x = aw_55_cast_fp16)[name = tensor<string, []>("op_492_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_493_cast_fp16 = softmax(axis = var_345, x = aw_57_cast_fp16)[name = tensor<string, []>("op_493_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_494_cast_fp16 = softmax(axis = var_345, x = aw_59_cast_fp16)[name = tensor<string, []>("op_494_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_495_cast_fp16 = softmax(axis = var_345, x = aw_61_cast_fp16)[name = tensor<string, []>("op_495_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_496_cast_fp16 = softmax(axis = var_345, x = aw_63_cast_fp16)[name = tensor<string, []>("op_496_cast_fp16")];
            tensor<string, []> var_498_equation_0 = const()[name = tensor<string, []>("op_498_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_498_cast_fp16 = einsum(equation = var_498_equation_0, values = (var_432_cast_fp16_0, var_481_cast_fp16))[name = tensor<string, []>("op_498_cast_fp16")];
            tensor<string, []> var_500_equation_0 = const()[name = tensor<string, []>("op_500_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_500_cast_fp16 = einsum(equation = var_500_equation_0, values = (var_432_cast_fp16_1, var_482_cast_fp16))[name = tensor<string, []>("op_500_cast_fp16")];
            tensor<string, []> var_502_equation_0 = const()[name = tensor<string, []>("op_502_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_502_cast_fp16 = einsum(equation = var_502_equation_0, values = (var_432_cast_fp16_2, var_483_cast_fp16))[name = tensor<string, []>("op_502_cast_fp16")];
            tensor<string, []> var_504_equation_0 = const()[name = tensor<string, []>("op_504_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_504_cast_fp16 = einsum(equation = var_504_equation_0, values = (var_432_cast_fp16_3, var_484_cast_fp16))[name = tensor<string, []>("op_504_cast_fp16")];
            tensor<string, []> var_506_equation_0 = const()[name = tensor<string, []>("op_506_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_506_cast_fp16 = einsum(equation = var_506_equation_0, values = (var_432_cast_fp16_4, var_485_cast_fp16))[name = tensor<string, []>("op_506_cast_fp16")];
            tensor<string, []> var_508_equation_0 = const()[name = tensor<string, []>("op_508_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_508_cast_fp16 = einsum(equation = var_508_equation_0, values = (var_432_cast_fp16_5, var_486_cast_fp16))[name = tensor<string, []>("op_508_cast_fp16")];
            tensor<string, []> var_510_equation_0 = const()[name = tensor<string, []>("op_510_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_510_cast_fp16 = einsum(equation = var_510_equation_0, values = (var_432_cast_fp16_6, var_487_cast_fp16))[name = tensor<string, []>("op_510_cast_fp16")];
            tensor<string, []> var_512_equation_0 = const()[name = tensor<string, []>("op_512_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_512_cast_fp16 = einsum(equation = var_512_equation_0, values = (var_432_cast_fp16_7, var_488_cast_fp16))[name = tensor<string, []>("op_512_cast_fp16")];
            tensor<string, []> var_514_equation_0 = const()[name = tensor<string, []>("op_514_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_514_cast_fp16 = einsum(equation = var_514_equation_0, values = (var_432_cast_fp16_8, var_489_cast_fp16))[name = tensor<string, []>("op_514_cast_fp16")];
            tensor<string, []> var_516_equation_0 = const()[name = tensor<string, []>("op_516_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_516_cast_fp16 = einsum(equation = var_516_equation_0, values = (var_432_cast_fp16_9, var_490_cast_fp16))[name = tensor<string, []>("op_516_cast_fp16")];
            tensor<string, []> var_518_equation_0 = const()[name = tensor<string, []>("op_518_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_518_cast_fp16 = einsum(equation = var_518_equation_0, values = (var_432_cast_fp16_10, var_491_cast_fp16))[name = tensor<string, []>("op_518_cast_fp16")];
            tensor<string, []> var_520_equation_0 = const()[name = tensor<string, []>("op_520_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_520_cast_fp16 = einsum(equation = var_520_equation_0, values = (var_432_cast_fp16_11, var_492_cast_fp16))[name = tensor<string, []>("op_520_cast_fp16")];
            tensor<string, []> var_522_equation_0 = const()[name = tensor<string, []>("op_522_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_522_cast_fp16 = einsum(equation = var_522_equation_0, values = (var_432_cast_fp16_12, var_493_cast_fp16))[name = tensor<string, []>("op_522_cast_fp16")];
            tensor<string, []> var_524_equation_0 = const()[name = tensor<string, []>("op_524_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_524_cast_fp16 = einsum(equation = var_524_equation_0, values = (var_432_cast_fp16_13, var_494_cast_fp16))[name = tensor<string, []>("op_524_cast_fp16")];
            tensor<string, []> var_526_equation_0 = const()[name = tensor<string, []>("op_526_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_526_cast_fp16 = einsum(equation = var_526_equation_0, values = (var_432_cast_fp16_14, var_495_cast_fp16))[name = tensor<string, []>("op_526_cast_fp16")];
            tensor<string, []> var_528_equation_0 = const()[name = tensor<string, []>("op_528_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_528_cast_fp16 = einsum(equation = var_528_equation_0, values = (var_432_cast_fp16_15, var_496_cast_fp16))[name = tensor<string, []>("op_528_cast_fp16")];
            tensor<bool, []> input_15_interleave_0 = const()[name = tensor<string, []>("input_15_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_15_cast_fp16 = concat(axis = var_345, interleave = input_15_interleave_0, values = (var_498_cast_fp16, var_500_cast_fp16, var_502_cast_fp16, var_504_cast_fp16, var_506_cast_fp16, var_508_cast_fp16, var_510_cast_fp16, var_512_cast_fp16, var_514_cast_fp16, var_516_cast_fp16, var_518_cast_fp16, var_520_cast_fp16, var_522_cast_fp16, var_524_cast_fp16, var_526_cast_fp16, var_528_cast_fp16))[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<string, []> var_537_pad_type_0 = const()[name = tensor<string, []>("op_537_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_537_strides_0 = const()[name = tensor<string, []>("op_537_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_537_pad_0 = const()[name = tensor<string, []>("op_537_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_537_dilations_0 = const()[name = tensor<string, []>("op_537_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_537_groups_0 = const()[name = tensor<string, []>("op_537_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_1_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41350912)))];
            tensor<fp16, [1024]> blocks_1_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43448128)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_537_cast_fp16 = conv(bias = blocks_1_attn_out_bias_to_fp16, dilations = var_537_dilations_0, groups = var_537_groups_0, pad = var_537_pad_0, pad_type = var_537_pad_type_0, strides = var_537_strides_0, weight = blocks_1_attn_out_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("op_537_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_7_cast_fp16 = add(x = inputs_5_cast_fp16, y = var_537_cast_fp16)[name = tensor<string, []>("inputs_7_cast_fp16")];
            tensor<int32, [1]> input_17_axes_0 = const()[name = tensor<string, []>("input_17_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_17_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_17_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43450240)))];
            tensor<fp16, [1024]> input_17_beta_0_to_fp16 = const()[name = tensor<string, []>("input_17_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43452352)))];
            tensor<fp16, []> var_547_to_fp16 = const()[name = tensor<string, []>("op_547_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_17_cast_fp16 = layer_norm(axes = input_17_axes_0, beta = input_17_beta_0_to_fp16, epsilon = var_547_to_fp16, gamma = input_17_gamma_0_to_fp16, x = inputs_7_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<string, []> input_19_pad_type_0 = const()[name = tensor<string, []>("input_19_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_19_strides_0 = const()[name = tensor<string, []>("input_19_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_19_pad_0 = const()[name = tensor<string, []>("input_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_19_dilations_0 = const()[name = tensor<string, []>("input_19_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_19_groups_0 = const()[name = tensor<string, []>("input_19_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_1_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43454464)))];
            tensor<fp16, [4096]> blocks_1_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51843136)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_19_cast_fp16 = conv(bias = blocks_1_mlp_0_bias_to_fp16, dilations = input_19_dilations_0, groups = input_19_groups_0, pad = input_19_pad_0, pad_type = input_19_pad_type_0, strides = input_19_strides_0, weight = blocks_1_mlp_0_weight_to_fp16, x = input_17_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<string, []> input_21_mode_0 = const()[name = tensor<string, []>("input_21_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_21_cast_fp16 = gelu(mode = input_21_mode_0, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<string, []> var_573_pad_type_0 = const()[name = tensor<string, []>("op_573_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_573_strides_0 = const()[name = tensor<string, []>("op_573_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_573_pad_0 = const()[name = tensor<string, []>("op_573_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_573_dilations_0 = const()[name = tensor<string, []>("op_573_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_573_groups_0 = const()[name = tensor<string, []>("op_573_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_1_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51851392)))];
            tensor<fp16, [1024]> blocks_1_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60240064)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_573_cast_fp16 = conv(bias = blocks_1_mlp_2_bias_to_fp16, dilations = var_573_dilations_0, groups = var_573_groups_0, pad = var_573_pad_0, pad_type = var_573_pad_type_0, strides = var_573_strides_0, weight = blocks_1_mlp_2_weight_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("op_573_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_9_cast_fp16 = add(x = inputs_7_cast_fp16, y = var_573_cast_fp16)[name = tensor<string, []>("inputs_9_cast_fp16")];
            tensor<int32, []> var_582 = const()[name = tensor<string, []>("op_582"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_23_axes_0 = const()[name = tensor<string, []>("input_23_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_23_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60242176)))];
            tensor<fp16, [1024]> input_23_beta_0_to_fp16 = const()[name = tensor<string, []>("input_23_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60244288)))];
            tensor<fp16, []> var_598_to_fp16 = const()[name = tensor<string, []>("op_598_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_23_cast_fp16 = layer_norm(axes = input_23_axes_0, beta = input_23_beta_0_to_fp16, epsilon = var_598_to_fp16, gamma = input_23_gamma_0_to_fp16, x = inputs_9_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<string, []> q_5_pad_type_0 = const()[name = tensor<string, []>("q_5_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_5_strides_0 = const()[name = tensor<string, []>("q_5_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_5_pad_0 = const()[name = tensor<string, []>("q_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_5_dilations_0 = const()[name = tensor<string, []>("q_5_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_5_groups_0 = const()[name = tensor<string, []>("q_5_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_633_weight_0_to_fp16 = const()[name = tensor<string, []>("op_633_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60246400)))];
            tensor<fp16, [1024]> var_633_bias_0_to_fp16 = const()[name = tensor<string, []>("op_633_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62343616)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_633_cast_fp16 = conv(bias = var_633_bias_0_to_fp16, dilations = q_5_dilations_0, groups = q_5_groups_0, pad = q_5_pad_0, pad_type = q_5_pad_type_0, strides = q_5_strides_0, weight = var_633_weight_0_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("op_633_cast_fp16")];
            tensor<string, []> k_5_pad_type_0 = const()[name = tensor<string, []>("k_5_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_5_strides_0 = const()[name = tensor<string, []>("k_5_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_5_pad_0 = const()[name = tensor<string, []>("k_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_5_dilations_0 = const()[name = tensor<string, []>("k_5_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_5_groups_0 = const()[name = tensor<string, []>("k_5_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_2_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62345728)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_5_cast_fp16 = conv(dilations = k_5_dilations_0, groups = k_5_groups_0, pad = k_5_pad_0, pad_type = k_5_pad_type_0, strides = k_5_strides_0, weight = blocks_2_attn_key_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("k_5_cast_fp16")];
            tensor<string, []> var_631_pad_type_0 = const()[name = tensor<string, []>("op_631_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_631_strides_0 = const()[name = tensor<string, []>("op_631_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_631_pad_0 = const()[name = tensor<string, []>("op_631_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_631_dilations_0 = const()[name = tensor<string, []>("op_631_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_631_groups_0 = const()[name = tensor<string, []>("op_631_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_2_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64442944)))];
            tensor<fp16, [1024]> blocks_2_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66540160)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_631_cast_fp16 = conv(bias = blocks_2_attn_value_bias_to_fp16, dilations = var_631_dilations_0, groups = var_631_groups_0, pad = var_631_pad_0, pad_type = var_631_pad_type_0, strides = var_631_strides_0, weight = blocks_2_attn_value_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("op_631_cast_fp16")];
            tensor<int32, [16]> tile_6 = const()[name = tensor<string, []>("tile_6"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_634_axis_0 = const()[name = tensor<string, []>("op_634_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_634_cast_fp16_15 = split(axis = var_634_axis_0, split_sizes = tile_6, x = var_633_cast_fp16)[name = tensor<string, []>("op_634_cast_fp16")];
            tensor<int32, [4]> var_651_perm_0 = const()[name = tensor<string, []>("op_651_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_7 = const()[name = tensor<string, []>("tile_7"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_652_axis_0 = const()[name = tensor<string, []>("op_652_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_651_cast_fp16 = transpose(perm = var_651_perm_0, x = k_5_cast_fp16)[name = tensor<string, []>("transpose_22")];
            tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_652_cast_fp16_15 = split(axis = var_652_axis_0, split_sizes = tile_7, x = var_651_cast_fp16)[name = tensor<string, []>("op_652_cast_fp16")];
            tensor<int32, [16]> tile_8 = const()[name = tensor<string, []>("tile_8"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_669_axis_0 = const()[name = tensor<string, []>("op_669_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_669_cast_fp16_15 = split(axis = var_669_axis_0, split_sizes = tile_8, x = var_631_cast_fp16)[name = tensor<string, []>("op_669_cast_fp16")];
            tensor<string, []> aw_65_equation_0 = const()[name = tensor<string, []>("aw_65_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_65_cast_fp16 = einsum(equation = aw_65_equation_0, values = (var_652_cast_fp16_0, var_634_cast_fp16_0))[name = tensor<string, []>("aw_65_cast_fp16")];
            tensor<string, []> aw_67_equation_0 = const()[name = tensor<string, []>("aw_67_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_67_cast_fp16 = einsum(equation = aw_67_equation_0, values = (var_652_cast_fp16_1, var_634_cast_fp16_1))[name = tensor<string, []>("aw_67_cast_fp16")];
            tensor<string, []> aw_69_equation_0 = const()[name = tensor<string, []>("aw_69_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_69_cast_fp16 = einsum(equation = aw_69_equation_0, values = (var_652_cast_fp16_2, var_634_cast_fp16_2))[name = tensor<string, []>("aw_69_cast_fp16")];
            tensor<string, []> aw_71_equation_0 = const()[name = tensor<string, []>("aw_71_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_71_cast_fp16 = einsum(equation = aw_71_equation_0, values = (var_652_cast_fp16_3, var_634_cast_fp16_3))[name = tensor<string, []>("aw_71_cast_fp16")];
            tensor<string, []> aw_73_equation_0 = const()[name = tensor<string, []>("aw_73_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_73_cast_fp16 = einsum(equation = aw_73_equation_0, values = (var_652_cast_fp16_4, var_634_cast_fp16_4))[name = tensor<string, []>("aw_73_cast_fp16")];
            tensor<string, []> aw_75_equation_0 = const()[name = tensor<string, []>("aw_75_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_75_cast_fp16 = einsum(equation = aw_75_equation_0, values = (var_652_cast_fp16_5, var_634_cast_fp16_5))[name = tensor<string, []>("aw_75_cast_fp16")];
            tensor<string, []> aw_77_equation_0 = const()[name = tensor<string, []>("aw_77_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_77_cast_fp16 = einsum(equation = aw_77_equation_0, values = (var_652_cast_fp16_6, var_634_cast_fp16_6))[name = tensor<string, []>("aw_77_cast_fp16")];
            tensor<string, []> aw_79_equation_0 = const()[name = tensor<string, []>("aw_79_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_79_cast_fp16 = einsum(equation = aw_79_equation_0, values = (var_652_cast_fp16_7, var_634_cast_fp16_7))[name = tensor<string, []>("aw_79_cast_fp16")];
            tensor<string, []> aw_81_equation_0 = const()[name = tensor<string, []>("aw_81_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_81_cast_fp16 = einsum(equation = aw_81_equation_0, values = (var_652_cast_fp16_8, var_634_cast_fp16_8))[name = tensor<string, []>("aw_81_cast_fp16")];
            tensor<string, []> aw_83_equation_0 = const()[name = tensor<string, []>("aw_83_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_83_cast_fp16 = einsum(equation = aw_83_equation_0, values = (var_652_cast_fp16_9, var_634_cast_fp16_9))[name = tensor<string, []>("aw_83_cast_fp16")];
            tensor<string, []> aw_85_equation_0 = const()[name = tensor<string, []>("aw_85_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_85_cast_fp16 = einsum(equation = aw_85_equation_0, values = (var_652_cast_fp16_10, var_634_cast_fp16_10))[name = tensor<string, []>("aw_85_cast_fp16")];
            tensor<string, []> aw_87_equation_0 = const()[name = tensor<string, []>("aw_87_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_87_cast_fp16 = einsum(equation = aw_87_equation_0, values = (var_652_cast_fp16_11, var_634_cast_fp16_11))[name = tensor<string, []>("aw_87_cast_fp16")];
            tensor<string, []> aw_89_equation_0 = const()[name = tensor<string, []>("aw_89_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_89_cast_fp16 = einsum(equation = aw_89_equation_0, values = (var_652_cast_fp16_12, var_634_cast_fp16_12))[name = tensor<string, []>("aw_89_cast_fp16")];
            tensor<string, []> aw_91_equation_0 = const()[name = tensor<string, []>("aw_91_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_91_cast_fp16 = einsum(equation = aw_91_equation_0, values = (var_652_cast_fp16_13, var_634_cast_fp16_13))[name = tensor<string, []>("aw_91_cast_fp16")];
            tensor<string, []> aw_93_equation_0 = const()[name = tensor<string, []>("aw_93_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_93_cast_fp16 = einsum(equation = aw_93_equation_0, values = (var_652_cast_fp16_14, var_634_cast_fp16_14))[name = tensor<string, []>("aw_93_cast_fp16")];
            tensor<string, []> aw_95_equation_0 = const()[name = tensor<string, []>("aw_95_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_95_cast_fp16 = einsum(equation = aw_95_equation_0, values = (var_652_cast_fp16_15, var_634_cast_fp16_15))[name = tensor<string, []>("aw_95_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_718_cast_fp16 = softmax(axis = var_582, x = aw_65_cast_fp16)[name = tensor<string, []>("op_718_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_719_cast_fp16 = softmax(axis = var_582, x = aw_67_cast_fp16)[name = tensor<string, []>("op_719_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_720_cast_fp16 = softmax(axis = var_582, x = aw_69_cast_fp16)[name = tensor<string, []>("op_720_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_721_cast_fp16 = softmax(axis = var_582, x = aw_71_cast_fp16)[name = tensor<string, []>("op_721_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_722_cast_fp16 = softmax(axis = var_582, x = aw_73_cast_fp16)[name = tensor<string, []>("op_722_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_723_cast_fp16 = softmax(axis = var_582, x = aw_75_cast_fp16)[name = tensor<string, []>("op_723_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_724_cast_fp16 = softmax(axis = var_582, x = aw_77_cast_fp16)[name = tensor<string, []>("op_724_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_725_cast_fp16 = softmax(axis = var_582, x = aw_79_cast_fp16)[name = tensor<string, []>("op_725_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_726_cast_fp16 = softmax(axis = var_582, x = aw_81_cast_fp16)[name = tensor<string, []>("op_726_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_727_cast_fp16 = softmax(axis = var_582, x = aw_83_cast_fp16)[name = tensor<string, []>("op_727_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_728_cast_fp16 = softmax(axis = var_582, x = aw_85_cast_fp16)[name = tensor<string, []>("op_728_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_729_cast_fp16 = softmax(axis = var_582, x = aw_87_cast_fp16)[name = tensor<string, []>("op_729_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_730_cast_fp16 = softmax(axis = var_582, x = aw_89_cast_fp16)[name = tensor<string, []>("op_730_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_731_cast_fp16 = softmax(axis = var_582, x = aw_91_cast_fp16)[name = tensor<string, []>("op_731_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_732_cast_fp16 = softmax(axis = var_582, x = aw_93_cast_fp16)[name = tensor<string, []>("op_732_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_733_cast_fp16 = softmax(axis = var_582, x = aw_95_cast_fp16)[name = tensor<string, []>("op_733_cast_fp16")];
            tensor<string, []> var_735_equation_0 = const()[name = tensor<string, []>("op_735_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_735_cast_fp16 = einsum(equation = var_735_equation_0, values = (var_669_cast_fp16_0, var_718_cast_fp16))[name = tensor<string, []>("op_735_cast_fp16")];
            tensor<string, []> var_737_equation_0 = const()[name = tensor<string, []>("op_737_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_737_cast_fp16 = einsum(equation = var_737_equation_0, values = (var_669_cast_fp16_1, var_719_cast_fp16))[name = tensor<string, []>("op_737_cast_fp16")];
            tensor<string, []> var_739_equation_0 = const()[name = tensor<string, []>("op_739_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_739_cast_fp16 = einsum(equation = var_739_equation_0, values = (var_669_cast_fp16_2, var_720_cast_fp16))[name = tensor<string, []>("op_739_cast_fp16")];
            tensor<string, []> var_741_equation_0 = const()[name = tensor<string, []>("op_741_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_741_cast_fp16 = einsum(equation = var_741_equation_0, values = (var_669_cast_fp16_3, var_721_cast_fp16))[name = tensor<string, []>("op_741_cast_fp16")];
            tensor<string, []> var_743_equation_0 = const()[name = tensor<string, []>("op_743_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_743_cast_fp16 = einsum(equation = var_743_equation_0, values = (var_669_cast_fp16_4, var_722_cast_fp16))[name = tensor<string, []>("op_743_cast_fp16")];
            tensor<string, []> var_745_equation_0 = const()[name = tensor<string, []>("op_745_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_745_cast_fp16 = einsum(equation = var_745_equation_0, values = (var_669_cast_fp16_5, var_723_cast_fp16))[name = tensor<string, []>("op_745_cast_fp16")];
            tensor<string, []> var_747_equation_0 = const()[name = tensor<string, []>("op_747_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_747_cast_fp16 = einsum(equation = var_747_equation_0, values = (var_669_cast_fp16_6, var_724_cast_fp16))[name = tensor<string, []>("op_747_cast_fp16")];
            tensor<string, []> var_749_equation_0 = const()[name = tensor<string, []>("op_749_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_749_cast_fp16 = einsum(equation = var_749_equation_0, values = (var_669_cast_fp16_7, var_725_cast_fp16))[name = tensor<string, []>("op_749_cast_fp16")];
            tensor<string, []> var_751_equation_0 = const()[name = tensor<string, []>("op_751_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_751_cast_fp16 = einsum(equation = var_751_equation_0, values = (var_669_cast_fp16_8, var_726_cast_fp16))[name = tensor<string, []>("op_751_cast_fp16")];
            tensor<string, []> var_753_equation_0 = const()[name = tensor<string, []>("op_753_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_753_cast_fp16 = einsum(equation = var_753_equation_0, values = (var_669_cast_fp16_9, var_727_cast_fp16))[name = tensor<string, []>("op_753_cast_fp16")];
            tensor<string, []> var_755_equation_0 = const()[name = tensor<string, []>("op_755_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_755_cast_fp16 = einsum(equation = var_755_equation_0, values = (var_669_cast_fp16_10, var_728_cast_fp16))[name = tensor<string, []>("op_755_cast_fp16")];
            tensor<string, []> var_757_equation_0 = const()[name = tensor<string, []>("op_757_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_757_cast_fp16 = einsum(equation = var_757_equation_0, values = (var_669_cast_fp16_11, var_729_cast_fp16))[name = tensor<string, []>("op_757_cast_fp16")];
            tensor<string, []> var_759_equation_0 = const()[name = tensor<string, []>("op_759_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_759_cast_fp16 = einsum(equation = var_759_equation_0, values = (var_669_cast_fp16_12, var_730_cast_fp16))[name = tensor<string, []>("op_759_cast_fp16")];
            tensor<string, []> var_761_equation_0 = const()[name = tensor<string, []>("op_761_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_761_cast_fp16 = einsum(equation = var_761_equation_0, values = (var_669_cast_fp16_13, var_731_cast_fp16))[name = tensor<string, []>("op_761_cast_fp16")];
            tensor<string, []> var_763_equation_0 = const()[name = tensor<string, []>("op_763_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_763_cast_fp16 = einsum(equation = var_763_equation_0, values = (var_669_cast_fp16_14, var_732_cast_fp16))[name = tensor<string, []>("op_763_cast_fp16")];
            tensor<string, []> var_765_equation_0 = const()[name = tensor<string, []>("op_765_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_765_cast_fp16 = einsum(equation = var_765_equation_0, values = (var_669_cast_fp16_15, var_733_cast_fp16))[name = tensor<string, []>("op_765_cast_fp16")];
            tensor<bool, []> input_25_interleave_0 = const()[name = tensor<string, []>("input_25_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_25_cast_fp16 = concat(axis = var_582, interleave = input_25_interleave_0, values = (var_735_cast_fp16, var_737_cast_fp16, var_739_cast_fp16, var_741_cast_fp16, var_743_cast_fp16, var_745_cast_fp16, var_747_cast_fp16, var_749_cast_fp16, var_751_cast_fp16, var_753_cast_fp16, var_755_cast_fp16, var_757_cast_fp16, var_759_cast_fp16, var_761_cast_fp16, var_763_cast_fp16, var_765_cast_fp16))[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<string, []> var_774_pad_type_0 = const()[name = tensor<string, []>("op_774_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_774_strides_0 = const()[name = tensor<string, []>("op_774_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_774_pad_0 = const()[name = tensor<string, []>("op_774_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_774_dilations_0 = const()[name = tensor<string, []>("op_774_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_774_groups_0 = const()[name = tensor<string, []>("op_774_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_2_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66542272)))];
            tensor<fp16, [1024]> blocks_2_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68639488)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_774_cast_fp16 = conv(bias = blocks_2_attn_out_bias_to_fp16, dilations = var_774_dilations_0, groups = var_774_groups_0, pad = var_774_pad_0, pad_type = var_774_pad_type_0, strides = var_774_strides_0, weight = blocks_2_attn_out_weight_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("op_774_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_11_cast_fp16 = add(x = inputs_9_cast_fp16, y = var_774_cast_fp16)[name = tensor<string, []>("inputs_11_cast_fp16")];
            tensor<int32, [1]> input_27_axes_0 = const()[name = tensor<string, []>("input_27_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_27_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68641600)))];
            tensor<fp16, [1024]> input_27_beta_0_to_fp16 = const()[name = tensor<string, []>("input_27_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68643712)))];
            tensor<fp16, []> var_784_to_fp16 = const()[name = tensor<string, []>("op_784_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_27_cast_fp16 = layer_norm(axes = input_27_axes_0, beta = input_27_beta_0_to_fp16, epsilon = var_784_to_fp16, gamma = input_27_gamma_0_to_fp16, x = inputs_11_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_29_strides_0 = const()[name = tensor<string, []>("input_29_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_29_dilations_0 = const()[name = tensor<string, []>("input_29_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_29_groups_0 = const()[name = tensor<string, []>("input_29_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_2_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68645824)))];
            tensor<fp16, [4096]> blocks_2_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77034496)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_29_cast_fp16 = conv(bias = blocks_2_mlp_0_bias_to_fp16, dilations = input_29_dilations_0, groups = input_29_groups_0, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = input_29_strides_0, weight = blocks_2_mlp_0_weight_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<string, []> input_31_mode_0 = const()[name = tensor<string, []>("input_31_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_31_cast_fp16 = gelu(mode = input_31_mode_0, x = input_29_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<string, []> var_810_pad_type_0 = const()[name = tensor<string, []>("op_810_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_810_strides_0 = const()[name = tensor<string, []>("op_810_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_810_pad_0 = const()[name = tensor<string, []>("op_810_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_810_dilations_0 = const()[name = tensor<string, []>("op_810_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_810_groups_0 = const()[name = tensor<string, []>("op_810_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_2_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77042752)))];
            tensor<fp16, [1024]> blocks_2_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85431424)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_810_cast_fp16 = conv(bias = blocks_2_mlp_2_bias_to_fp16, dilations = var_810_dilations_0, groups = var_810_groups_0, pad = var_810_pad_0, pad_type = var_810_pad_type_0, strides = var_810_strides_0, weight = blocks_2_mlp_2_weight_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("op_810_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_13_cast_fp16 = add(x = inputs_11_cast_fp16, y = var_810_cast_fp16)[name = tensor<string, []>("inputs_13_cast_fp16")];
            tensor<int32, []> var_819 = const()[name = tensor<string, []>("op_819"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_33_axes_0 = const()[name = tensor<string, []>("input_33_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_33_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_33_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85433536)))];
            tensor<fp16, [1024]> input_33_beta_0_to_fp16 = const()[name = tensor<string, []>("input_33_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85435648)))];
            tensor<fp16, []> var_835_to_fp16 = const()[name = tensor<string, []>("op_835_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_33_cast_fp16 = layer_norm(axes = input_33_axes_0, beta = input_33_beta_0_to_fp16, epsilon = var_835_to_fp16, gamma = input_33_gamma_0_to_fp16, x = inputs_13_cast_fp16)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<string, []> q_7_pad_type_0 = const()[name = tensor<string, []>("q_7_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_7_strides_0 = const()[name = tensor<string, []>("q_7_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_7_pad_0 = const()[name = tensor<string, []>("q_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_7_dilations_0 = const()[name = tensor<string, []>("q_7_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_7_groups_0 = const()[name = tensor<string, []>("q_7_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_870_weight_0_to_fp16 = const()[name = tensor<string, []>("op_870_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85437760)))];
            tensor<fp16, [1024]> var_870_bias_0_to_fp16 = const()[name = tensor<string, []>("op_870_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87534976)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_870_cast_fp16 = conv(bias = var_870_bias_0_to_fp16, dilations = q_7_dilations_0, groups = q_7_groups_0, pad = q_7_pad_0, pad_type = q_7_pad_type_0, strides = q_7_strides_0, weight = var_870_weight_0_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("op_870_cast_fp16")];
            tensor<string, []> k_7_pad_type_0 = const()[name = tensor<string, []>("k_7_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_7_strides_0 = const()[name = tensor<string, []>("k_7_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_7_pad_0 = const()[name = tensor<string, []>("k_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_7_dilations_0 = const()[name = tensor<string, []>("k_7_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_7_groups_0 = const()[name = tensor<string, []>("k_7_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_3_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87537088)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_7_cast_fp16 = conv(dilations = k_7_dilations_0, groups = k_7_groups_0, pad = k_7_pad_0, pad_type = k_7_pad_type_0, strides = k_7_strides_0, weight = blocks_3_attn_key_weight_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("k_7_cast_fp16")];
            tensor<string, []> var_868_pad_type_0 = const()[name = tensor<string, []>("op_868_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_868_strides_0 = const()[name = tensor<string, []>("op_868_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_868_pad_0 = const()[name = tensor<string, []>("op_868_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_868_dilations_0 = const()[name = tensor<string, []>("op_868_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_868_groups_0 = const()[name = tensor<string, []>("op_868_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_3_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89634304)))];
            tensor<fp16, [1024]> blocks_3_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91731520)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_868_cast_fp16 = conv(bias = blocks_3_attn_value_bias_to_fp16, dilations = var_868_dilations_0, groups = var_868_groups_0, pad = var_868_pad_0, pad_type = var_868_pad_type_0, strides = var_868_strides_0, weight = blocks_3_attn_value_weight_to_fp16, x = input_33_cast_fp16)[name = tensor<string, []>("op_868_cast_fp16")];
            tensor<int32, [16]> tile_9 = const()[name = tensor<string, []>("tile_9"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_871_axis_0 = const()[name = tensor<string, []>("op_871_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_871_cast_fp16_15 = split(axis = var_871_axis_0, split_sizes = tile_9, x = var_870_cast_fp16)[name = tensor<string, []>("op_871_cast_fp16")];
            tensor<int32, [4]> var_888_perm_0 = const()[name = tensor<string, []>("op_888_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_10 = const()[name = tensor<string, []>("tile_10"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_889_axis_0 = const()[name = tensor<string, []>("op_889_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_888_cast_fp16 = transpose(perm = var_888_perm_0, x = k_7_cast_fp16)[name = tensor<string, []>("transpose_21")];
            tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_889_cast_fp16_15 = split(axis = var_889_axis_0, split_sizes = tile_10, x = var_888_cast_fp16)[name = tensor<string, []>("op_889_cast_fp16")];
            tensor<int32, [16]> tile_11 = const()[name = tensor<string, []>("tile_11"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_906_axis_0 = const()[name = tensor<string, []>("op_906_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_906_cast_fp16_15 = split(axis = var_906_axis_0, split_sizes = tile_11, x = var_868_cast_fp16)[name = tensor<string, []>("op_906_cast_fp16")];
            tensor<string, []> aw_97_equation_0 = const()[name = tensor<string, []>("aw_97_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_97_cast_fp16 = einsum(equation = aw_97_equation_0, values = (var_889_cast_fp16_0, var_871_cast_fp16_0))[name = tensor<string, []>("aw_97_cast_fp16")];
            tensor<string, []> aw_99_equation_0 = const()[name = tensor<string, []>("aw_99_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_99_cast_fp16 = einsum(equation = aw_99_equation_0, values = (var_889_cast_fp16_1, var_871_cast_fp16_1))[name = tensor<string, []>("aw_99_cast_fp16")];
            tensor<string, []> aw_101_equation_0 = const()[name = tensor<string, []>("aw_101_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_101_cast_fp16 = einsum(equation = aw_101_equation_0, values = (var_889_cast_fp16_2, var_871_cast_fp16_2))[name = tensor<string, []>("aw_101_cast_fp16")];
            tensor<string, []> aw_103_equation_0 = const()[name = tensor<string, []>("aw_103_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_103_cast_fp16 = einsum(equation = aw_103_equation_0, values = (var_889_cast_fp16_3, var_871_cast_fp16_3))[name = tensor<string, []>("aw_103_cast_fp16")];
            tensor<string, []> aw_105_equation_0 = const()[name = tensor<string, []>("aw_105_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_105_cast_fp16 = einsum(equation = aw_105_equation_0, values = (var_889_cast_fp16_4, var_871_cast_fp16_4))[name = tensor<string, []>("aw_105_cast_fp16")];
            tensor<string, []> aw_107_equation_0 = const()[name = tensor<string, []>("aw_107_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_107_cast_fp16 = einsum(equation = aw_107_equation_0, values = (var_889_cast_fp16_5, var_871_cast_fp16_5))[name = tensor<string, []>("aw_107_cast_fp16")];
            tensor<string, []> aw_109_equation_0 = const()[name = tensor<string, []>("aw_109_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_109_cast_fp16 = einsum(equation = aw_109_equation_0, values = (var_889_cast_fp16_6, var_871_cast_fp16_6))[name = tensor<string, []>("aw_109_cast_fp16")];
            tensor<string, []> aw_111_equation_0 = const()[name = tensor<string, []>("aw_111_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_111_cast_fp16 = einsum(equation = aw_111_equation_0, values = (var_889_cast_fp16_7, var_871_cast_fp16_7))[name = tensor<string, []>("aw_111_cast_fp16")];
            tensor<string, []> aw_113_equation_0 = const()[name = tensor<string, []>("aw_113_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_113_cast_fp16 = einsum(equation = aw_113_equation_0, values = (var_889_cast_fp16_8, var_871_cast_fp16_8))[name = tensor<string, []>("aw_113_cast_fp16")];
            tensor<string, []> aw_115_equation_0 = const()[name = tensor<string, []>("aw_115_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_115_cast_fp16 = einsum(equation = aw_115_equation_0, values = (var_889_cast_fp16_9, var_871_cast_fp16_9))[name = tensor<string, []>("aw_115_cast_fp16")];
            tensor<string, []> aw_117_equation_0 = const()[name = tensor<string, []>("aw_117_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_117_cast_fp16 = einsum(equation = aw_117_equation_0, values = (var_889_cast_fp16_10, var_871_cast_fp16_10))[name = tensor<string, []>("aw_117_cast_fp16")];
            tensor<string, []> aw_119_equation_0 = const()[name = tensor<string, []>("aw_119_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_119_cast_fp16 = einsum(equation = aw_119_equation_0, values = (var_889_cast_fp16_11, var_871_cast_fp16_11))[name = tensor<string, []>("aw_119_cast_fp16")];
            tensor<string, []> aw_121_equation_0 = const()[name = tensor<string, []>("aw_121_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_121_cast_fp16 = einsum(equation = aw_121_equation_0, values = (var_889_cast_fp16_12, var_871_cast_fp16_12))[name = tensor<string, []>("aw_121_cast_fp16")];
            tensor<string, []> aw_123_equation_0 = const()[name = tensor<string, []>("aw_123_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_123_cast_fp16 = einsum(equation = aw_123_equation_0, values = (var_889_cast_fp16_13, var_871_cast_fp16_13))[name = tensor<string, []>("aw_123_cast_fp16")];
            tensor<string, []> aw_125_equation_0 = const()[name = tensor<string, []>("aw_125_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_125_cast_fp16 = einsum(equation = aw_125_equation_0, values = (var_889_cast_fp16_14, var_871_cast_fp16_14))[name = tensor<string, []>("aw_125_cast_fp16")];
            tensor<string, []> aw_127_equation_0 = const()[name = tensor<string, []>("aw_127_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_127_cast_fp16 = einsum(equation = aw_127_equation_0, values = (var_889_cast_fp16_15, var_871_cast_fp16_15))[name = tensor<string, []>("aw_127_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_955_cast_fp16 = softmax(axis = var_819, x = aw_97_cast_fp16)[name = tensor<string, []>("op_955_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_956_cast_fp16 = softmax(axis = var_819, x = aw_99_cast_fp16)[name = tensor<string, []>("op_956_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_957_cast_fp16 = softmax(axis = var_819, x = aw_101_cast_fp16)[name = tensor<string, []>("op_957_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_958_cast_fp16 = softmax(axis = var_819, x = aw_103_cast_fp16)[name = tensor<string, []>("op_958_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_959_cast_fp16 = softmax(axis = var_819, x = aw_105_cast_fp16)[name = tensor<string, []>("op_959_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_960_cast_fp16 = softmax(axis = var_819, x = aw_107_cast_fp16)[name = tensor<string, []>("op_960_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_961_cast_fp16 = softmax(axis = var_819, x = aw_109_cast_fp16)[name = tensor<string, []>("op_961_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_962_cast_fp16 = softmax(axis = var_819, x = aw_111_cast_fp16)[name = tensor<string, []>("op_962_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_963_cast_fp16 = softmax(axis = var_819, x = aw_113_cast_fp16)[name = tensor<string, []>("op_963_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_964_cast_fp16 = softmax(axis = var_819, x = aw_115_cast_fp16)[name = tensor<string, []>("op_964_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_965_cast_fp16 = softmax(axis = var_819, x = aw_117_cast_fp16)[name = tensor<string, []>("op_965_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_966_cast_fp16 = softmax(axis = var_819, x = aw_119_cast_fp16)[name = tensor<string, []>("op_966_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_967_cast_fp16 = softmax(axis = var_819, x = aw_121_cast_fp16)[name = tensor<string, []>("op_967_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_968_cast_fp16 = softmax(axis = var_819, x = aw_123_cast_fp16)[name = tensor<string, []>("op_968_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_969_cast_fp16 = softmax(axis = var_819, x = aw_125_cast_fp16)[name = tensor<string, []>("op_969_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_970_cast_fp16 = softmax(axis = var_819, x = aw_127_cast_fp16)[name = tensor<string, []>("op_970_cast_fp16")];
            tensor<string, []> var_972_equation_0 = const()[name = tensor<string, []>("op_972_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_972_cast_fp16 = einsum(equation = var_972_equation_0, values = (var_906_cast_fp16_0, var_955_cast_fp16))[name = tensor<string, []>("op_972_cast_fp16")];
            tensor<string, []> var_974_equation_0 = const()[name = tensor<string, []>("op_974_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_974_cast_fp16 = einsum(equation = var_974_equation_0, values = (var_906_cast_fp16_1, var_956_cast_fp16))[name = tensor<string, []>("op_974_cast_fp16")];
            tensor<string, []> var_976_equation_0 = const()[name = tensor<string, []>("op_976_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_976_cast_fp16 = einsum(equation = var_976_equation_0, values = (var_906_cast_fp16_2, var_957_cast_fp16))[name = tensor<string, []>("op_976_cast_fp16")];
            tensor<string, []> var_978_equation_0 = const()[name = tensor<string, []>("op_978_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_978_cast_fp16 = einsum(equation = var_978_equation_0, values = (var_906_cast_fp16_3, var_958_cast_fp16))[name = tensor<string, []>("op_978_cast_fp16")];
            tensor<string, []> var_980_equation_0 = const()[name = tensor<string, []>("op_980_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_980_cast_fp16 = einsum(equation = var_980_equation_0, values = (var_906_cast_fp16_4, var_959_cast_fp16))[name = tensor<string, []>("op_980_cast_fp16")];
            tensor<string, []> var_982_equation_0 = const()[name = tensor<string, []>("op_982_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_982_cast_fp16 = einsum(equation = var_982_equation_0, values = (var_906_cast_fp16_5, var_960_cast_fp16))[name = tensor<string, []>("op_982_cast_fp16")];
            tensor<string, []> var_984_equation_0 = const()[name = tensor<string, []>("op_984_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_984_cast_fp16 = einsum(equation = var_984_equation_0, values = (var_906_cast_fp16_6, var_961_cast_fp16))[name = tensor<string, []>("op_984_cast_fp16")];
            tensor<string, []> var_986_equation_0 = const()[name = tensor<string, []>("op_986_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_986_cast_fp16 = einsum(equation = var_986_equation_0, values = (var_906_cast_fp16_7, var_962_cast_fp16))[name = tensor<string, []>("op_986_cast_fp16")];
            tensor<string, []> var_988_equation_0 = const()[name = tensor<string, []>("op_988_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_988_cast_fp16 = einsum(equation = var_988_equation_0, values = (var_906_cast_fp16_8, var_963_cast_fp16))[name = tensor<string, []>("op_988_cast_fp16")];
            tensor<string, []> var_990_equation_0 = const()[name = tensor<string, []>("op_990_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_990_cast_fp16 = einsum(equation = var_990_equation_0, values = (var_906_cast_fp16_9, var_964_cast_fp16))[name = tensor<string, []>("op_990_cast_fp16")];
            tensor<string, []> var_992_equation_0 = const()[name = tensor<string, []>("op_992_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_992_cast_fp16 = einsum(equation = var_992_equation_0, values = (var_906_cast_fp16_10, var_965_cast_fp16))[name = tensor<string, []>("op_992_cast_fp16")];
            tensor<string, []> var_994_equation_0 = const()[name = tensor<string, []>("op_994_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_994_cast_fp16 = einsum(equation = var_994_equation_0, values = (var_906_cast_fp16_11, var_966_cast_fp16))[name = tensor<string, []>("op_994_cast_fp16")];
            tensor<string, []> var_996_equation_0 = const()[name = tensor<string, []>("op_996_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_996_cast_fp16 = einsum(equation = var_996_equation_0, values = (var_906_cast_fp16_12, var_967_cast_fp16))[name = tensor<string, []>("op_996_cast_fp16")];
            tensor<string, []> var_998_equation_0 = const()[name = tensor<string, []>("op_998_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_998_cast_fp16 = einsum(equation = var_998_equation_0, values = (var_906_cast_fp16_13, var_968_cast_fp16))[name = tensor<string, []>("op_998_cast_fp16")];
            tensor<string, []> var_1000_equation_0 = const()[name = tensor<string, []>("op_1000_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1000_cast_fp16 = einsum(equation = var_1000_equation_0, values = (var_906_cast_fp16_14, var_969_cast_fp16))[name = tensor<string, []>("op_1000_cast_fp16")];
            tensor<string, []> var_1002_equation_0 = const()[name = tensor<string, []>("op_1002_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1002_cast_fp16 = einsum(equation = var_1002_equation_0, values = (var_906_cast_fp16_15, var_970_cast_fp16))[name = tensor<string, []>("op_1002_cast_fp16")];
            tensor<bool, []> input_35_interleave_0 = const()[name = tensor<string, []>("input_35_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_35_cast_fp16 = concat(axis = var_819, interleave = input_35_interleave_0, values = (var_972_cast_fp16, var_974_cast_fp16, var_976_cast_fp16, var_978_cast_fp16, var_980_cast_fp16, var_982_cast_fp16, var_984_cast_fp16, var_986_cast_fp16, var_988_cast_fp16, var_990_cast_fp16, var_992_cast_fp16, var_994_cast_fp16, var_996_cast_fp16, var_998_cast_fp16, var_1000_cast_fp16, var_1002_cast_fp16))[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<string, []> var_1011_pad_type_0 = const()[name = tensor<string, []>("op_1011_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1011_strides_0 = const()[name = tensor<string, []>("op_1011_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1011_pad_0 = const()[name = tensor<string, []>("op_1011_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1011_dilations_0 = const()[name = tensor<string, []>("op_1011_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1011_groups_0 = const()[name = tensor<string, []>("op_1011_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_3_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91733632)))];
            tensor<fp16, [1024]> blocks_3_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93830848)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1011_cast_fp16 = conv(bias = blocks_3_attn_out_bias_to_fp16, dilations = var_1011_dilations_0, groups = var_1011_groups_0, pad = var_1011_pad_0, pad_type = var_1011_pad_type_0, strides = var_1011_strides_0, weight = blocks_3_attn_out_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("op_1011_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_15_cast_fp16 = add(x = inputs_13_cast_fp16, y = var_1011_cast_fp16)[name = tensor<string, []>("inputs_15_cast_fp16")];
            tensor<int32, [1]> input_37_axes_0 = const()[name = tensor<string, []>("input_37_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_37_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93832960)))];
            tensor<fp16, [1024]> input_37_beta_0_to_fp16 = const()[name = tensor<string, []>("input_37_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93835072)))];
            tensor<fp16, []> var_1021_to_fp16 = const()[name = tensor<string, []>("op_1021_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_37_cast_fp16 = layer_norm(axes = input_37_axes_0, beta = input_37_beta_0_to_fp16, epsilon = var_1021_to_fp16, gamma = input_37_gamma_0_to_fp16, x = inputs_15_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<string, []> input_39_pad_type_0 = const()[name = tensor<string, []>("input_39_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_39_strides_0 = const()[name = tensor<string, []>("input_39_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_39_pad_0 = const()[name = tensor<string, []>("input_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_39_dilations_0 = const()[name = tensor<string, []>("input_39_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_39_groups_0 = const()[name = tensor<string, []>("input_39_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_3_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93837184)))];
            tensor<fp16, [4096]> blocks_3_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(102225856)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_39_cast_fp16 = conv(bias = blocks_3_mlp_0_bias_to_fp16, dilations = input_39_dilations_0, groups = input_39_groups_0, pad = input_39_pad_0, pad_type = input_39_pad_type_0, strides = input_39_strides_0, weight = blocks_3_mlp_0_weight_to_fp16, x = input_37_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<string, []> input_41_mode_0 = const()[name = tensor<string, []>("input_41_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_41_cast_fp16 = gelu(mode = input_41_mode_0, x = input_39_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<string, []> var_1047_pad_type_0 = const()[name = tensor<string, []>("op_1047_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1047_strides_0 = const()[name = tensor<string, []>("op_1047_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1047_pad_0 = const()[name = tensor<string, []>("op_1047_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1047_dilations_0 = const()[name = tensor<string, []>("op_1047_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1047_groups_0 = const()[name = tensor<string, []>("op_1047_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_3_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(102234112)))];
            tensor<fp16, [1024]> blocks_3_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(110622784)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1047_cast_fp16 = conv(bias = blocks_3_mlp_2_bias_to_fp16, dilations = var_1047_dilations_0, groups = var_1047_groups_0, pad = var_1047_pad_0, pad_type = var_1047_pad_type_0, strides = var_1047_strides_0, weight = blocks_3_mlp_2_weight_to_fp16, x = input_41_cast_fp16)[name = tensor<string, []>("op_1047_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_17_cast_fp16 = add(x = inputs_15_cast_fp16, y = var_1047_cast_fp16)[name = tensor<string, []>("inputs_17_cast_fp16")];
            tensor<int32, []> var_1056 = const()[name = tensor<string, []>("op_1056"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_43_axes_0 = const()[name = tensor<string, []>("input_43_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_43_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(110624896)))];
            tensor<fp16, [1024]> input_43_beta_0_to_fp16 = const()[name = tensor<string, []>("input_43_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(110627008)))];
            tensor<fp16, []> var_1072_to_fp16 = const()[name = tensor<string, []>("op_1072_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_43_cast_fp16 = layer_norm(axes = input_43_axes_0, beta = input_43_beta_0_to_fp16, epsilon = var_1072_to_fp16, gamma = input_43_gamma_0_to_fp16, x = inputs_17_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<string, []> q_9_pad_type_0 = const()[name = tensor<string, []>("q_9_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_9_strides_0 = const()[name = tensor<string, []>("q_9_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_9_pad_0 = const()[name = tensor<string, []>("q_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_9_dilations_0 = const()[name = tensor<string, []>("q_9_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_9_groups_0 = const()[name = tensor<string, []>("q_9_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_1107_weight_0_to_fp16 = const()[name = tensor<string, []>("op_1107_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(110629120)))];
            tensor<fp16, [1024]> var_1107_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1107_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(112726336)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1107_cast_fp16 = conv(bias = var_1107_bias_0_to_fp16, dilations = q_9_dilations_0, groups = q_9_groups_0, pad = q_9_pad_0, pad_type = q_9_pad_type_0, strides = q_9_strides_0, weight = var_1107_weight_0_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("op_1107_cast_fp16")];
            tensor<string, []> k_9_pad_type_0 = const()[name = tensor<string, []>("k_9_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_9_strides_0 = const()[name = tensor<string, []>("k_9_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_9_pad_0 = const()[name = tensor<string, []>("k_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_9_dilations_0 = const()[name = tensor<string, []>("k_9_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_9_groups_0 = const()[name = tensor<string, []>("k_9_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_4_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(112728448)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_9_cast_fp16 = conv(dilations = k_9_dilations_0, groups = k_9_groups_0, pad = k_9_pad_0, pad_type = k_9_pad_type_0, strides = k_9_strides_0, weight = blocks_4_attn_key_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("k_9_cast_fp16")];
            tensor<string, []> var_1105_pad_type_0 = const()[name = tensor<string, []>("op_1105_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1105_strides_0 = const()[name = tensor<string, []>("op_1105_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1105_pad_0 = const()[name = tensor<string, []>("op_1105_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1105_dilations_0 = const()[name = tensor<string, []>("op_1105_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1105_groups_0 = const()[name = tensor<string, []>("op_1105_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_4_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(114825664)))];
            tensor<fp16, [1024]> blocks_4_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116922880)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1105_cast_fp16 = conv(bias = blocks_4_attn_value_bias_to_fp16, dilations = var_1105_dilations_0, groups = var_1105_groups_0, pad = var_1105_pad_0, pad_type = var_1105_pad_type_0, strides = var_1105_strides_0, weight = blocks_4_attn_value_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("op_1105_cast_fp16")];
            tensor<int32, [16]> tile_12 = const()[name = tensor<string, []>("tile_12"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1108_axis_0 = const()[name = tensor<string, []>("op_1108_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1108_cast_fp16_15 = split(axis = var_1108_axis_0, split_sizes = tile_12, x = var_1107_cast_fp16)[name = tensor<string, []>("op_1108_cast_fp16")];
            tensor<int32, [4]> var_1125_perm_0 = const()[name = tensor<string, []>("op_1125_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_13 = const()[name = tensor<string, []>("tile_13"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1126_axis_0 = const()[name = tensor<string, []>("op_1126_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_1125_cast_fp16 = transpose(perm = var_1125_perm_0, x = k_9_cast_fp16)[name = tensor<string, []>("transpose_20")];
            tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_1126_cast_fp16_15 = split(axis = var_1126_axis_0, split_sizes = tile_13, x = var_1125_cast_fp16)[name = tensor<string, []>("op_1126_cast_fp16")];
            tensor<int32, [16]> tile_14 = const()[name = tensor<string, []>("tile_14"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1143_axis_0 = const()[name = tensor<string, []>("op_1143_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1143_cast_fp16_15 = split(axis = var_1143_axis_0, split_sizes = tile_14, x = var_1105_cast_fp16)[name = tensor<string, []>("op_1143_cast_fp16")];
            tensor<string, []> aw_129_equation_0 = const()[name = tensor<string, []>("aw_129_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_129_cast_fp16 = einsum(equation = aw_129_equation_0, values = (var_1126_cast_fp16_0, var_1108_cast_fp16_0))[name = tensor<string, []>("aw_129_cast_fp16")];
            tensor<string, []> aw_131_equation_0 = const()[name = tensor<string, []>("aw_131_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_131_cast_fp16 = einsum(equation = aw_131_equation_0, values = (var_1126_cast_fp16_1, var_1108_cast_fp16_1))[name = tensor<string, []>("aw_131_cast_fp16")];
            tensor<string, []> aw_133_equation_0 = const()[name = tensor<string, []>("aw_133_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_133_cast_fp16 = einsum(equation = aw_133_equation_0, values = (var_1126_cast_fp16_2, var_1108_cast_fp16_2))[name = tensor<string, []>("aw_133_cast_fp16")];
            tensor<string, []> aw_135_equation_0 = const()[name = tensor<string, []>("aw_135_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_135_cast_fp16 = einsum(equation = aw_135_equation_0, values = (var_1126_cast_fp16_3, var_1108_cast_fp16_3))[name = tensor<string, []>("aw_135_cast_fp16")];
            tensor<string, []> aw_137_equation_0 = const()[name = tensor<string, []>("aw_137_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_137_cast_fp16 = einsum(equation = aw_137_equation_0, values = (var_1126_cast_fp16_4, var_1108_cast_fp16_4))[name = tensor<string, []>("aw_137_cast_fp16")];
            tensor<string, []> aw_139_equation_0 = const()[name = tensor<string, []>("aw_139_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_139_cast_fp16 = einsum(equation = aw_139_equation_0, values = (var_1126_cast_fp16_5, var_1108_cast_fp16_5))[name = tensor<string, []>("aw_139_cast_fp16")];
            tensor<string, []> aw_141_equation_0 = const()[name = tensor<string, []>("aw_141_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_141_cast_fp16 = einsum(equation = aw_141_equation_0, values = (var_1126_cast_fp16_6, var_1108_cast_fp16_6))[name = tensor<string, []>("aw_141_cast_fp16")];
            tensor<string, []> aw_143_equation_0 = const()[name = tensor<string, []>("aw_143_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_143_cast_fp16 = einsum(equation = aw_143_equation_0, values = (var_1126_cast_fp16_7, var_1108_cast_fp16_7))[name = tensor<string, []>("aw_143_cast_fp16")];
            tensor<string, []> aw_145_equation_0 = const()[name = tensor<string, []>("aw_145_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_145_cast_fp16 = einsum(equation = aw_145_equation_0, values = (var_1126_cast_fp16_8, var_1108_cast_fp16_8))[name = tensor<string, []>("aw_145_cast_fp16")];
            tensor<string, []> aw_147_equation_0 = const()[name = tensor<string, []>("aw_147_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_147_cast_fp16 = einsum(equation = aw_147_equation_0, values = (var_1126_cast_fp16_9, var_1108_cast_fp16_9))[name = tensor<string, []>("aw_147_cast_fp16")];
            tensor<string, []> aw_149_equation_0 = const()[name = tensor<string, []>("aw_149_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_149_cast_fp16 = einsum(equation = aw_149_equation_0, values = (var_1126_cast_fp16_10, var_1108_cast_fp16_10))[name = tensor<string, []>("aw_149_cast_fp16")];
            tensor<string, []> aw_151_equation_0 = const()[name = tensor<string, []>("aw_151_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_151_cast_fp16 = einsum(equation = aw_151_equation_0, values = (var_1126_cast_fp16_11, var_1108_cast_fp16_11))[name = tensor<string, []>("aw_151_cast_fp16")];
            tensor<string, []> aw_153_equation_0 = const()[name = tensor<string, []>("aw_153_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_153_cast_fp16 = einsum(equation = aw_153_equation_0, values = (var_1126_cast_fp16_12, var_1108_cast_fp16_12))[name = tensor<string, []>("aw_153_cast_fp16")];
            tensor<string, []> aw_155_equation_0 = const()[name = tensor<string, []>("aw_155_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_155_cast_fp16 = einsum(equation = aw_155_equation_0, values = (var_1126_cast_fp16_13, var_1108_cast_fp16_13))[name = tensor<string, []>("aw_155_cast_fp16")];
            tensor<string, []> aw_157_equation_0 = const()[name = tensor<string, []>("aw_157_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_157_cast_fp16 = einsum(equation = aw_157_equation_0, values = (var_1126_cast_fp16_14, var_1108_cast_fp16_14))[name = tensor<string, []>("aw_157_cast_fp16")];
            tensor<string, []> aw_159_equation_0 = const()[name = tensor<string, []>("aw_159_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_159_cast_fp16 = einsum(equation = aw_159_equation_0, values = (var_1126_cast_fp16_15, var_1108_cast_fp16_15))[name = tensor<string, []>("aw_159_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1192_cast_fp16 = softmax(axis = var_1056, x = aw_129_cast_fp16)[name = tensor<string, []>("op_1192_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1193_cast_fp16 = softmax(axis = var_1056, x = aw_131_cast_fp16)[name = tensor<string, []>("op_1193_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1194_cast_fp16 = softmax(axis = var_1056, x = aw_133_cast_fp16)[name = tensor<string, []>("op_1194_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1195_cast_fp16 = softmax(axis = var_1056, x = aw_135_cast_fp16)[name = tensor<string, []>("op_1195_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1196_cast_fp16 = softmax(axis = var_1056, x = aw_137_cast_fp16)[name = tensor<string, []>("op_1196_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1197_cast_fp16 = softmax(axis = var_1056, x = aw_139_cast_fp16)[name = tensor<string, []>("op_1197_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1198_cast_fp16 = softmax(axis = var_1056, x = aw_141_cast_fp16)[name = tensor<string, []>("op_1198_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1199_cast_fp16 = softmax(axis = var_1056, x = aw_143_cast_fp16)[name = tensor<string, []>("op_1199_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1200_cast_fp16 = softmax(axis = var_1056, x = aw_145_cast_fp16)[name = tensor<string, []>("op_1200_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1201_cast_fp16 = softmax(axis = var_1056, x = aw_147_cast_fp16)[name = tensor<string, []>("op_1201_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1202_cast_fp16 = softmax(axis = var_1056, x = aw_149_cast_fp16)[name = tensor<string, []>("op_1202_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1203_cast_fp16 = softmax(axis = var_1056, x = aw_151_cast_fp16)[name = tensor<string, []>("op_1203_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1204_cast_fp16 = softmax(axis = var_1056, x = aw_153_cast_fp16)[name = tensor<string, []>("op_1204_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1205_cast_fp16 = softmax(axis = var_1056, x = aw_155_cast_fp16)[name = tensor<string, []>("op_1205_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1206_cast_fp16 = softmax(axis = var_1056, x = aw_157_cast_fp16)[name = tensor<string, []>("op_1206_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1207_cast_fp16 = softmax(axis = var_1056, x = aw_159_cast_fp16)[name = tensor<string, []>("op_1207_cast_fp16")];
            tensor<string, []> var_1209_equation_0 = const()[name = tensor<string, []>("op_1209_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1209_cast_fp16 = einsum(equation = var_1209_equation_0, values = (var_1143_cast_fp16_0, var_1192_cast_fp16))[name = tensor<string, []>("op_1209_cast_fp16")];
            tensor<string, []> var_1211_equation_0 = const()[name = tensor<string, []>("op_1211_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1211_cast_fp16 = einsum(equation = var_1211_equation_0, values = (var_1143_cast_fp16_1, var_1193_cast_fp16))[name = tensor<string, []>("op_1211_cast_fp16")];
            tensor<string, []> var_1213_equation_0 = const()[name = tensor<string, []>("op_1213_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1213_cast_fp16 = einsum(equation = var_1213_equation_0, values = (var_1143_cast_fp16_2, var_1194_cast_fp16))[name = tensor<string, []>("op_1213_cast_fp16")];
            tensor<string, []> var_1215_equation_0 = const()[name = tensor<string, []>("op_1215_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1215_cast_fp16 = einsum(equation = var_1215_equation_0, values = (var_1143_cast_fp16_3, var_1195_cast_fp16))[name = tensor<string, []>("op_1215_cast_fp16")];
            tensor<string, []> var_1217_equation_0 = const()[name = tensor<string, []>("op_1217_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1217_cast_fp16 = einsum(equation = var_1217_equation_0, values = (var_1143_cast_fp16_4, var_1196_cast_fp16))[name = tensor<string, []>("op_1217_cast_fp16")];
            tensor<string, []> var_1219_equation_0 = const()[name = tensor<string, []>("op_1219_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1219_cast_fp16 = einsum(equation = var_1219_equation_0, values = (var_1143_cast_fp16_5, var_1197_cast_fp16))[name = tensor<string, []>("op_1219_cast_fp16")];
            tensor<string, []> var_1221_equation_0 = const()[name = tensor<string, []>("op_1221_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1221_cast_fp16 = einsum(equation = var_1221_equation_0, values = (var_1143_cast_fp16_6, var_1198_cast_fp16))[name = tensor<string, []>("op_1221_cast_fp16")];
            tensor<string, []> var_1223_equation_0 = const()[name = tensor<string, []>("op_1223_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1223_cast_fp16 = einsum(equation = var_1223_equation_0, values = (var_1143_cast_fp16_7, var_1199_cast_fp16))[name = tensor<string, []>("op_1223_cast_fp16")];
            tensor<string, []> var_1225_equation_0 = const()[name = tensor<string, []>("op_1225_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1225_cast_fp16 = einsum(equation = var_1225_equation_0, values = (var_1143_cast_fp16_8, var_1200_cast_fp16))[name = tensor<string, []>("op_1225_cast_fp16")];
            tensor<string, []> var_1227_equation_0 = const()[name = tensor<string, []>("op_1227_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1227_cast_fp16 = einsum(equation = var_1227_equation_0, values = (var_1143_cast_fp16_9, var_1201_cast_fp16))[name = tensor<string, []>("op_1227_cast_fp16")];
            tensor<string, []> var_1229_equation_0 = const()[name = tensor<string, []>("op_1229_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1229_cast_fp16 = einsum(equation = var_1229_equation_0, values = (var_1143_cast_fp16_10, var_1202_cast_fp16))[name = tensor<string, []>("op_1229_cast_fp16")];
            tensor<string, []> var_1231_equation_0 = const()[name = tensor<string, []>("op_1231_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1231_cast_fp16 = einsum(equation = var_1231_equation_0, values = (var_1143_cast_fp16_11, var_1203_cast_fp16))[name = tensor<string, []>("op_1231_cast_fp16")];
            tensor<string, []> var_1233_equation_0 = const()[name = tensor<string, []>("op_1233_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1233_cast_fp16 = einsum(equation = var_1233_equation_0, values = (var_1143_cast_fp16_12, var_1204_cast_fp16))[name = tensor<string, []>("op_1233_cast_fp16")];
            tensor<string, []> var_1235_equation_0 = const()[name = tensor<string, []>("op_1235_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1235_cast_fp16 = einsum(equation = var_1235_equation_0, values = (var_1143_cast_fp16_13, var_1205_cast_fp16))[name = tensor<string, []>("op_1235_cast_fp16")];
            tensor<string, []> var_1237_equation_0 = const()[name = tensor<string, []>("op_1237_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1237_cast_fp16 = einsum(equation = var_1237_equation_0, values = (var_1143_cast_fp16_14, var_1206_cast_fp16))[name = tensor<string, []>("op_1237_cast_fp16")];
            tensor<string, []> var_1239_equation_0 = const()[name = tensor<string, []>("op_1239_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1239_cast_fp16 = einsum(equation = var_1239_equation_0, values = (var_1143_cast_fp16_15, var_1207_cast_fp16))[name = tensor<string, []>("op_1239_cast_fp16")];
            tensor<bool, []> input_45_interleave_0 = const()[name = tensor<string, []>("input_45_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_45_cast_fp16 = concat(axis = var_1056, interleave = input_45_interleave_0, values = (var_1209_cast_fp16, var_1211_cast_fp16, var_1213_cast_fp16, var_1215_cast_fp16, var_1217_cast_fp16, var_1219_cast_fp16, var_1221_cast_fp16, var_1223_cast_fp16, var_1225_cast_fp16, var_1227_cast_fp16, var_1229_cast_fp16, var_1231_cast_fp16, var_1233_cast_fp16, var_1235_cast_fp16, var_1237_cast_fp16, var_1239_cast_fp16))[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<string, []> var_1248_pad_type_0 = const()[name = tensor<string, []>("op_1248_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1248_strides_0 = const()[name = tensor<string, []>("op_1248_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1248_pad_0 = const()[name = tensor<string, []>("op_1248_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1248_dilations_0 = const()[name = tensor<string, []>("op_1248_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1248_groups_0 = const()[name = tensor<string, []>("op_1248_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_4_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116924992)))];
            tensor<fp16, [1024]> blocks_4_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_4_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119022208)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1248_cast_fp16 = conv(bias = blocks_4_attn_out_bias_to_fp16, dilations = var_1248_dilations_0, groups = var_1248_groups_0, pad = var_1248_pad_0, pad_type = var_1248_pad_type_0, strides = var_1248_strides_0, weight = blocks_4_attn_out_weight_to_fp16, x = input_45_cast_fp16)[name = tensor<string, []>("op_1248_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_19_cast_fp16 = add(x = inputs_17_cast_fp16, y = var_1248_cast_fp16)[name = tensor<string, []>("inputs_19_cast_fp16")];
            tensor<int32, [1]> input_47_axes_0 = const()[name = tensor<string, []>("input_47_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_47_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_47_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119024320)))];
            tensor<fp16, [1024]> input_47_beta_0_to_fp16 = const()[name = tensor<string, []>("input_47_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119026432)))];
            tensor<fp16, []> var_1258_to_fp16 = const()[name = tensor<string, []>("op_1258_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_47_cast_fp16 = layer_norm(axes = input_47_axes_0, beta = input_47_beta_0_to_fp16, epsilon = var_1258_to_fp16, gamma = input_47_gamma_0_to_fp16, x = inputs_19_cast_fp16)[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_49_strides_0 = const()[name = tensor<string, []>("input_49_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_49_dilations_0 = const()[name = tensor<string, []>("input_49_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_49_groups_0 = const()[name = tensor<string, []>("input_49_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_4_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(119028544)))];
            tensor<fp16, [4096]> blocks_4_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_4_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127417216)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_49_cast_fp16 = conv(bias = blocks_4_mlp_0_bias_to_fp16, dilations = input_49_dilations_0, groups = input_49_groups_0, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = input_49_strides_0, weight = blocks_4_mlp_0_weight_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<string, []> input_51_mode_0 = const()[name = tensor<string, []>("input_51_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_51_cast_fp16 = gelu(mode = input_51_mode_0, x = input_49_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<string, []> var_1284_pad_type_0 = const()[name = tensor<string, []>("op_1284_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1284_strides_0 = const()[name = tensor<string, []>("op_1284_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1284_pad_0 = const()[name = tensor<string, []>("op_1284_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1284_dilations_0 = const()[name = tensor<string, []>("op_1284_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1284_groups_0 = const()[name = tensor<string, []>("op_1284_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_4_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_4_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127425472)))];
            tensor<fp16, [1024]> blocks_4_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_4_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(135814144)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1284_cast_fp16 = conv(bias = blocks_4_mlp_2_bias_to_fp16, dilations = var_1284_dilations_0, groups = var_1284_groups_0, pad = var_1284_pad_0, pad_type = var_1284_pad_type_0, strides = var_1284_strides_0, weight = blocks_4_mlp_2_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("op_1284_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_21_cast_fp16 = add(x = inputs_19_cast_fp16, y = var_1284_cast_fp16)[name = tensor<string, []>("inputs_21_cast_fp16")];
            tensor<int32, []> var_1293 = const()[name = tensor<string, []>("op_1293"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_53_axes_0 = const()[name = tensor<string, []>("input_53_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_53_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_53_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(135816256)))];
            tensor<fp16, [1024]> input_53_beta_0_to_fp16 = const()[name = tensor<string, []>("input_53_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(135818368)))];
            tensor<fp16, []> var_1309_to_fp16 = const()[name = tensor<string, []>("op_1309_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_53_cast_fp16 = layer_norm(axes = input_53_axes_0, beta = input_53_beta_0_to_fp16, epsilon = var_1309_to_fp16, gamma = input_53_gamma_0_to_fp16, x = inputs_21_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<string, []> q_11_pad_type_0 = const()[name = tensor<string, []>("q_11_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_11_strides_0 = const()[name = tensor<string, []>("q_11_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_11_pad_0 = const()[name = tensor<string, []>("q_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_11_dilations_0 = const()[name = tensor<string, []>("q_11_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_11_groups_0 = const()[name = tensor<string, []>("q_11_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_1344_weight_0_to_fp16 = const()[name = tensor<string, []>("op_1344_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(135820480)))];
            tensor<fp16, [1024]> var_1344_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1344_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137917696)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1344_cast_fp16 = conv(bias = var_1344_bias_0_to_fp16, dilations = q_11_dilations_0, groups = q_11_groups_0, pad = q_11_pad_0, pad_type = q_11_pad_type_0, strides = q_11_strides_0, weight = var_1344_weight_0_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("op_1344_cast_fp16")];
            tensor<string, []> k_11_pad_type_0 = const()[name = tensor<string, []>("k_11_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_11_strides_0 = const()[name = tensor<string, []>("k_11_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_11_pad_0 = const()[name = tensor<string, []>("k_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_11_dilations_0 = const()[name = tensor<string, []>("k_11_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_11_groups_0 = const()[name = tensor<string, []>("k_11_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_5_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(137919808)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_11_cast_fp16 = conv(dilations = k_11_dilations_0, groups = k_11_groups_0, pad = k_11_pad_0, pad_type = k_11_pad_type_0, strides = k_11_strides_0, weight = blocks_5_attn_key_weight_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("k_11_cast_fp16")];
            tensor<string, []> var_1342_pad_type_0 = const()[name = tensor<string, []>("op_1342_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1342_strides_0 = const()[name = tensor<string, []>("op_1342_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1342_pad_0 = const()[name = tensor<string, []>("op_1342_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1342_dilations_0 = const()[name = tensor<string, []>("op_1342_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1342_groups_0 = const()[name = tensor<string, []>("op_1342_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_5_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(140017024)))];
            tensor<fp16, [1024]> blocks_5_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(142114240)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1342_cast_fp16 = conv(bias = blocks_5_attn_value_bias_to_fp16, dilations = var_1342_dilations_0, groups = var_1342_groups_0, pad = var_1342_pad_0, pad_type = var_1342_pad_type_0, strides = var_1342_strides_0, weight = blocks_5_attn_value_weight_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("op_1342_cast_fp16")];
            tensor<int32, [16]> tile_15 = const()[name = tensor<string, []>("tile_15"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1345_axis_0 = const()[name = tensor<string, []>("op_1345_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1345_cast_fp16_15 = split(axis = var_1345_axis_0, split_sizes = tile_15, x = var_1344_cast_fp16)[name = tensor<string, []>("op_1345_cast_fp16")];
            tensor<int32, [4]> var_1362_perm_0 = const()[name = tensor<string, []>("op_1362_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_16 = const()[name = tensor<string, []>("tile_16"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1363_axis_0 = const()[name = tensor<string, []>("op_1363_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_1362_cast_fp16 = transpose(perm = var_1362_perm_0, x = k_11_cast_fp16)[name = tensor<string, []>("transpose_19")];
            tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_1363_cast_fp16_15 = split(axis = var_1363_axis_0, split_sizes = tile_16, x = var_1362_cast_fp16)[name = tensor<string, []>("op_1363_cast_fp16")];
            tensor<int32, [16]> tile_17 = const()[name = tensor<string, []>("tile_17"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1380_axis_0 = const()[name = tensor<string, []>("op_1380_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1380_cast_fp16_15 = split(axis = var_1380_axis_0, split_sizes = tile_17, x = var_1342_cast_fp16)[name = tensor<string, []>("op_1380_cast_fp16")];
            tensor<string, []> aw_161_equation_0 = const()[name = tensor<string, []>("aw_161_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_161_cast_fp16 = einsum(equation = aw_161_equation_0, values = (var_1363_cast_fp16_0, var_1345_cast_fp16_0))[name = tensor<string, []>("aw_161_cast_fp16")];
            tensor<string, []> aw_163_equation_0 = const()[name = tensor<string, []>("aw_163_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_163_cast_fp16 = einsum(equation = aw_163_equation_0, values = (var_1363_cast_fp16_1, var_1345_cast_fp16_1))[name = tensor<string, []>("aw_163_cast_fp16")];
            tensor<string, []> aw_165_equation_0 = const()[name = tensor<string, []>("aw_165_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_165_cast_fp16 = einsum(equation = aw_165_equation_0, values = (var_1363_cast_fp16_2, var_1345_cast_fp16_2))[name = tensor<string, []>("aw_165_cast_fp16")];
            tensor<string, []> aw_167_equation_0 = const()[name = tensor<string, []>("aw_167_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_167_cast_fp16 = einsum(equation = aw_167_equation_0, values = (var_1363_cast_fp16_3, var_1345_cast_fp16_3))[name = tensor<string, []>("aw_167_cast_fp16")];
            tensor<string, []> aw_169_equation_0 = const()[name = tensor<string, []>("aw_169_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_169_cast_fp16 = einsum(equation = aw_169_equation_0, values = (var_1363_cast_fp16_4, var_1345_cast_fp16_4))[name = tensor<string, []>("aw_169_cast_fp16")];
            tensor<string, []> aw_171_equation_0 = const()[name = tensor<string, []>("aw_171_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_171_cast_fp16 = einsum(equation = aw_171_equation_0, values = (var_1363_cast_fp16_5, var_1345_cast_fp16_5))[name = tensor<string, []>("aw_171_cast_fp16")];
            tensor<string, []> aw_173_equation_0 = const()[name = tensor<string, []>("aw_173_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_173_cast_fp16 = einsum(equation = aw_173_equation_0, values = (var_1363_cast_fp16_6, var_1345_cast_fp16_6))[name = tensor<string, []>("aw_173_cast_fp16")];
            tensor<string, []> aw_175_equation_0 = const()[name = tensor<string, []>("aw_175_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_175_cast_fp16 = einsum(equation = aw_175_equation_0, values = (var_1363_cast_fp16_7, var_1345_cast_fp16_7))[name = tensor<string, []>("aw_175_cast_fp16")];
            tensor<string, []> aw_177_equation_0 = const()[name = tensor<string, []>("aw_177_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_177_cast_fp16 = einsum(equation = aw_177_equation_0, values = (var_1363_cast_fp16_8, var_1345_cast_fp16_8))[name = tensor<string, []>("aw_177_cast_fp16")];
            tensor<string, []> aw_179_equation_0 = const()[name = tensor<string, []>("aw_179_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_179_cast_fp16 = einsum(equation = aw_179_equation_0, values = (var_1363_cast_fp16_9, var_1345_cast_fp16_9))[name = tensor<string, []>("aw_179_cast_fp16")];
            tensor<string, []> aw_181_equation_0 = const()[name = tensor<string, []>("aw_181_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_181_cast_fp16 = einsum(equation = aw_181_equation_0, values = (var_1363_cast_fp16_10, var_1345_cast_fp16_10))[name = tensor<string, []>("aw_181_cast_fp16")];
            tensor<string, []> aw_183_equation_0 = const()[name = tensor<string, []>("aw_183_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_183_cast_fp16 = einsum(equation = aw_183_equation_0, values = (var_1363_cast_fp16_11, var_1345_cast_fp16_11))[name = tensor<string, []>("aw_183_cast_fp16")];
            tensor<string, []> aw_185_equation_0 = const()[name = tensor<string, []>("aw_185_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_185_cast_fp16 = einsum(equation = aw_185_equation_0, values = (var_1363_cast_fp16_12, var_1345_cast_fp16_12))[name = tensor<string, []>("aw_185_cast_fp16")];
            tensor<string, []> aw_187_equation_0 = const()[name = tensor<string, []>("aw_187_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_187_cast_fp16 = einsum(equation = aw_187_equation_0, values = (var_1363_cast_fp16_13, var_1345_cast_fp16_13))[name = tensor<string, []>("aw_187_cast_fp16")];
            tensor<string, []> aw_189_equation_0 = const()[name = tensor<string, []>("aw_189_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_189_cast_fp16 = einsum(equation = aw_189_equation_0, values = (var_1363_cast_fp16_14, var_1345_cast_fp16_14))[name = tensor<string, []>("aw_189_cast_fp16")];
            tensor<string, []> aw_191_equation_0 = const()[name = tensor<string, []>("aw_191_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_191_cast_fp16 = einsum(equation = aw_191_equation_0, values = (var_1363_cast_fp16_15, var_1345_cast_fp16_15))[name = tensor<string, []>("aw_191_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1429_cast_fp16 = softmax(axis = var_1293, x = aw_161_cast_fp16)[name = tensor<string, []>("op_1429_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1430_cast_fp16 = softmax(axis = var_1293, x = aw_163_cast_fp16)[name = tensor<string, []>("op_1430_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1431_cast_fp16 = softmax(axis = var_1293, x = aw_165_cast_fp16)[name = tensor<string, []>("op_1431_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1432_cast_fp16 = softmax(axis = var_1293, x = aw_167_cast_fp16)[name = tensor<string, []>("op_1432_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1433_cast_fp16 = softmax(axis = var_1293, x = aw_169_cast_fp16)[name = tensor<string, []>("op_1433_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1434_cast_fp16 = softmax(axis = var_1293, x = aw_171_cast_fp16)[name = tensor<string, []>("op_1434_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1435_cast_fp16 = softmax(axis = var_1293, x = aw_173_cast_fp16)[name = tensor<string, []>("op_1435_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1436_cast_fp16 = softmax(axis = var_1293, x = aw_175_cast_fp16)[name = tensor<string, []>("op_1436_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1437_cast_fp16 = softmax(axis = var_1293, x = aw_177_cast_fp16)[name = tensor<string, []>("op_1437_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1438_cast_fp16 = softmax(axis = var_1293, x = aw_179_cast_fp16)[name = tensor<string, []>("op_1438_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1439_cast_fp16 = softmax(axis = var_1293, x = aw_181_cast_fp16)[name = tensor<string, []>("op_1439_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1440_cast_fp16 = softmax(axis = var_1293, x = aw_183_cast_fp16)[name = tensor<string, []>("op_1440_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1441_cast_fp16 = softmax(axis = var_1293, x = aw_185_cast_fp16)[name = tensor<string, []>("op_1441_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1442_cast_fp16 = softmax(axis = var_1293, x = aw_187_cast_fp16)[name = tensor<string, []>("op_1442_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1443_cast_fp16 = softmax(axis = var_1293, x = aw_189_cast_fp16)[name = tensor<string, []>("op_1443_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1444_cast_fp16 = softmax(axis = var_1293, x = aw_191_cast_fp16)[name = tensor<string, []>("op_1444_cast_fp16")];
            tensor<string, []> var_1446_equation_0 = const()[name = tensor<string, []>("op_1446_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1446_cast_fp16 = einsum(equation = var_1446_equation_0, values = (var_1380_cast_fp16_0, var_1429_cast_fp16))[name = tensor<string, []>("op_1446_cast_fp16")];
            tensor<string, []> var_1448_equation_0 = const()[name = tensor<string, []>("op_1448_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1448_cast_fp16 = einsum(equation = var_1448_equation_0, values = (var_1380_cast_fp16_1, var_1430_cast_fp16))[name = tensor<string, []>("op_1448_cast_fp16")];
            tensor<string, []> var_1450_equation_0 = const()[name = tensor<string, []>("op_1450_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1450_cast_fp16 = einsum(equation = var_1450_equation_0, values = (var_1380_cast_fp16_2, var_1431_cast_fp16))[name = tensor<string, []>("op_1450_cast_fp16")];
            tensor<string, []> var_1452_equation_0 = const()[name = tensor<string, []>("op_1452_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1452_cast_fp16 = einsum(equation = var_1452_equation_0, values = (var_1380_cast_fp16_3, var_1432_cast_fp16))[name = tensor<string, []>("op_1452_cast_fp16")];
            tensor<string, []> var_1454_equation_0 = const()[name = tensor<string, []>("op_1454_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1454_cast_fp16 = einsum(equation = var_1454_equation_0, values = (var_1380_cast_fp16_4, var_1433_cast_fp16))[name = tensor<string, []>("op_1454_cast_fp16")];
            tensor<string, []> var_1456_equation_0 = const()[name = tensor<string, []>("op_1456_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1456_cast_fp16 = einsum(equation = var_1456_equation_0, values = (var_1380_cast_fp16_5, var_1434_cast_fp16))[name = tensor<string, []>("op_1456_cast_fp16")];
            tensor<string, []> var_1458_equation_0 = const()[name = tensor<string, []>("op_1458_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1458_cast_fp16 = einsum(equation = var_1458_equation_0, values = (var_1380_cast_fp16_6, var_1435_cast_fp16))[name = tensor<string, []>("op_1458_cast_fp16")];
            tensor<string, []> var_1460_equation_0 = const()[name = tensor<string, []>("op_1460_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1460_cast_fp16 = einsum(equation = var_1460_equation_0, values = (var_1380_cast_fp16_7, var_1436_cast_fp16))[name = tensor<string, []>("op_1460_cast_fp16")];
            tensor<string, []> var_1462_equation_0 = const()[name = tensor<string, []>("op_1462_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1462_cast_fp16 = einsum(equation = var_1462_equation_0, values = (var_1380_cast_fp16_8, var_1437_cast_fp16))[name = tensor<string, []>("op_1462_cast_fp16")];
            tensor<string, []> var_1464_equation_0 = const()[name = tensor<string, []>("op_1464_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1464_cast_fp16 = einsum(equation = var_1464_equation_0, values = (var_1380_cast_fp16_9, var_1438_cast_fp16))[name = tensor<string, []>("op_1464_cast_fp16")];
            tensor<string, []> var_1466_equation_0 = const()[name = tensor<string, []>("op_1466_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1466_cast_fp16 = einsum(equation = var_1466_equation_0, values = (var_1380_cast_fp16_10, var_1439_cast_fp16))[name = tensor<string, []>("op_1466_cast_fp16")];
            tensor<string, []> var_1468_equation_0 = const()[name = tensor<string, []>("op_1468_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1468_cast_fp16 = einsum(equation = var_1468_equation_0, values = (var_1380_cast_fp16_11, var_1440_cast_fp16))[name = tensor<string, []>("op_1468_cast_fp16")];
            tensor<string, []> var_1470_equation_0 = const()[name = tensor<string, []>("op_1470_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1470_cast_fp16 = einsum(equation = var_1470_equation_0, values = (var_1380_cast_fp16_12, var_1441_cast_fp16))[name = tensor<string, []>("op_1470_cast_fp16")];
            tensor<string, []> var_1472_equation_0 = const()[name = tensor<string, []>("op_1472_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1472_cast_fp16 = einsum(equation = var_1472_equation_0, values = (var_1380_cast_fp16_13, var_1442_cast_fp16))[name = tensor<string, []>("op_1472_cast_fp16")];
            tensor<string, []> var_1474_equation_0 = const()[name = tensor<string, []>("op_1474_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1474_cast_fp16 = einsum(equation = var_1474_equation_0, values = (var_1380_cast_fp16_14, var_1443_cast_fp16))[name = tensor<string, []>("op_1474_cast_fp16")];
            tensor<string, []> var_1476_equation_0 = const()[name = tensor<string, []>("op_1476_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1476_cast_fp16 = einsum(equation = var_1476_equation_0, values = (var_1380_cast_fp16_15, var_1444_cast_fp16))[name = tensor<string, []>("op_1476_cast_fp16")];
            tensor<bool, []> input_55_interleave_0 = const()[name = tensor<string, []>("input_55_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_55_cast_fp16 = concat(axis = var_1293, interleave = input_55_interleave_0, values = (var_1446_cast_fp16, var_1448_cast_fp16, var_1450_cast_fp16, var_1452_cast_fp16, var_1454_cast_fp16, var_1456_cast_fp16, var_1458_cast_fp16, var_1460_cast_fp16, var_1462_cast_fp16, var_1464_cast_fp16, var_1466_cast_fp16, var_1468_cast_fp16, var_1470_cast_fp16, var_1472_cast_fp16, var_1474_cast_fp16, var_1476_cast_fp16))[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<string, []> var_1485_pad_type_0 = const()[name = tensor<string, []>("op_1485_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1485_strides_0 = const()[name = tensor<string, []>("op_1485_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1485_pad_0 = const()[name = tensor<string, []>("op_1485_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1485_dilations_0 = const()[name = tensor<string, []>("op_1485_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1485_groups_0 = const()[name = tensor<string, []>("op_1485_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_5_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(142116352)))];
            tensor<fp16, [1024]> blocks_5_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_5_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(144213568)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1485_cast_fp16 = conv(bias = blocks_5_attn_out_bias_to_fp16, dilations = var_1485_dilations_0, groups = var_1485_groups_0, pad = var_1485_pad_0, pad_type = var_1485_pad_type_0, strides = var_1485_strides_0, weight = blocks_5_attn_out_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("op_1485_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_23_cast_fp16 = add(x = inputs_21_cast_fp16, y = var_1485_cast_fp16)[name = tensor<string, []>("inputs_23_cast_fp16")];
            tensor<int32, [1]> input_57_axes_0 = const()[name = tensor<string, []>("input_57_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_57_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(144215680)))];
            tensor<fp16, [1024]> input_57_beta_0_to_fp16 = const()[name = tensor<string, []>("input_57_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(144217792)))];
            tensor<fp16, []> var_1495_to_fp16 = const()[name = tensor<string, []>("op_1495_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_57_cast_fp16 = layer_norm(axes = input_57_axes_0, beta = input_57_beta_0_to_fp16, epsilon = var_1495_to_fp16, gamma = input_57_gamma_0_to_fp16, x = inputs_23_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<string, []> input_59_pad_type_0 = const()[name = tensor<string, []>("input_59_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_59_strides_0 = const()[name = tensor<string, []>("input_59_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_59_pad_0 = const()[name = tensor<string, []>("input_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_59_dilations_0 = const()[name = tensor<string, []>("input_59_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_59_groups_0 = const()[name = tensor<string, []>("input_59_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_5_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(144219904)))];
            tensor<fp16, [4096]> blocks_5_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_5_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(152608576)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_59_cast_fp16 = conv(bias = blocks_5_mlp_0_bias_to_fp16, dilations = input_59_dilations_0, groups = input_59_groups_0, pad = input_59_pad_0, pad_type = input_59_pad_type_0, strides = input_59_strides_0, weight = blocks_5_mlp_0_weight_to_fp16, x = input_57_cast_fp16)[name = tensor<string, []>("input_59_cast_fp16")];
            tensor<string, []> input_61_mode_0 = const()[name = tensor<string, []>("input_61_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_61_cast_fp16 = gelu(mode = input_61_mode_0, x = input_59_cast_fp16)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<string, []> var_1521_pad_type_0 = const()[name = tensor<string, []>("op_1521_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1521_strides_0 = const()[name = tensor<string, []>("op_1521_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1521_pad_0 = const()[name = tensor<string, []>("op_1521_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1521_dilations_0 = const()[name = tensor<string, []>("op_1521_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1521_groups_0 = const()[name = tensor<string, []>("op_1521_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_5_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_5_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(152616832)))];
            tensor<fp16, [1024]> blocks_5_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_5_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161005504)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1521_cast_fp16 = conv(bias = blocks_5_mlp_2_bias_to_fp16, dilations = var_1521_dilations_0, groups = var_1521_groups_0, pad = var_1521_pad_0, pad_type = var_1521_pad_type_0, strides = var_1521_strides_0, weight = blocks_5_mlp_2_weight_to_fp16, x = input_61_cast_fp16)[name = tensor<string, []>("op_1521_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_25_cast_fp16 = add(x = inputs_23_cast_fp16, y = var_1521_cast_fp16)[name = tensor<string, []>("inputs_25_cast_fp16")];
            tensor<int32, []> var_1530 = const()[name = tensor<string, []>("op_1530"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_63_axes_0 = const()[name = tensor<string, []>("input_63_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_63_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_63_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161007616)))];
            tensor<fp16, [1024]> input_63_beta_0_to_fp16 = const()[name = tensor<string, []>("input_63_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161009728)))];
            tensor<fp16, []> var_1546_to_fp16 = const()[name = tensor<string, []>("op_1546_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_63_cast_fp16 = layer_norm(axes = input_63_axes_0, beta = input_63_beta_0_to_fp16, epsilon = var_1546_to_fp16, gamma = input_63_gamma_0_to_fp16, x = inputs_25_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<string, []> q_13_pad_type_0 = const()[name = tensor<string, []>("q_13_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_13_strides_0 = const()[name = tensor<string, []>("q_13_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_13_pad_0 = const()[name = tensor<string, []>("q_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_13_dilations_0 = const()[name = tensor<string, []>("q_13_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_13_groups_0 = const()[name = tensor<string, []>("q_13_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_1581_weight_0_to_fp16 = const()[name = tensor<string, []>("op_1581_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161011840)))];
            tensor<fp16, [1024]> var_1581_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1581_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(163109056)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1581_cast_fp16 = conv(bias = var_1581_bias_0_to_fp16, dilations = q_13_dilations_0, groups = q_13_groups_0, pad = q_13_pad_0, pad_type = q_13_pad_type_0, strides = q_13_strides_0, weight = var_1581_weight_0_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("op_1581_cast_fp16")];
            tensor<string, []> k_13_pad_type_0 = const()[name = tensor<string, []>("k_13_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_13_strides_0 = const()[name = tensor<string, []>("k_13_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_13_pad_0 = const()[name = tensor<string, []>("k_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_13_dilations_0 = const()[name = tensor<string, []>("k_13_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_13_groups_0 = const()[name = tensor<string, []>("k_13_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_6_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(163111168)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_13_cast_fp16 = conv(dilations = k_13_dilations_0, groups = k_13_groups_0, pad = k_13_pad_0, pad_type = k_13_pad_type_0, strides = k_13_strides_0, weight = blocks_6_attn_key_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("k_13_cast_fp16")];
            tensor<string, []> var_1579_pad_type_0 = const()[name = tensor<string, []>("op_1579_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1579_strides_0 = const()[name = tensor<string, []>("op_1579_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1579_pad_0 = const()[name = tensor<string, []>("op_1579_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1579_dilations_0 = const()[name = tensor<string, []>("op_1579_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1579_groups_0 = const()[name = tensor<string, []>("op_1579_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_6_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(165208384)))];
            tensor<fp16, [1024]> blocks_6_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(167305600)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1579_cast_fp16 = conv(bias = blocks_6_attn_value_bias_to_fp16, dilations = var_1579_dilations_0, groups = var_1579_groups_0, pad = var_1579_pad_0, pad_type = var_1579_pad_type_0, strides = var_1579_strides_0, weight = blocks_6_attn_value_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("op_1579_cast_fp16")];
            tensor<int32, [16]> tile_18 = const()[name = tensor<string, []>("tile_18"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1582_axis_0 = const()[name = tensor<string, []>("op_1582_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1582_cast_fp16_15 = split(axis = var_1582_axis_0, split_sizes = tile_18, x = var_1581_cast_fp16)[name = tensor<string, []>("op_1582_cast_fp16")];
            tensor<int32, [4]> var_1599_perm_0 = const()[name = tensor<string, []>("op_1599_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_19 = const()[name = tensor<string, []>("tile_19"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1600_axis_0 = const()[name = tensor<string, []>("op_1600_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_1599_cast_fp16 = transpose(perm = var_1599_perm_0, x = k_13_cast_fp16)[name = tensor<string, []>("transpose_18")];
            tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_1600_cast_fp16_15 = split(axis = var_1600_axis_0, split_sizes = tile_19, x = var_1599_cast_fp16)[name = tensor<string, []>("op_1600_cast_fp16")];
            tensor<int32, [16]> tile_20 = const()[name = tensor<string, []>("tile_20"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1617_axis_0 = const()[name = tensor<string, []>("op_1617_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1617_cast_fp16_15 = split(axis = var_1617_axis_0, split_sizes = tile_20, x = var_1579_cast_fp16)[name = tensor<string, []>("op_1617_cast_fp16")];
            tensor<string, []> aw_193_equation_0 = const()[name = tensor<string, []>("aw_193_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_193_cast_fp16 = einsum(equation = aw_193_equation_0, values = (var_1600_cast_fp16_0, var_1582_cast_fp16_0))[name = tensor<string, []>("aw_193_cast_fp16")];
            tensor<string, []> aw_195_equation_0 = const()[name = tensor<string, []>("aw_195_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_195_cast_fp16 = einsum(equation = aw_195_equation_0, values = (var_1600_cast_fp16_1, var_1582_cast_fp16_1))[name = tensor<string, []>("aw_195_cast_fp16")];
            tensor<string, []> aw_197_equation_0 = const()[name = tensor<string, []>("aw_197_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_197_cast_fp16 = einsum(equation = aw_197_equation_0, values = (var_1600_cast_fp16_2, var_1582_cast_fp16_2))[name = tensor<string, []>("aw_197_cast_fp16")];
            tensor<string, []> aw_199_equation_0 = const()[name = tensor<string, []>("aw_199_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_199_cast_fp16 = einsum(equation = aw_199_equation_0, values = (var_1600_cast_fp16_3, var_1582_cast_fp16_3))[name = tensor<string, []>("aw_199_cast_fp16")];
            tensor<string, []> aw_201_equation_0 = const()[name = tensor<string, []>("aw_201_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_201_cast_fp16 = einsum(equation = aw_201_equation_0, values = (var_1600_cast_fp16_4, var_1582_cast_fp16_4))[name = tensor<string, []>("aw_201_cast_fp16")];
            tensor<string, []> aw_203_equation_0 = const()[name = tensor<string, []>("aw_203_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_203_cast_fp16 = einsum(equation = aw_203_equation_0, values = (var_1600_cast_fp16_5, var_1582_cast_fp16_5))[name = tensor<string, []>("aw_203_cast_fp16")];
            tensor<string, []> aw_205_equation_0 = const()[name = tensor<string, []>("aw_205_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_205_cast_fp16 = einsum(equation = aw_205_equation_0, values = (var_1600_cast_fp16_6, var_1582_cast_fp16_6))[name = tensor<string, []>("aw_205_cast_fp16")];
            tensor<string, []> aw_207_equation_0 = const()[name = tensor<string, []>("aw_207_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_207_cast_fp16 = einsum(equation = aw_207_equation_0, values = (var_1600_cast_fp16_7, var_1582_cast_fp16_7))[name = tensor<string, []>("aw_207_cast_fp16")];
            tensor<string, []> aw_209_equation_0 = const()[name = tensor<string, []>("aw_209_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_209_cast_fp16 = einsum(equation = aw_209_equation_0, values = (var_1600_cast_fp16_8, var_1582_cast_fp16_8))[name = tensor<string, []>("aw_209_cast_fp16")];
            tensor<string, []> aw_211_equation_0 = const()[name = tensor<string, []>("aw_211_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_211_cast_fp16 = einsum(equation = aw_211_equation_0, values = (var_1600_cast_fp16_9, var_1582_cast_fp16_9))[name = tensor<string, []>("aw_211_cast_fp16")];
            tensor<string, []> aw_213_equation_0 = const()[name = tensor<string, []>("aw_213_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_213_cast_fp16 = einsum(equation = aw_213_equation_0, values = (var_1600_cast_fp16_10, var_1582_cast_fp16_10))[name = tensor<string, []>("aw_213_cast_fp16")];
            tensor<string, []> aw_215_equation_0 = const()[name = tensor<string, []>("aw_215_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_215_cast_fp16 = einsum(equation = aw_215_equation_0, values = (var_1600_cast_fp16_11, var_1582_cast_fp16_11))[name = tensor<string, []>("aw_215_cast_fp16")];
            tensor<string, []> aw_217_equation_0 = const()[name = tensor<string, []>("aw_217_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_217_cast_fp16 = einsum(equation = aw_217_equation_0, values = (var_1600_cast_fp16_12, var_1582_cast_fp16_12))[name = tensor<string, []>("aw_217_cast_fp16")];
            tensor<string, []> aw_219_equation_0 = const()[name = tensor<string, []>("aw_219_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_219_cast_fp16 = einsum(equation = aw_219_equation_0, values = (var_1600_cast_fp16_13, var_1582_cast_fp16_13))[name = tensor<string, []>("aw_219_cast_fp16")];
            tensor<string, []> aw_221_equation_0 = const()[name = tensor<string, []>("aw_221_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_221_cast_fp16 = einsum(equation = aw_221_equation_0, values = (var_1600_cast_fp16_14, var_1582_cast_fp16_14))[name = tensor<string, []>("aw_221_cast_fp16")];
            tensor<string, []> aw_223_equation_0 = const()[name = tensor<string, []>("aw_223_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_223_cast_fp16 = einsum(equation = aw_223_equation_0, values = (var_1600_cast_fp16_15, var_1582_cast_fp16_15))[name = tensor<string, []>("aw_223_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1666_cast_fp16 = softmax(axis = var_1530, x = aw_193_cast_fp16)[name = tensor<string, []>("op_1666_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1667_cast_fp16 = softmax(axis = var_1530, x = aw_195_cast_fp16)[name = tensor<string, []>("op_1667_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1668_cast_fp16 = softmax(axis = var_1530, x = aw_197_cast_fp16)[name = tensor<string, []>("op_1668_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1669_cast_fp16 = softmax(axis = var_1530, x = aw_199_cast_fp16)[name = tensor<string, []>("op_1669_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1670_cast_fp16 = softmax(axis = var_1530, x = aw_201_cast_fp16)[name = tensor<string, []>("op_1670_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1671_cast_fp16 = softmax(axis = var_1530, x = aw_203_cast_fp16)[name = tensor<string, []>("op_1671_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1672_cast_fp16 = softmax(axis = var_1530, x = aw_205_cast_fp16)[name = tensor<string, []>("op_1672_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1673_cast_fp16 = softmax(axis = var_1530, x = aw_207_cast_fp16)[name = tensor<string, []>("op_1673_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1674_cast_fp16 = softmax(axis = var_1530, x = aw_209_cast_fp16)[name = tensor<string, []>("op_1674_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1675_cast_fp16 = softmax(axis = var_1530, x = aw_211_cast_fp16)[name = tensor<string, []>("op_1675_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1676_cast_fp16 = softmax(axis = var_1530, x = aw_213_cast_fp16)[name = tensor<string, []>("op_1676_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1677_cast_fp16 = softmax(axis = var_1530, x = aw_215_cast_fp16)[name = tensor<string, []>("op_1677_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1678_cast_fp16 = softmax(axis = var_1530, x = aw_217_cast_fp16)[name = tensor<string, []>("op_1678_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1679_cast_fp16 = softmax(axis = var_1530, x = aw_219_cast_fp16)[name = tensor<string, []>("op_1679_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1680_cast_fp16 = softmax(axis = var_1530, x = aw_221_cast_fp16)[name = tensor<string, []>("op_1680_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1681_cast_fp16 = softmax(axis = var_1530, x = aw_223_cast_fp16)[name = tensor<string, []>("op_1681_cast_fp16")];
            tensor<string, []> var_1683_equation_0 = const()[name = tensor<string, []>("op_1683_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1683_cast_fp16 = einsum(equation = var_1683_equation_0, values = (var_1617_cast_fp16_0, var_1666_cast_fp16))[name = tensor<string, []>("op_1683_cast_fp16")];
            tensor<string, []> var_1685_equation_0 = const()[name = tensor<string, []>("op_1685_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1685_cast_fp16 = einsum(equation = var_1685_equation_0, values = (var_1617_cast_fp16_1, var_1667_cast_fp16))[name = tensor<string, []>("op_1685_cast_fp16")];
            tensor<string, []> var_1687_equation_0 = const()[name = tensor<string, []>("op_1687_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1687_cast_fp16 = einsum(equation = var_1687_equation_0, values = (var_1617_cast_fp16_2, var_1668_cast_fp16))[name = tensor<string, []>("op_1687_cast_fp16")];
            tensor<string, []> var_1689_equation_0 = const()[name = tensor<string, []>("op_1689_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1689_cast_fp16 = einsum(equation = var_1689_equation_0, values = (var_1617_cast_fp16_3, var_1669_cast_fp16))[name = tensor<string, []>("op_1689_cast_fp16")];
            tensor<string, []> var_1691_equation_0 = const()[name = tensor<string, []>("op_1691_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1691_cast_fp16 = einsum(equation = var_1691_equation_0, values = (var_1617_cast_fp16_4, var_1670_cast_fp16))[name = tensor<string, []>("op_1691_cast_fp16")];
            tensor<string, []> var_1693_equation_0 = const()[name = tensor<string, []>("op_1693_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1693_cast_fp16 = einsum(equation = var_1693_equation_0, values = (var_1617_cast_fp16_5, var_1671_cast_fp16))[name = tensor<string, []>("op_1693_cast_fp16")];
            tensor<string, []> var_1695_equation_0 = const()[name = tensor<string, []>("op_1695_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1695_cast_fp16 = einsum(equation = var_1695_equation_0, values = (var_1617_cast_fp16_6, var_1672_cast_fp16))[name = tensor<string, []>("op_1695_cast_fp16")];
            tensor<string, []> var_1697_equation_0 = const()[name = tensor<string, []>("op_1697_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1697_cast_fp16 = einsum(equation = var_1697_equation_0, values = (var_1617_cast_fp16_7, var_1673_cast_fp16))[name = tensor<string, []>("op_1697_cast_fp16")];
            tensor<string, []> var_1699_equation_0 = const()[name = tensor<string, []>("op_1699_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1699_cast_fp16 = einsum(equation = var_1699_equation_0, values = (var_1617_cast_fp16_8, var_1674_cast_fp16))[name = tensor<string, []>("op_1699_cast_fp16")];
            tensor<string, []> var_1701_equation_0 = const()[name = tensor<string, []>("op_1701_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1701_cast_fp16 = einsum(equation = var_1701_equation_0, values = (var_1617_cast_fp16_9, var_1675_cast_fp16))[name = tensor<string, []>("op_1701_cast_fp16")];
            tensor<string, []> var_1703_equation_0 = const()[name = tensor<string, []>("op_1703_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1703_cast_fp16 = einsum(equation = var_1703_equation_0, values = (var_1617_cast_fp16_10, var_1676_cast_fp16))[name = tensor<string, []>("op_1703_cast_fp16")];
            tensor<string, []> var_1705_equation_0 = const()[name = tensor<string, []>("op_1705_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1705_cast_fp16 = einsum(equation = var_1705_equation_0, values = (var_1617_cast_fp16_11, var_1677_cast_fp16))[name = tensor<string, []>("op_1705_cast_fp16")];
            tensor<string, []> var_1707_equation_0 = const()[name = tensor<string, []>("op_1707_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1707_cast_fp16 = einsum(equation = var_1707_equation_0, values = (var_1617_cast_fp16_12, var_1678_cast_fp16))[name = tensor<string, []>("op_1707_cast_fp16")];
            tensor<string, []> var_1709_equation_0 = const()[name = tensor<string, []>("op_1709_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1709_cast_fp16 = einsum(equation = var_1709_equation_0, values = (var_1617_cast_fp16_13, var_1679_cast_fp16))[name = tensor<string, []>("op_1709_cast_fp16")];
            tensor<string, []> var_1711_equation_0 = const()[name = tensor<string, []>("op_1711_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1711_cast_fp16 = einsum(equation = var_1711_equation_0, values = (var_1617_cast_fp16_14, var_1680_cast_fp16))[name = tensor<string, []>("op_1711_cast_fp16")];
            tensor<string, []> var_1713_equation_0 = const()[name = tensor<string, []>("op_1713_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1713_cast_fp16 = einsum(equation = var_1713_equation_0, values = (var_1617_cast_fp16_15, var_1681_cast_fp16))[name = tensor<string, []>("op_1713_cast_fp16")];
            tensor<bool, []> input_65_interleave_0 = const()[name = tensor<string, []>("input_65_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_65_cast_fp16 = concat(axis = var_1530, interleave = input_65_interleave_0, values = (var_1683_cast_fp16, var_1685_cast_fp16, var_1687_cast_fp16, var_1689_cast_fp16, var_1691_cast_fp16, var_1693_cast_fp16, var_1695_cast_fp16, var_1697_cast_fp16, var_1699_cast_fp16, var_1701_cast_fp16, var_1703_cast_fp16, var_1705_cast_fp16, var_1707_cast_fp16, var_1709_cast_fp16, var_1711_cast_fp16, var_1713_cast_fp16))[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<string, []> var_1722_pad_type_0 = const()[name = tensor<string, []>("op_1722_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1722_strides_0 = const()[name = tensor<string, []>("op_1722_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1722_pad_0 = const()[name = tensor<string, []>("op_1722_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1722_dilations_0 = const()[name = tensor<string, []>("op_1722_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1722_groups_0 = const()[name = tensor<string, []>("op_1722_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_6_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(167307712)))];
            tensor<fp16, [1024]> blocks_6_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_6_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(169404928)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1722_cast_fp16 = conv(bias = blocks_6_attn_out_bias_to_fp16, dilations = var_1722_dilations_0, groups = var_1722_groups_0, pad = var_1722_pad_0, pad_type = var_1722_pad_type_0, strides = var_1722_strides_0, weight = blocks_6_attn_out_weight_to_fp16, x = input_65_cast_fp16)[name = tensor<string, []>("op_1722_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_27_cast_fp16 = add(x = inputs_25_cast_fp16, y = var_1722_cast_fp16)[name = tensor<string, []>("inputs_27_cast_fp16")];
            tensor<int32, [1]> input_67_axes_0 = const()[name = tensor<string, []>("input_67_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_67_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_67_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(169407040)))];
            tensor<fp16, [1024]> input_67_beta_0_to_fp16 = const()[name = tensor<string, []>("input_67_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(169409152)))];
            tensor<fp16, []> var_1732_to_fp16 = const()[name = tensor<string, []>("op_1732_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_67_cast_fp16 = layer_norm(axes = input_67_axes_0, beta = input_67_beta_0_to_fp16, epsilon = var_1732_to_fp16, gamma = input_67_gamma_0_to_fp16, x = inputs_27_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_69_strides_0 = const()[name = tensor<string, []>("input_69_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_69_dilations_0 = const()[name = tensor<string, []>("input_69_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_69_groups_0 = const()[name = tensor<string, []>("input_69_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_6_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(169411264)))];
            tensor<fp16, [4096]> blocks_6_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_6_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(177799936)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_69_cast_fp16 = conv(bias = blocks_6_mlp_0_bias_to_fp16, dilations = input_69_dilations_0, groups = input_69_groups_0, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = input_69_strides_0, weight = blocks_6_mlp_0_weight_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<string, []> input_71_mode_0 = const()[name = tensor<string, []>("input_71_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_71_cast_fp16 = gelu(mode = input_71_mode_0, x = input_69_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<string, []> var_1758_pad_type_0 = const()[name = tensor<string, []>("op_1758_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1758_strides_0 = const()[name = tensor<string, []>("op_1758_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1758_pad_0 = const()[name = tensor<string, []>("op_1758_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1758_dilations_0 = const()[name = tensor<string, []>("op_1758_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1758_groups_0 = const()[name = tensor<string, []>("op_1758_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_6_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_6_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(177808192)))];
            tensor<fp16, [1024]> blocks_6_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_6_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(186196864)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1758_cast_fp16 = conv(bias = blocks_6_mlp_2_bias_to_fp16, dilations = var_1758_dilations_0, groups = var_1758_groups_0, pad = var_1758_pad_0, pad_type = var_1758_pad_type_0, strides = var_1758_strides_0, weight = blocks_6_mlp_2_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("op_1758_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_29_cast_fp16 = add(x = inputs_27_cast_fp16, y = var_1758_cast_fp16)[name = tensor<string, []>("inputs_29_cast_fp16")];
            tensor<int32, []> var_1767 = const()[name = tensor<string, []>("op_1767"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_73_axes_0 = const()[name = tensor<string, []>("input_73_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_73_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_73_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(186198976)))];
            tensor<fp16, [1024]> input_73_beta_0_to_fp16 = const()[name = tensor<string, []>("input_73_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(186201088)))];
            tensor<fp16, []> var_1783_to_fp16 = const()[name = tensor<string, []>("op_1783_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_73_cast_fp16 = layer_norm(axes = input_73_axes_0, beta = input_73_beta_0_to_fp16, epsilon = var_1783_to_fp16, gamma = input_73_gamma_0_to_fp16, x = inputs_29_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<string, []> q_15_pad_type_0 = const()[name = tensor<string, []>("q_15_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_15_strides_0 = const()[name = tensor<string, []>("q_15_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_15_pad_0 = const()[name = tensor<string, []>("q_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_15_dilations_0 = const()[name = tensor<string, []>("q_15_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_15_groups_0 = const()[name = tensor<string, []>("q_15_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_1818_weight_0_to_fp16 = const()[name = tensor<string, []>("op_1818_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(186203200)))];
            tensor<fp16, [1024]> var_1818_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1818_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(188300416)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1818_cast_fp16 = conv(bias = var_1818_bias_0_to_fp16, dilations = q_15_dilations_0, groups = q_15_groups_0, pad = q_15_pad_0, pad_type = q_15_pad_type_0, strides = q_15_strides_0, weight = var_1818_weight_0_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("op_1818_cast_fp16")];
            tensor<string, []> k_15_pad_type_0 = const()[name = tensor<string, []>("k_15_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_15_strides_0 = const()[name = tensor<string, []>("k_15_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_15_pad_0 = const()[name = tensor<string, []>("k_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_15_dilations_0 = const()[name = tensor<string, []>("k_15_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_15_groups_0 = const()[name = tensor<string, []>("k_15_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_7_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(188302528)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_15_cast_fp16 = conv(dilations = k_15_dilations_0, groups = k_15_groups_0, pad = k_15_pad_0, pad_type = k_15_pad_type_0, strides = k_15_strides_0, weight = blocks_7_attn_key_weight_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("k_15_cast_fp16")];
            tensor<string, []> var_1816_pad_type_0 = const()[name = tensor<string, []>("op_1816_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1816_strides_0 = const()[name = tensor<string, []>("op_1816_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1816_pad_0 = const()[name = tensor<string, []>("op_1816_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1816_dilations_0 = const()[name = tensor<string, []>("op_1816_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1816_groups_0 = const()[name = tensor<string, []>("op_1816_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_7_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(190399744)))];
            tensor<fp16, [1024]> blocks_7_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(192496960)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1816_cast_fp16 = conv(bias = blocks_7_attn_value_bias_to_fp16, dilations = var_1816_dilations_0, groups = var_1816_groups_0, pad = var_1816_pad_0, pad_type = var_1816_pad_type_0, strides = var_1816_strides_0, weight = blocks_7_attn_value_weight_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("op_1816_cast_fp16")];
            tensor<int32, [16]> tile_21 = const()[name = tensor<string, []>("tile_21"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1819_axis_0 = const()[name = tensor<string, []>("op_1819_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1819_cast_fp16_15 = split(axis = var_1819_axis_0, split_sizes = tile_21, x = var_1818_cast_fp16)[name = tensor<string, []>("op_1819_cast_fp16")];
            tensor<int32, [4]> var_1836_perm_0 = const()[name = tensor<string, []>("op_1836_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_22 = const()[name = tensor<string, []>("tile_22"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1837_axis_0 = const()[name = tensor<string, []>("op_1837_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_1836_cast_fp16 = transpose(perm = var_1836_perm_0, x = k_15_cast_fp16)[name = tensor<string, []>("transpose_17")];
            tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_1837_cast_fp16_15 = split(axis = var_1837_axis_0, split_sizes = tile_22, x = var_1836_cast_fp16)[name = tensor<string, []>("op_1837_cast_fp16")];
            tensor<int32, [16]> tile_23 = const()[name = tensor<string, []>("tile_23"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1854_axis_0 = const()[name = tensor<string, []>("op_1854_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_1854_cast_fp16_15 = split(axis = var_1854_axis_0, split_sizes = tile_23, x = var_1816_cast_fp16)[name = tensor<string, []>("op_1854_cast_fp16")];
            tensor<string, []> aw_225_equation_0 = const()[name = tensor<string, []>("aw_225_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_225_cast_fp16 = einsum(equation = aw_225_equation_0, values = (var_1837_cast_fp16_0, var_1819_cast_fp16_0))[name = tensor<string, []>("aw_225_cast_fp16")];
            tensor<string, []> aw_227_equation_0 = const()[name = tensor<string, []>("aw_227_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_227_cast_fp16 = einsum(equation = aw_227_equation_0, values = (var_1837_cast_fp16_1, var_1819_cast_fp16_1))[name = tensor<string, []>("aw_227_cast_fp16")];
            tensor<string, []> aw_229_equation_0 = const()[name = tensor<string, []>("aw_229_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_229_cast_fp16 = einsum(equation = aw_229_equation_0, values = (var_1837_cast_fp16_2, var_1819_cast_fp16_2))[name = tensor<string, []>("aw_229_cast_fp16")];
            tensor<string, []> aw_231_equation_0 = const()[name = tensor<string, []>("aw_231_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_231_cast_fp16 = einsum(equation = aw_231_equation_0, values = (var_1837_cast_fp16_3, var_1819_cast_fp16_3))[name = tensor<string, []>("aw_231_cast_fp16")];
            tensor<string, []> aw_233_equation_0 = const()[name = tensor<string, []>("aw_233_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_233_cast_fp16 = einsum(equation = aw_233_equation_0, values = (var_1837_cast_fp16_4, var_1819_cast_fp16_4))[name = tensor<string, []>("aw_233_cast_fp16")];
            tensor<string, []> aw_235_equation_0 = const()[name = tensor<string, []>("aw_235_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_235_cast_fp16 = einsum(equation = aw_235_equation_0, values = (var_1837_cast_fp16_5, var_1819_cast_fp16_5))[name = tensor<string, []>("aw_235_cast_fp16")];
            tensor<string, []> aw_237_equation_0 = const()[name = tensor<string, []>("aw_237_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_237_cast_fp16 = einsum(equation = aw_237_equation_0, values = (var_1837_cast_fp16_6, var_1819_cast_fp16_6))[name = tensor<string, []>("aw_237_cast_fp16")];
            tensor<string, []> aw_239_equation_0 = const()[name = tensor<string, []>("aw_239_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_239_cast_fp16 = einsum(equation = aw_239_equation_0, values = (var_1837_cast_fp16_7, var_1819_cast_fp16_7))[name = tensor<string, []>("aw_239_cast_fp16")];
            tensor<string, []> aw_241_equation_0 = const()[name = tensor<string, []>("aw_241_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_241_cast_fp16 = einsum(equation = aw_241_equation_0, values = (var_1837_cast_fp16_8, var_1819_cast_fp16_8))[name = tensor<string, []>("aw_241_cast_fp16")];
            tensor<string, []> aw_243_equation_0 = const()[name = tensor<string, []>("aw_243_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_243_cast_fp16 = einsum(equation = aw_243_equation_0, values = (var_1837_cast_fp16_9, var_1819_cast_fp16_9))[name = tensor<string, []>("aw_243_cast_fp16")];
            tensor<string, []> aw_245_equation_0 = const()[name = tensor<string, []>("aw_245_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_245_cast_fp16 = einsum(equation = aw_245_equation_0, values = (var_1837_cast_fp16_10, var_1819_cast_fp16_10))[name = tensor<string, []>("aw_245_cast_fp16")];
            tensor<string, []> aw_247_equation_0 = const()[name = tensor<string, []>("aw_247_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_247_cast_fp16 = einsum(equation = aw_247_equation_0, values = (var_1837_cast_fp16_11, var_1819_cast_fp16_11))[name = tensor<string, []>("aw_247_cast_fp16")];
            tensor<string, []> aw_249_equation_0 = const()[name = tensor<string, []>("aw_249_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_249_cast_fp16 = einsum(equation = aw_249_equation_0, values = (var_1837_cast_fp16_12, var_1819_cast_fp16_12))[name = tensor<string, []>("aw_249_cast_fp16")];
            tensor<string, []> aw_251_equation_0 = const()[name = tensor<string, []>("aw_251_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_251_cast_fp16 = einsum(equation = aw_251_equation_0, values = (var_1837_cast_fp16_13, var_1819_cast_fp16_13))[name = tensor<string, []>("aw_251_cast_fp16")];
            tensor<string, []> aw_253_equation_0 = const()[name = tensor<string, []>("aw_253_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_253_cast_fp16 = einsum(equation = aw_253_equation_0, values = (var_1837_cast_fp16_14, var_1819_cast_fp16_14))[name = tensor<string, []>("aw_253_cast_fp16")];
            tensor<string, []> aw_255_equation_0 = const()[name = tensor<string, []>("aw_255_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_255_cast_fp16 = einsum(equation = aw_255_equation_0, values = (var_1837_cast_fp16_15, var_1819_cast_fp16_15))[name = tensor<string, []>("aw_255_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1903_cast_fp16 = softmax(axis = var_1767, x = aw_225_cast_fp16)[name = tensor<string, []>("op_1903_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1904_cast_fp16 = softmax(axis = var_1767, x = aw_227_cast_fp16)[name = tensor<string, []>("op_1904_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1905_cast_fp16 = softmax(axis = var_1767, x = aw_229_cast_fp16)[name = tensor<string, []>("op_1905_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1906_cast_fp16 = softmax(axis = var_1767, x = aw_231_cast_fp16)[name = tensor<string, []>("op_1906_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1907_cast_fp16 = softmax(axis = var_1767, x = aw_233_cast_fp16)[name = tensor<string, []>("op_1907_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1908_cast_fp16 = softmax(axis = var_1767, x = aw_235_cast_fp16)[name = tensor<string, []>("op_1908_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1909_cast_fp16 = softmax(axis = var_1767, x = aw_237_cast_fp16)[name = tensor<string, []>("op_1909_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1910_cast_fp16 = softmax(axis = var_1767, x = aw_239_cast_fp16)[name = tensor<string, []>("op_1910_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1911_cast_fp16 = softmax(axis = var_1767, x = aw_241_cast_fp16)[name = tensor<string, []>("op_1911_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1912_cast_fp16 = softmax(axis = var_1767, x = aw_243_cast_fp16)[name = tensor<string, []>("op_1912_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1913_cast_fp16 = softmax(axis = var_1767, x = aw_245_cast_fp16)[name = tensor<string, []>("op_1913_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1914_cast_fp16 = softmax(axis = var_1767, x = aw_247_cast_fp16)[name = tensor<string, []>("op_1914_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1915_cast_fp16 = softmax(axis = var_1767, x = aw_249_cast_fp16)[name = tensor<string, []>("op_1915_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1916_cast_fp16 = softmax(axis = var_1767, x = aw_251_cast_fp16)[name = tensor<string, []>("op_1916_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1917_cast_fp16 = softmax(axis = var_1767, x = aw_253_cast_fp16)[name = tensor<string, []>("op_1917_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_1918_cast_fp16 = softmax(axis = var_1767, x = aw_255_cast_fp16)[name = tensor<string, []>("op_1918_cast_fp16")];
            tensor<string, []> var_1920_equation_0 = const()[name = tensor<string, []>("op_1920_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1920_cast_fp16 = einsum(equation = var_1920_equation_0, values = (var_1854_cast_fp16_0, var_1903_cast_fp16))[name = tensor<string, []>("op_1920_cast_fp16")];
            tensor<string, []> var_1922_equation_0 = const()[name = tensor<string, []>("op_1922_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1922_cast_fp16 = einsum(equation = var_1922_equation_0, values = (var_1854_cast_fp16_1, var_1904_cast_fp16))[name = tensor<string, []>("op_1922_cast_fp16")];
            tensor<string, []> var_1924_equation_0 = const()[name = tensor<string, []>("op_1924_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1924_cast_fp16 = einsum(equation = var_1924_equation_0, values = (var_1854_cast_fp16_2, var_1905_cast_fp16))[name = tensor<string, []>("op_1924_cast_fp16")];
            tensor<string, []> var_1926_equation_0 = const()[name = tensor<string, []>("op_1926_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1926_cast_fp16 = einsum(equation = var_1926_equation_0, values = (var_1854_cast_fp16_3, var_1906_cast_fp16))[name = tensor<string, []>("op_1926_cast_fp16")];
            tensor<string, []> var_1928_equation_0 = const()[name = tensor<string, []>("op_1928_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1928_cast_fp16 = einsum(equation = var_1928_equation_0, values = (var_1854_cast_fp16_4, var_1907_cast_fp16))[name = tensor<string, []>("op_1928_cast_fp16")];
            tensor<string, []> var_1930_equation_0 = const()[name = tensor<string, []>("op_1930_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1930_cast_fp16 = einsum(equation = var_1930_equation_0, values = (var_1854_cast_fp16_5, var_1908_cast_fp16))[name = tensor<string, []>("op_1930_cast_fp16")];
            tensor<string, []> var_1932_equation_0 = const()[name = tensor<string, []>("op_1932_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1932_cast_fp16 = einsum(equation = var_1932_equation_0, values = (var_1854_cast_fp16_6, var_1909_cast_fp16))[name = tensor<string, []>("op_1932_cast_fp16")];
            tensor<string, []> var_1934_equation_0 = const()[name = tensor<string, []>("op_1934_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1934_cast_fp16 = einsum(equation = var_1934_equation_0, values = (var_1854_cast_fp16_7, var_1910_cast_fp16))[name = tensor<string, []>("op_1934_cast_fp16")];
            tensor<string, []> var_1936_equation_0 = const()[name = tensor<string, []>("op_1936_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1936_cast_fp16 = einsum(equation = var_1936_equation_0, values = (var_1854_cast_fp16_8, var_1911_cast_fp16))[name = tensor<string, []>("op_1936_cast_fp16")];
            tensor<string, []> var_1938_equation_0 = const()[name = tensor<string, []>("op_1938_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1938_cast_fp16 = einsum(equation = var_1938_equation_0, values = (var_1854_cast_fp16_9, var_1912_cast_fp16))[name = tensor<string, []>("op_1938_cast_fp16")];
            tensor<string, []> var_1940_equation_0 = const()[name = tensor<string, []>("op_1940_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1940_cast_fp16 = einsum(equation = var_1940_equation_0, values = (var_1854_cast_fp16_10, var_1913_cast_fp16))[name = tensor<string, []>("op_1940_cast_fp16")];
            tensor<string, []> var_1942_equation_0 = const()[name = tensor<string, []>("op_1942_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1942_cast_fp16 = einsum(equation = var_1942_equation_0, values = (var_1854_cast_fp16_11, var_1914_cast_fp16))[name = tensor<string, []>("op_1942_cast_fp16")];
            tensor<string, []> var_1944_equation_0 = const()[name = tensor<string, []>("op_1944_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1944_cast_fp16 = einsum(equation = var_1944_equation_0, values = (var_1854_cast_fp16_12, var_1915_cast_fp16))[name = tensor<string, []>("op_1944_cast_fp16")];
            tensor<string, []> var_1946_equation_0 = const()[name = tensor<string, []>("op_1946_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1946_cast_fp16 = einsum(equation = var_1946_equation_0, values = (var_1854_cast_fp16_13, var_1916_cast_fp16))[name = tensor<string, []>("op_1946_cast_fp16")];
            tensor<string, []> var_1948_equation_0 = const()[name = tensor<string, []>("op_1948_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1948_cast_fp16 = einsum(equation = var_1948_equation_0, values = (var_1854_cast_fp16_14, var_1917_cast_fp16))[name = tensor<string, []>("op_1948_cast_fp16")];
            tensor<string, []> var_1950_equation_0 = const()[name = tensor<string, []>("op_1950_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_1950_cast_fp16 = einsum(equation = var_1950_equation_0, values = (var_1854_cast_fp16_15, var_1918_cast_fp16))[name = tensor<string, []>("op_1950_cast_fp16")];
            tensor<bool, []> input_75_interleave_0 = const()[name = tensor<string, []>("input_75_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_75_cast_fp16 = concat(axis = var_1767, interleave = input_75_interleave_0, values = (var_1920_cast_fp16, var_1922_cast_fp16, var_1924_cast_fp16, var_1926_cast_fp16, var_1928_cast_fp16, var_1930_cast_fp16, var_1932_cast_fp16, var_1934_cast_fp16, var_1936_cast_fp16, var_1938_cast_fp16, var_1940_cast_fp16, var_1942_cast_fp16, var_1944_cast_fp16, var_1946_cast_fp16, var_1948_cast_fp16, var_1950_cast_fp16))[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<string, []> var_1959_pad_type_0 = const()[name = tensor<string, []>("op_1959_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1959_strides_0 = const()[name = tensor<string, []>("op_1959_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1959_pad_0 = const()[name = tensor<string, []>("op_1959_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1959_dilations_0 = const()[name = tensor<string, []>("op_1959_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1959_groups_0 = const()[name = tensor<string, []>("op_1959_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_7_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(192499072)))];
            tensor<fp16, [1024]> blocks_7_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_7_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(194596288)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1959_cast_fp16 = conv(bias = blocks_7_attn_out_bias_to_fp16, dilations = var_1959_dilations_0, groups = var_1959_groups_0, pad = var_1959_pad_0, pad_type = var_1959_pad_type_0, strides = var_1959_strides_0, weight = blocks_7_attn_out_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("op_1959_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_31_cast_fp16 = add(x = inputs_29_cast_fp16, y = var_1959_cast_fp16)[name = tensor<string, []>("inputs_31_cast_fp16")];
            tensor<int32, [1]> input_77_axes_0 = const()[name = tensor<string, []>("input_77_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_77_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_77_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(194598400)))];
            tensor<fp16, [1024]> input_77_beta_0_to_fp16 = const()[name = tensor<string, []>("input_77_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(194600512)))];
            tensor<fp16, []> var_1969_to_fp16 = const()[name = tensor<string, []>("op_1969_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_77_cast_fp16 = layer_norm(axes = input_77_axes_0, beta = input_77_beta_0_to_fp16, epsilon = var_1969_to_fp16, gamma = input_77_gamma_0_to_fp16, x = inputs_31_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<string, []> input_79_pad_type_0 = const()[name = tensor<string, []>("input_79_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_79_strides_0 = const()[name = tensor<string, []>("input_79_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_79_pad_0 = const()[name = tensor<string, []>("input_79_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_79_dilations_0 = const()[name = tensor<string, []>("input_79_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_79_groups_0 = const()[name = tensor<string, []>("input_79_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_7_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(194602624)))];
            tensor<fp16, [4096]> blocks_7_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_7_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(202991296)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_79_cast_fp16 = conv(bias = blocks_7_mlp_0_bias_to_fp16, dilations = input_79_dilations_0, groups = input_79_groups_0, pad = input_79_pad_0, pad_type = input_79_pad_type_0, strides = input_79_strides_0, weight = blocks_7_mlp_0_weight_to_fp16, x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<string, []> input_81_mode_0 = const()[name = tensor<string, []>("input_81_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_81_cast_fp16 = gelu(mode = input_81_mode_0, x = input_79_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<string, []> var_1995_pad_type_0 = const()[name = tensor<string, []>("op_1995_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1995_strides_0 = const()[name = tensor<string, []>("op_1995_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1995_pad_0 = const()[name = tensor<string, []>("op_1995_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1995_dilations_0 = const()[name = tensor<string, []>("op_1995_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1995_groups_0 = const()[name = tensor<string, []>("op_1995_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_7_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_7_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(202999552)))];
            tensor<fp16, [1024]> blocks_7_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_7_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(211388224)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_1995_cast_fp16 = conv(bias = blocks_7_mlp_2_bias_to_fp16, dilations = var_1995_dilations_0, groups = var_1995_groups_0, pad = var_1995_pad_0, pad_type = var_1995_pad_type_0, strides = var_1995_strides_0, weight = blocks_7_mlp_2_weight_to_fp16, x = input_81_cast_fp16)[name = tensor<string, []>("op_1995_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_33_cast_fp16 = add(x = inputs_31_cast_fp16, y = var_1995_cast_fp16)[name = tensor<string, []>("inputs_33_cast_fp16")];
            tensor<int32, []> var_2004 = const()[name = tensor<string, []>("op_2004"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_83_axes_0 = const()[name = tensor<string, []>("input_83_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_83_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_83_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(211390336)))];
            tensor<fp16, [1024]> input_83_beta_0_to_fp16 = const()[name = tensor<string, []>("input_83_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(211392448)))];
            tensor<fp16, []> var_2020_to_fp16 = const()[name = tensor<string, []>("op_2020_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_83_cast_fp16 = layer_norm(axes = input_83_axes_0, beta = input_83_beta_0_to_fp16, epsilon = var_2020_to_fp16, gamma = input_83_gamma_0_to_fp16, x = inputs_33_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<string, []> q_17_pad_type_0 = const()[name = tensor<string, []>("q_17_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_17_strides_0 = const()[name = tensor<string, []>("q_17_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_17_pad_0 = const()[name = tensor<string, []>("q_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_17_dilations_0 = const()[name = tensor<string, []>("q_17_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_17_groups_0 = const()[name = tensor<string, []>("q_17_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_2055_weight_0_to_fp16 = const()[name = tensor<string, []>("op_2055_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(211394560)))];
            tensor<fp16, [1024]> var_2055_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2055_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(213491776)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2055_cast_fp16 = conv(bias = var_2055_bias_0_to_fp16, dilations = q_17_dilations_0, groups = q_17_groups_0, pad = q_17_pad_0, pad_type = q_17_pad_type_0, strides = q_17_strides_0, weight = var_2055_weight_0_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("op_2055_cast_fp16")];
            tensor<string, []> k_17_pad_type_0 = const()[name = tensor<string, []>("k_17_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_17_strides_0 = const()[name = tensor<string, []>("k_17_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_17_pad_0 = const()[name = tensor<string, []>("k_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_17_dilations_0 = const()[name = tensor<string, []>("k_17_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_17_groups_0 = const()[name = tensor<string, []>("k_17_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_8_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(213493888)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_17_cast_fp16 = conv(dilations = k_17_dilations_0, groups = k_17_groups_0, pad = k_17_pad_0, pad_type = k_17_pad_type_0, strides = k_17_strides_0, weight = blocks_8_attn_key_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("k_17_cast_fp16")];
            tensor<string, []> var_2053_pad_type_0 = const()[name = tensor<string, []>("op_2053_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2053_strides_0 = const()[name = tensor<string, []>("op_2053_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2053_pad_0 = const()[name = tensor<string, []>("op_2053_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2053_dilations_0 = const()[name = tensor<string, []>("op_2053_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2053_groups_0 = const()[name = tensor<string, []>("op_2053_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_8_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(215591104)))];
            tensor<fp16, [1024]> blocks_8_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217688320)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2053_cast_fp16 = conv(bias = blocks_8_attn_value_bias_to_fp16, dilations = var_2053_dilations_0, groups = var_2053_groups_0, pad = var_2053_pad_0, pad_type = var_2053_pad_type_0, strides = var_2053_strides_0, weight = blocks_8_attn_value_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("op_2053_cast_fp16")];
            tensor<int32, [16]> tile_24 = const()[name = tensor<string, []>("tile_24"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2056_axis_0 = const()[name = tensor<string, []>("op_2056_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2056_cast_fp16_15 = split(axis = var_2056_axis_0, split_sizes = tile_24, x = var_2055_cast_fp16)[name = tensor<string, []>("op_2056_cast_fp16")];
            tensor<int32, [4]> var_2073_perm_0 = const()[name = tensor<string, []>("op_2073_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_25 = const()[name = tensor<string, []>("tile_25"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2074_axis_0 = const()[name = tensor<string, []>("op_2074_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_2073_cast_fp16 = transpose(perm = var_2073_perm_0, x = k_17_cast_fp16)[name = tensor<string, []>("transpose_16")];
            tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_2074_cast_fp16_15 = split(axis = var_2074_axis_0, split_sizes = tile_25, x = var_2073_cast_fp16)[name = tensor<string, []>("op_2074_cast_fp16")];
            tensor<int32, [16]> tile_26 = const()[name = tensor<string, []>("tile_26"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2091_axis_0 = const()[name = tensor<string, []>("op_2091_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2091_cast_fp16_15 = split(axis = var_2091_axis_0, split_sizes = tile_26, x = var_2053_cast_fp16)[name = tensor<string, []>("op_2091_cast_fp16")];
            tensor<string, []> aw_257_equation_0 = const()[name = tensor<string, []>("aw_257_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_257_cast_fp16 = einsum(equation = aw_257_equation_0, values = (var_2074_cast_fp16_0, var_2056_cast_fp16_0))[name = tensor<string, []>("aw_257_cast_fp16")];
            tensor<string, []> aw_259_equation_0 = const()[name = tensor<string, []>("aw_259_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_259_cast_fp16 = einsum(equation = aw_259_equation_0, values = (var_2074_cast_fp16_1, var_2056_cast_fp16_1))[name = tensor<string, []>("aw_259_cast_fp16")];
            tensor<string, []> aw_261_equation_0 = const()[name = tensor<string, []>("aw_261_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_261_cast_fp16 = einsum(equation = aw_261_equation_0, values = (var_2074_cast_fp16_2, var_2056_cast_fp16_2))[name = tensor<string, []>("aw_261_cast_fp16")];
            tensor<string, []> aw_263_equation_0 = const()[name = tensor<string, []>("aw_263_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_263_cast_fp16 = einsum(equation = aw_263_equation_0, values = (var_2074_cast_fp16_3, var_2056_cast_fp16_3))[name = tensor<string, []>("aw_263_cast_fp16")];
            tensor<string, []> aw_265_equation_0 = const()[name = tensor<string, []>("aw_265_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_265_cast_fp16 = einsum(equation = aw_265_equation_0, values = (var_2074_cast_fp16_4, var_2056_cast_fp16_4))[name = tensor<string, []>("aw_265_cast_fp16")];
            tensor<string, []> aw_267_equation_0 = const()[name = tensor<string, []>("aw_267_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_267_cast_fp16 = einsum(equation = aw_267_equation_0, values = (var_2074_cast_fp16_5, var_2056_cast_fp16_5))[name = tensor<string, []>("aw_267_cast_fp16")];
            tensor<string, []> aw_269_equation_0 = const()[name = tensor<string, []>("aw_269_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_269_cast_fp16 = einsum(equation = aw_269_equation_0, values = (var_2074_cast_fp16_6, var_2056_cast_fp16_6))[name = tensor<string, []>("aw_269_cast_fp16")];
            tensor<string, []> aw_271_equation_0 = const()[name = tensor<string, []>("aw_271_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_271_cast_fp16 = einsum(equation = aw_271_equation_0, values = (var_2074_cast_fp16_7, var_2056_cast_fp16_7))[name = tensor<string, []>("aw_271_cast_fp16")];
            tensor<string, []> aw_273_equation_0 = const()[name = tensor<string, []>("aw_273_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_273_cast_fp16 = einsum(equation = aw_273_equation_0, values = (var_2074_cast_fp16_8, var_2056_cast_fp16_8))[name = tensor<string, []>("aw_273_cast_fp16")];
            tensor<string, []> aw_275_equation_0 = const()[name = tensor<string, []>("aw_275_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_275_cast_fp16 = einsum(equation = aw_275_equation_0, values = (var_2074_cast_fp16_9, var_2056_cast_fp16_9))[name = tensor<string, []>("aw_275_cast_fp16")];
            tensor<string, []> aw_277_equation_0 = const()[name = tensor<string, []>("aw_277_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_277_cast_fp16 = einsum(equation = aw_277_equation_0, values = (var_2074_cast_fp16_10, var_2056_cast_fp16_10))[name = tensor<string, []>("aw_277_cast_fp16")];
            tensor<string, []> aw_279_equation_0 = const()[name = tensor<string, []>("aw_279_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_279_cast_fp16 = einsum(equation = aw_279_equation_0, values = (var_2074_cast_fp16_11, var_2056_cast_fp16_11))[name = tensor<string, []>("aw_279_cast_fp16")];
            tensor<string, []> aw_281_equation_0 = const()[name = tensor<string, []>("aw_281_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_281_cast_fp16 = einsum(equation = aw_281_equation_0, values = (var_2074_cast_fp16_12, var_2056_cast_fp16_12))[name = tensor<string, []>("aw_281_cast_fp16")];
            tensor<string, []> aw_283_equation_0 = const()[name = tensor<string, []>("aw_283_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_283_cast_fp16 = einsum(equation = aw_283_equation_0, values = (var_2074_cast_fp16_13, var_2056_cast_fp16_13))[name = tensor<string, []>("aw_283_cast_fp16")];
            tensor<string, []> aw_285_equation_0 = const()[name = tensor<string, []>("aw_285_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_285_cast_fp16 = einsum(equation = aw_285_equation_0, values = (var_2074_cast_fp16_14, var_2056_cast_fp16_14))[name = tensor<string, []>("aw_285_cast_fp16")];
            tensor<string, []> aw_287_equation_0 = const()[name = tensor<string, []>("aw_287_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_287_cast_fp16 = einsum(equation = aw_287_equation_0, values = (var_2074_cast_fp16_15, var_2056_cast_fp16_15))[name = tensor<string, []>("aw_287_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2140_cast_fp16 = softmax(axis = var_2004, x = aw_257_cast_fp16)[name = tensor<string, []>("op_2140_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2141_cast_fp16 = softmax(axis = var_2004, x = aw_259_cast_fp16)[name = tensor<string, []>("op_2141_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2142_cast_fp16 = softmax(axis = var_2004, x = aw_261_cast_fp16)[name = tensor<string, []>("op_2142_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2143_cast_fp16 = softmax(axis = var_2004, x = aw_263_cast_fp16)[name = tensor<string, []>("op_2143_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2144_cast_fp16 = softmax(axis = var_2004, x = aw_265_cast_fp16)[name = tensor<string, []>("op_2144_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2145_cast_fp16 = softmax(axis = var_2004, x = aw_267_cast_fp16)[name = tensor<string, []>("op_2145_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2146_cast_fp16 = softmax(axis = var_2004, x = aw_269_cast_fp16)[name = tensor<string, []>("op_2146_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2147_cast_fp16 = softmax(axis = var_2004, x = aw_271_cast_fp16)[name = tensor<string, []>("op_2147_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2148_cast_fp16 = softmax(axis = var_2004, x = aw_273_cast_fp16)[name = tensor<string, []>("op_2148_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2149_cast_fp16 = softmax(axis = var_2004, x = aw_275_cast_fp16)[name = tensor<string, []>("op_2149_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2150_cast_fp16 = softmax(axis = var_2004, x = aw_277_cast_fp16)[name = tensor<string, []>("op_2150_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2151_cast_fp16 = softmax(axis = var_2004, x = aw_279_cast_fp16)[name = tensor<string, []>("op_2151_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2152_cast_fp16 = softmax(axis = var_2004, x = aw_281_cast_fp16)[name = tensor<string, []>("op_2152_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2153_cast_fp16 = softmax(axis = var_2004, x = aw_283_cast_fp16)[name = tensor<string, []>("op_2153_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2154_cast_fp16 = softmax(axis = var_2004, x = aw_285_cast_fp16)[name = tensor<string, []>("op_2154_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2155_cast_fp16 = softmax(axis = var_2004, x = aw_287_cast_fp16)[name = tensor<string, []>("op_2155_cast_fp16")];
            tensor<string, []> var_2157_equation_0 = const()[name = tensor<string, []>("op_2157_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2157_cast_fp16 = einsum(equation = var_2157_equation_0, values = (var_2091_cast_fp16_0, var_2140_cast_fp16))[name = tensor<string, []>("op_2157_cast_fp16")];
            tensor<string, []> var_2159_equation_0 = const()[name = tensor<string, []>("op_2159_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2159_cast_fp16 = einsum(equation = var_2159_equation_0, values = (var_2091_cast_fp16_1, var_2141_cast_fp16))[name = tensor<string, []>("op_2159_cast_fp16")];
            tensor<string, []> var_2161_equation_0 = const()[name = tensor<string, []>("op_2161_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2161_cast_fp16 = einsum(equation = var_2161_equation_0, values = (var_2091_cast_fp16_2, var_2142_cast_fp16))[name = tensor<string, []>("op_2161_cast_fp16")];
            tensor<string, []> var_2163_equation_0 = const()[name = tensor<string, []>("op_2163_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2163_cast_fp16 = einsum(equation = var_2163_equation_0, values = (var_2091_cast_fp16_3, var_2143_cast_fp16))[name = tensor<string, []>("op_2163_cast_fp16")];
            tensor<string, []> var_2165_equation_0 = const()[name = tensor<string, []>("op_2165_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2165_cast_fp16 = einsum(equation = var_2165_equation_0, values = (var_2091_cast_fp16_4, var_2144_cast_fp16))[name = tensor<string, []>("op_2165_cast_fp16")];
            tensor<string, []> var_2167_equation_0 = const()[name = tensor<string, []>("op_2167_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2167_cast_fp16 = einsum(equation = var_2167_equation_0, values = (var_2091_cast_fp16_5, var_2145_cast_fp16))[name = tensor<string, []>("op_2167_cast_fp16")];
            tensor<string, []> var_2169_equation_0 = const()[name = tensor<string, []>("op_2169_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2169_cast_fp16 = einsum(equation = var_2169_equation_0, values = (var_2091_cast_fp16_6, var_2146_cast_fp16))[name = tensor<string, []>("op_2169_cast_fp16")];
            tensor<string, []> var_2171_equation_0 = const()[name = tensor<string, []>("op_2171_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2171_cast_fp16 = einsum(equation = var_2171_equation_0, values = (var_2091_cast_fp16_7, var_2147_cast_fp16))[name = tensor<string, []>("op_2171_cast_fp16")];
            tensor<string, []> var_2173_equation_0 = const()[name = tensor<string, []>("op_2173_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2173_cast_fp16 = einsum(equation = var_2173_equation_0, values = (var_2091_cast_fp16_8, var_2148_cast_fp16))[name = tensor<string, []>("op_2173_cast_fp16")];
            tensor<string, []> var_2175_equation_0 = const()[name = tensor<string, []>("op_2175_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2175_cast_fp16 = einsum(equation = var_2175_equation_0, values = (var_2091_cast_fp16_9, var_2149_cast_fp16))[name = tensor<string, []>("op_2175_cast_fp16")];
            tensor<string, []> var_2177_equation_0 = const()[name = tensor<string, []>("op_2177_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2177_cast_fp16 = einsum(equation = var_2177_equation_0, values = (var_2091_cast_fp16_10, var_2150_cast_fp16))[name = tensor<string, []>("op_2177_cast_fp16")];
            tensor<string, []> var_2179_equation_0 = const()[name = tensor<string, []>("op_2179_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2179_cast_fp16 = einsum(equation = var_2179_equation_0, values = (var_2091_cast_fp16_11, var_2151_cast_fp16))[name = tensor<string, []>("op_2179_cast_fp16")];
            tensor<string, []> var_2181_equation_0 = const()[name = tensor<string, []>("op_2181_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2181_cast_fp16 = einsum(equation = var_2181_equation_0, values = (var_2091_cast_fp16_12, var_2152_cast_fp16))[name = tensor<string, []>("op_2181_cast_fp16")];
            tensor<string, []> var_2183_equation_0 = const()[name = tensor<string, []>("op_2183_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2183_cast_fp16 = einsum(equation = var_2183_equation_0, values = (var_2091_cast_fp16_13, var_2153_cast_fp16))[name = tensor<string, []>("op_2183_cast_fp16")];
            tensor<string, []> var_2185_equation_0 = const()[name = tensor<string, []>("op_2185_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2185_cast_fp16 = einsum(equation = var_2185_equation_0, values = (var_2091_cast_fp16_14, var_2154_cast_fp16))[name = tensor<string, []>("op_2185_cast_fp16")];
            tensor<string, []> var_2187_equation_0 = const()[name = tensor<string, []>("op_2187_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2187_cast_fp16 = einsum(equation = var_2187_equation_0, values = (var_2091_cast_fp16_15, var_2155_cast_fp16))[name = tensor<string, []>("op_2187_cast_fp16")];
            tensor<bool, []> input_85_interleave_0 = const()[name = tensor<string, []>("input_85_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_85_cast_fp16 = concat(axis = var_2004, interleave = input_85_interleave_0, values = (var_2157_cast_fp16, var_2159_cast_fp16, var_2161_cast_fp16, var_2163_cast_fp16, var_2165_cast_fp16, var_2167_cast_fp16, var_2169_cast_fp16, var_2171_cast_fp16, var_2173_cast_fp16, var_2175_cast_fp16, var_2177_cast_fp16, var_2179_cast_fp16, var_2181_cast_fp16, var_2183_cast_fp16, var_2185_cast_fp16, var_2187_cast_fp16))[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<string, []> var_2196_pad_type_0 = const()[name = tensor<string, []>("op_2196_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2196_strides_0 = const()[name = tensor<string, []>("op_2196_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2196_pad_0 = const()[name = tensor<string, []>("op_2196_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2196_dilations_0 = const()[name = tensor<string, []>("op_2196_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2196_groups_0 = const()[name = tensor<string, []>("op_2196_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_8_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217690432)))];
            tensor<fp16, [1024]> blocks_8_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_8_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(219787648)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2196_cast_fp16 = conv(bias = blocks_8_attn_out_bias_to_fp16, dilations = var_2196_dilations_0, groups = var_2196_groups_0, pad = var_2196_pad_0, pad_type = var_2196_pad_type_0, strides = var_2196_strides_0, weight = blocks_8_attn_out_weight_to_fp16, x = input_85_cast_fp16)[name = tensor<string, []>("op_2196_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_35_cast_fp16 = add(x = inputs_33_cast_fp16, y = var_2196_cast_fp16)[name = tensor<string, []>("inputs_35_cast_fp16")];
            tensor<int32, [1]> input_87_axes_0 = const()[name = tensor<string, []>("input_87_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_87_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_87_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(219789760)))];
            tensor<fp16, [1024]> input_87_beta_0_to_fp16 = const()[name = tensor<string, []>("input_87_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(219791872)))];
            tensor<fp16, []> var_2206_to_fp16 = const()[name = tensor<string, []>("op_2206_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_87_cast_fp16 = layer_norm(axes = input_87_axes_0, beta = input_87_beta_0_to_fp16, epsilon = var_2206_to_fp16, gamma = input_87_gamma_0_to_fp16, x = inputs_35_cast_fp16)[name = tensor<string, []>("input_87_cast_fp16")];
            tensor<string, []> input_89_pad_type_0 = const()[name = tensor<string, []>("input_89_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_89_strides_0 = const()[name = tensor<string, []>("input_89_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_89_pad_0 = const()[name = tensor<string, []>("input_89_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_89_dilations_0 = const()[name = tensor<string, []>("input_89_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_89_groups_0 = const()[name = tensor<string, []>("input_89_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_8_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(219793984)))];
            tensor<fp16, [4096]> blocks_8_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_8_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(228182656)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_89_cast_fp16 = conv(bias = blocks_8_mlp_0_bias_to_fp16, dilations = input_89_dilations_0, groups = input_89_groups_0, pad = input_89_pad_0, pad_type = input_89_pad_type_0, strides = input_89_strides_0, weight = blocks_8_mlp_0_weight_to_fp16, x = input_87_cast_fp16)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<string, []> input_91_mode_0 = const()[name = tensor<string, []>("input_91_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_91_cast_fp16 = gelu(mode = input_91_mode_0, x = input_89_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<string, []> var_2232_pad_type_0 = const()[name = tensor<string, []>("op_2232_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2232_strides_0 = const()[name = tensor<string, []>("op_2232_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2232_pad_0 = const()[name = tensor<string, []>("op_2232_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2232_dilations_0 = const()[name = tensor<string, []>("op_2232_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2232_groups_0 = const()[name = tensor<string, []>("op_2232_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_8_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_8_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(228190912)))];
            tensor<fp16, [1024]> blocks_8_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_8_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236579584)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2232_cast_fp16 = conv(bias = blocks_8_mlp_2_bias_to_fp16, dilations = var_2232_dilations_0, groups = var_2232_groups_0, pad = var_2232_pad_0, pad_type = var_2232_pad_type_0, strides = var_2232_strides_0, weight = blocks_8_mlp_2_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("op_2232_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_37_cast_fp16 = add(x = inputs_35_cast_fp16, y = var_2232_cast_fp16)[name = tensor<string, []>("inputs_37_cast_fp16")];
            tensor<int32, []> var_2241 = const()[name = tensor<string, []>("op_2241"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_93_axes_0 = const()[name = tensor<string, []>("input_93_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_93_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_93_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236581696)))];
            tensor<fp16, [1024]> input_93_beta_0_to_fp16 = const()[name = tensor<string, []>("input_93_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236583808)))];
            tensor<fp16, []> var_2257_to_fp16 = const()[name = tensor<string, []>("op_2257_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_93_cast_fp16 = layer_norm(axes = input_93_axes_0, beta = input_93_beta_0_to_fp16, epsilon = var_2257_to_fp16, gamma = input_93_gamma_0_to_fp16, x = inputs_37_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<string, []> q_19_pad_type_0 = const()[name = tensor<string, []>("q_19_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_19_strides_0 = const()[name = tensor<string, []>("q_19_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_19_pad_0 = const()[name = tensor<string, []>("q_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_19_dilations_0 = const()[name = tensor<string, []>("q_19_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_19_groups_0 = const()[name = tensor<string, []>("q_19_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_2292_weight_0_to_fp16 = const()[name = tensor<string, []>("op_2292_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236585920)))];
            tensor<fp16, [1024]> var_2292_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2292_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(238683136)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2292_cast_fp16 = conv(bias = var_2292_bias_0_to_fp16, dilations = q_19_dilations_0, groups = q_19_groups_0, pad = q_19_pad_0, pad_type = q_19_pad_type_0, strides = q_19_strides_0, weight = var_2292_weight_0_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("op_2292_cast_fp16")];
            tensor<string, []> k_19_pad_type_0 = const()[name = tensor<string, []>("k_19_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_19_strides_0 = const()[name = tensor<string, []>("k_19_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_19_pad_0 = const()[name = tensor<string, []>("k_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_19_dilations_0 = const()[name = tensor<string, []>("k_19_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_19_groups_0 = const()[name = tensor<string, []>("k_19_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_9_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(238685248)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_19_cast_fp16 = conv(dilations = k_19_dilations_0, groups = k_19_groups_0, pad = k_19_pad_0, pad_type = k_19_pad_type_0, strides = k_19_strides_0, weight = blocks_9_attn_key_weight_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("k_19_cast_fp16")];
            tensor<string, []> var_2290_pad_type_0 = const()[name = tensor<string, []>("op_2290_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2290_strides_0 = const()[name = tensor<string, []>("op_2290_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2290_pad_0 = const()[name = tensor<string, []>("op_2290_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2290_dilations_0 = const()[name = tensor<string, []>("op_2290_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2290_groups_0 = const()[name = tensor<string, []>("op_2290_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_9_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(240782464)))];
            tensor<fp16, [1024]> blocks_9_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(242879680)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2290_cast_fp16 = conv(bias = blocks_9_attn_value_bias_to_fp16, dilations = var_2290_dilations_0, groups = var_2290_groups_0, pad = var_2290_pad_0, pad_type = var_2290_pad_type_0, strides = var_2290_strides_0, weight = blocks_9_attn_value_weight_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("op_2290_cast_fp16")];
            tensor<int32, [16]> tile_27 = const()[name = tensor<string, []>("tile_27"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2293_axis_0 = const()[name = tensor<string, []>("op_2293_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2293_cast_fp16_15 = split(axis = var_2293_axis_0, split_sizes = tile_27, x = var_2292_cast_fp16)[name = tensor<string, []>("op_2293_cast_fp16")];
            tensor<int32, [4]> var_2310_perm_0 = const()[name = tensor<string, []>("op_2310_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_28 = const()[name = tensor<string, []>("tile_28"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2311_axis_0 = const()[name = tensor<string, []>("op_2311_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_2310_cast_fp16 = transpose(perm = var_2310_perm_0, x = k_19_cast_fp16)[name = tensor<string, []>("transpose_15")];
            tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_2311_cast_fp16_15 = split(axis = var_2311_axis_0, split_sizes = tile_28, x = var_2310_cast_fp16)[name = tensor<string, []>("op_2311_cast_fp16")];
            tensor<int32, [16]> tile_29 = const()[name = tensor<string, []>("tile_29"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2328_axis_0 = const()[name = tensor<string, []>("op_2328_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2328_cast_fp16_15 = split(axis = var_2328_axis_0, split_sizes = tile_29, x = var_2290_cast_fp16)[name = tensor<string, []>("op_2328_cast_fp16")];
            tensor<string, []> aw_289_equation_0 = const()[name = tensor<string, []>("aw_289_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_289_cast_fp16 = einsum(equation = aw_289_equation_0, values = (var_2311_cast_fp16_0, var_2293_cast_fp16_0))[name = tensor<string, []>("aw_289_cast_fp16")];
            tensor<string, []> aw_291_equation_0 = const()[name = tensor<string, []>("aw_291_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_291_cast_fp16 = einsum(equation = aw_291_equation_0, values = (var_2311_cast_fp16_1, var_2293_cast_fp16_1))[name = tensor<string, []>("aw_291_cast_fp16")];
            tensor<string, []> aw_293_equation_0 = const()[name = tensor<string, []>("aw_293_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_293_cast_fp16 = einsum(equation = aw_293_equation_0, values = (var_2311_cast_fp16_2, var_2293_cast_fp16_2))[name = tensor<string, []>("aw_293_cast_fp16")];
            tensor<string, []> aw_295_equation_0 = const()[name = tensor<string, []>("aw_295_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_295_cast_fp16 = einsum(equation = aw_295_equation_0, values = (var_2311_cast_fp16_3, var_2293_cast_fp16_3))[name = tensor<string, []>("aw_295_cast_fp16")];
            tensor<string, []> aw_297_equation_0 = const()[name = tensor<string, []>("aw_297_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_297_cast_fp16 = einsum(equation = aw_297_equation_0, values = (var_2311_cast_fp16_4, var_2293_cast_fp16_4))[name = tensor<string, []>("aw_297_cast_fp16")];
            tensor<string, []> aw_299_equation_0 = const()[name = tensor<string, []>("aw_299_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_299_cast_fp16 = einsum(equation = aw_299_equation_0, values = (var_2311_cast_fp16_5, var_2293_cast_fp16_5))[name = tensor<string, []>("aw_299_cast_fp16")];
            tensor<string, []> aw_301_equation_0 = const()[name = tensor<string, []>("aw_301_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_301_cast_fp16 = einsum(equation = aw_301_equation_0, values = (var_2311_cast_fp16_6, var_2293_cast_fp16_6))[name = tensor<string, []>("aw_301_cast_fp16")];
            tensor<string, []> aw_303_equation_0 = const()[name = tensor<string, []>("aw_303_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_303_cast_fp16 = einsum(equation = aw_303_equation_0, values = (var_2311_cast_fp16_7, var_2293_cast_fp16_7))[name = tensor<string, []>("aw_303_cast_fp16")];
            tensor<string, []> aw_305_equation_0 = const()[name = tensor<string, []>("aw_305_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_305_cast_fp16 = einsum(equation = aw_305_equation_0, values = (var_2311_cast_fp16_8, var_2293_cast_fp16_8))[name = tensor<string, []>("aw_305_cast_fp16")];
            tensor<string, []> aw_307_equation_0 = const()[name = tensor<string, []>("aw_307_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_307_cast_fp16 = einsum(equation = aw_307_equation_0, values = (var_2311_cast_fp16_9, var_2293_cast_fp16_9))[name = tensor<string, []>("aw_307_cast_fp16")];
            tensor<string, []> aw_309_equation_0 = const()[name = tensor<string, []>("aw_309_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_309_cast_fp16 = einsum(equation = aw_309_equation_0, values = (var_2311_cast_fp16_10, var_2293_cast_fp16_10))[name = tensor<string, []>("aw_309_cast_fp16")];
            tensor<string, []> aw_311_equation_0 = const()[name = tensor<string, []>("aw_311_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_311_cast_fp16 = einsum(equation = aw_311_equation_0, values = (var_2311_cast_fp16_11, var_2293_cast_fp16_11))[name = tensor<string, []>("aw_311_cast_fp16")];
            tensor<string, []> aw_313_equation_0 = const()[name = tensor<string, []>("aw_313_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_313_cast_fp16 = einsum(equation = aw_313_equation_0, values = (var_2311_cast_fp16_12, var_2293_cast_fp16_12))[name = tensor<string, []>("aw_313_cast_fp16")];
            tensor<string, []> aw_315_equation_0 = const()[name = tensor<string, []>("aw_315_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_315_cast_fp16 = einsum(equation = aw_315_equation_0, values = (var_2311_cast_fp16_13, var_2293_cast_fp16_13))[name = tensor<string, []>("aw_315_cast_fp16")];
            tensor<string, []> aw_317_equation_0 = const()[name = tensor<string, []>("aw_317_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_317_cast_fp16 = einsum(equation = aw_317_equation_0, values = (var_2311_cast_fp16_14, var_2293_cast_fp16_14))[name = tensor<string, []>("aw_317_cast_fp16")];
            tensor<string, []> aw_319_equation_0 = const()[name = tensor<string, []>("aw_319_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_319_cast_fp16 = einsum(equation = aw_319_equation_0, values = (var_2311_cast_fp16_15, var_2293_cast_fp16_15))[name = tensor<string, []>("aw_319_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2377_cast_fp16 = softmax(axis = var_2241, x = aw_289_cast_fp16)[name = tensor<string, []>("op_2377_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2378_cast_fp16 = softmax(axis = var_2241, x = aw_291_cast_fp16)[name = tensor<string, []>("op_2378_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2379_cast_fp16 = softmax(axis = var_2241, x = aw_293_cast_fp16)[name = tensor<string, []>("op_2379_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2380_cast_fp16 = softmax(axis = var_2241, x = aw_295_cast_fp16)[name = tensor<string, []>("op_2380_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2381_cast_fp16 = softmax(axis = var_2241, x = aw_297_cast_fp16)[name = tensor<string, []>("op_2381_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2382_cast_fp16 = softmax(axis = var_2241, x = aw_299_cast_fp16)[name = tensor<string, []>("op_2382_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2383_cast_fp16 = softmax(axis = var_2241, x = aw_301_cast_fp16)[name = tensor<string, []>("op_2383_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2384_cast_fp16 = softmax(axis = var_2241, x = aw_303_cast_fp16)[name = tensor<string, []>("op_2384_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2385_cast_fp16 = softmax(axis = var_2241, x = aw_305_cast_fp16)[name = tensor<string, []>("op_2385_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2386_cast_fp16 = softmax(axis = var_2241, x = aw_307_cast_fp16)[name = tensor<string, []>("op_2386_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2387_cast_fp16 = softmax(axis = var_2241, x = aw_309_cast_fp16)[name = tensor<string, []>("op_2387_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2388_cast_fp16 = softmax(axis = var_2241, x = aw_311_cast_fp16)[name = tensor<string, []>("op_2388_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2389_cast_fp16 = softmax(axis = var_2241, x = aw_313_cast_fp16)[name = tensor<string, []>("op_2389_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2390_cast_fp16 = softmax(axis = var_2241, x = aw_315_cast_fp16)[name = tensor<string, []>("op_2390_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2391_cast_fp16 = softmax(axis = var_2241, x = aw_317_cast_fp16)[name = tensor<string, []>("op_2391_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2392_cast_fp16 = softmax(axis = var_2241, x = aw_319_cast_fp16)[name = tensor<string, []>("op_2392_cast_fp16")];
            tensor<string, []> var_2394_equation_0 = const()[name = tensor<string, []>("op_2394_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2394_cast_fp16 = einsum(equation = var_2394_equation_0, values = (var_2328_cast_fp16_0, var_2377_cast_fp16))[name = tensor<string, []>("op_2394_cast_fp16")];
            tensor<string, []> var_2396_equation_0 = const()[name = tensor<string, []>("op_2396_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2396_cast_fp16 = einsum(equation = var_2396_equation_0, values = (var_2328_cast_fp16_1, var_2378_cast_fp16))[name = tensor<string, []>("op_2396_cast_fp16")];
            tensor<string, []> var_2398_equation_0 = const()[name = tensor<string, []>("op_2398_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2398_cast_fp16 = einsum(equation = var_2398_equation_0, values = (var_2328_cast_fp16_2, var_2379_cast_fp16))[name = tensor<string, []>("op_2398_cast_fp16")];
            tensor<string, []> var_2400_equation_0 = const()[name = tensor<string, []>("op_2400_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2400_cast_fp16 = einsum(equation = var_2400_equation_0, values = (var_2328_cast_fp16_3, var_2380_cast_fp16))[name = tensor<string, []>("op_2400_cast_fp16")];
            tensor<string, []> var_2402_equation_0 = const()[name = tensor<string, []>("op_2402_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2402_cast_fp16 = einsum(equation = var_2402_equation_0, values = (var_2328_cast_fp16_4, var_2381_cast_fp16))[name = tensor<string, []>("op_2402_cast_fp16")];
            tensor<string, []> var_2404_equation_0 = const()[name = tensor<string, []>("op_2404_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2404_cast_fp16 = einsum(equation = var_2404_equation_0, values = (var_2328_cast_fp16_5, var_2382_cast_fp16))[name = tensor<string, []>("op_2404_cast_fp16")];
            tensor<string, []> var_2406_equation_0 = const()[name = tensor<string, []>("op_2406_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2406_cast_fp16 = einsum(equation = var_2406_equation_0, values = (var_2328_cast_fp16_6, var_2383_cast_fp16))[name = tensor<string, []>("op_2406_cast_fp16")];
            tensor<string, []> var_2408_equation_0 = const()[name = tensor<string, []>("op_2408_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2408_cast_fp16 = einsum(equation = var_2408_equation_0, values = (var_2328_cast_fp16_7, var_2384_cast_fp16))[name = tensor<string, []>("op_2408_cast_fp16")];
            tensor<string, []> var_2410_equation_0 = const()[name = tensor<string, []>("op_2410_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2410_cast_fp16 = einsum(equation = var_2410_equation_0, values = (var_2328_cast_fp16_8, var_2385_cast_fp16))[name = tensor<string, []>("op_2410_cast_fp16")];
            tensor<string, []> var_2412_equation_0 = const()[name = tensor<string, []>("op_2412_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2412_cast_fp16 = einsum(equation = var_2412_equation_0, values = (var_2328_cast_fp16_9, var_2386_cast_fp16))[name = tensor<string, []>("op_2412_cast_fp16")];
            tensor<string, []> var_2414_equation_0 = const()[name = tensor<string, []>("op_2414_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2414_cast_fp16 = einsum(equation = var_2414_equation_0, values = (var_2328_cast_fp16_10, var_2387_cast_fp16))[name = tensor<string, []>("op_2414_cast_fp16")];
            tensor<string, []> var_2416_equation_0 = const()[name = tensor<string, []>("op_2416_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2416_cast_fp16 = einsum(equation = var_2416_equation_0, values = (var_2328_cast_fp16_11, var_2388_cast_fp16))[name = tensor<string, []>("op_2416_cast_fp16")];
            tensor<string, []> var_2418_equation_0 = const()[name = tensor<string, []>("op_2418_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2418_cast_fp16 = einsum(equation = var_2418_equation_0, values = (var_2328_cast_fp16_12, var_2389_cast_fp16))[name = tensor<string, []>("op_2418_cast_fp16")];
            tensor<string, []> var_2420_equation_0 = const()[name = tensor<string, []>("op_2420_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2420_cast_fp16 = einsum(equation = var_2420_equation_0, values = (var_2328_cast_fp16_13, var_2390_cast_fp16))[name = tensor<string, []>("op_2420_cast_fp16")];
            tensor<string, []> var_2422_equation_0 = const()[name = tensor<string, []>("op_2422_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2422_cast_fp16 = einsum(equation = var_2422_equation_0, values = (var_2328_cast_fp16_14, var_2391_cast_fp16))[name = tensor<string, []>("op_2422_cast_fp16")];
            tensor<string, []> var_2424_equation_0 = const()[name = tensor<string, []>("op_2424_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2424_cast_fp16 = einsum(equation = var_2424_equation_0, values = (var_2328_cast_fp16_15, var_2392_cast_fp16))[name = tensor<string, []>("op_2424_cast_fp16")];
            tensor<bool, []> input_95_interleave_0 = const()[name = tensor<string, []>("input_95_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_95_cast_fp16 = concat(axis = var_2241, interleave = input_95_interleave_0, values = (var_2394_cast_fp16, var_2396_cast_fp16, var_2398_cast_fp16, var_2400_cast_fp16, var_2402_cast_fp16, var_2404_cast_fp16, var_2406_cast_fp16, var_2408_cast_fp16, var_2410_cast_fp16, var_2412_cast_fp16, var_2414_cast_fp16, var_2416_cast_fp16, var_2418_cast_fp16, var_2420_cast_fp16, var_2422_cast_fp16, var_2424_cast_fp16))[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<string, []> var_2433_pad_type_0 = const()[name = tensor<string, []>("op_2433_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2433_strides_0 = const()[name = tensor<string, []>("op_2433_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2433_pad_0 = const()[name = tensor<string, []>("op_2433_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2433_dilations_0 = const()[name = tensor<string, []>("op_2433_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2433_groups_0 = const()[name = tensor<string, []>("op_2433_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_9_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(242881792)))];
            tensor<fp16, [1024]> blocks_9_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_9_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(244979008)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2433_cast_fp16 = conv(bias = blocks_9_attn_out_bias_to_fp16, dilations = var_2433_dilations_0, groups = var_2433_groups_0, pad = var_2433_pad_0, pad_type = var_2433_pad_type_0, strides = var_2433_strides_0, weight = blocks_9_attn_out_weight_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("op_2433_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_39_cast_fp16 = add(x = inputs_37_cast_fp16, y = var_2433_cast_fp16)[name = tensor<string, []>("inputs_39_cast_fp16")];
            tensor<int32, [1]> input_97_axes_0 = const()[name = tensor<string, []>("input_97_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_97_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_97_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(244981120)))];
            tensor<fp16, [1024]> input_97_beta_0_to_fp16 = const()[name = tensor<string, []>("input_97_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(244983232)))];
            tensor<fp16, []> var_2443_to_fp16 = const()[name = tensor<string, []>("op_2443_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_97_cast_fp16 = layer_norm(axes = input_97_axes_0, beta = input_97_beta_0_to_fp16, epsilon = var_2443_to_fp16, gamma = input_97_gamma_0_to_fp16, x = inputs_39_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<string, []> input_99_pad_type_0 = const()[name = tensor<string, []>("input_99_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_99_strides_0 = const()[name = tensor<string, []>("input_99_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_99_pad_0 = const()[name = tensor<string, []>("input_99_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_99_dilations_0 = const()[name = tensor<string, []>("input_99_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_99_groups_0 = const()[name = tensor<string, []>("input_99_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_9_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(244985344)))];
            tensor<fp16, [4096]> blocks_9_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_9_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(253374016)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_99_cast_fp16 = conv(bias = blocks_9_mlp_0_bias_to_fp16, dilations = input_99_dilations_0, groups = input_99_groups_0, pad = input_99_pad_0, pad_type = input_99_pad_type_0, strides = input_99_strides_0, weight = blocks_9_mlp_0_weight_to_fp16, x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<string, []> input_101_mode_0 = const()[name = tensor<string, []>("input_101_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_101_cast_fp16 = gelu(mode = input_101_mode_0, x = input_99_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<string, []> var_2469_pad_type_0 = const()[name = tensor<string, []>("op_2469_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2469_strides_0 = const()[name = tensor<string, []>("op_2469_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2469_pad_0 = const()[name = tensor<string, []>("op_2469_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2469_dilations_0 = const()[name = tensor<string, []>("op_2469_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2469_groups_0 = const()[name = tensor<string, []>("op_2469_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_9_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_9_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(253382272)))];
            tensor<fp16, [1024]> blocks_9_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_9_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(261770944)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2469_cast_fp16 = conv(bias = blocks_9_mlp_2_bias_to_fp16, dilations = var_2469_dilations_0, groups = var_2469_groups_0, pad = var_2469_pad_0, pad_type = var_2469_pad_type_0, strides = var_2469_strides_0, weight = blocks_9_mlp_2_weight_to_fp16, x = input_101_cast_fp16)[name = tensor<string, []>("op_2469_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_41_cast_fp16 = add(x = inputs_39_cast_fp16, y = var_2469_cast_fp16)[name = tensor<string, []>("inputs_41_cast_fp16")];
            tensor<int32, []> var_2478 = const()[name = tensor<string, []>("op_2478"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_103_axes_0 = const()[name = tensor<string, []>("input_103_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_103_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_103_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(261773056)))];
            tensor<fp16, [1024]> input_103_beta_0_to_fp16 = const()[name = tensor<string, []>("input_103_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(261775168)))];
            tensor<fp16, []> var_2494_to_fp16 = const()[name = tensor<string, []>("op_2494_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_103_cast_fp16 = layer_norm(axes = input_103_axes_0, beta = input_103_beta_0_to_fp16, epsilon = var_2494_to_fp16, gamma = input_103_gamma_0_to_fp16, x = inputs_41_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<string, []> q_21_pad_type_0 = const()[name = tensor<string, []>("q_21_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_21_strides_0 = const()[name = tensor<string, []>("q_21_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_21_pad_0 = const()[name = tensor<string, []>("q_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_21_dilations_0 = const()[name = tensor<string, []>("q_21_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_21_groups_0 = const()[name = tensor<string, []>("q_21_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_2529_weight_0_to_fp16 = const()[name = tensor<string, []>("op_2529_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(261777280)))];
            tensor<fp16, [1024]> var_2529_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2529_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(263874496)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2529_cast_fp16 = conv(bias = var_2529_bias_0_to_fp16, dilations = q_21_dilations_0, groups = q_21_groups_0, pad = q_21_pad_0, pad_type = q_21_pad_type_0, strides = q_21_strides_0, weight = var_2529_weight_0_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("op_2529_cast_fp16")];
            tensor<string, []> k_21_pad_type_0 = const()[name = tensor<string, []>("k_21_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_21_strides_0 = const()[name = tensor<string, []>("k_21_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_21_pad_0 = const()[name = tensor<string, []>("k_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_21_dilations_0 = const()[name = tensor<string, []>("k_21_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_21_groups_0 = const()[name = tensor<string, []>("k_21_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_10_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(263876608)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_21_cast_fp16 = conv(dilations = k_21_dilations_0, groups = k_21_groups_0, pad = k_21_pad_0, pad_type = k_21_pad_type_0, strides = k_21_strides_0, weight = blocks_10_attn_key_weight_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("k_21_cast_fp16")];
            tensor<string, []> var_2527_pad_type_0 = const()[name = tensor<string, []>("op_2527_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2527_strides_0 = const()[name = tensor<string, []>("op_2527_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2527_pad_0 = const()[name = tensor<string, []>("op_2527_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2527_dilations_0 = const()[name = tensor<string, []>("op_2527_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2527_groups_0 = const()[name = tensor<string, []>("op_2527_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_10_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(265973824)))];
            tensor<fp16, [1024]> blocks_10_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(268071040)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2527_cast_fp16 = conv(bias = blocks_10_attn_value_bias_to_fp16, dilations = var_2527_dilations_0, groups = var_2527_groups_0, pad = var_2527_pad_0, pad_type = var_2527_pad_type_0, strides = var_2527_strides_0, weight = blocks_10_attn_value_weight_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("op_2527_cast_fp16")];
            tensor<int32, [16]> tile_30 = const()[name = tensor<string, []>("tile_30"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2530_axis_0 = const()[name = tensor<string, []>("op_2530_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2530_cast_fp16_15 = split(axis = var_2530_axis_0, split_sizes = tile_30, x = var_2529_cast_fp16)[name = tensor<string, []>("op_2530_cast_fp16")];
            tensor<int32, [4]> var_2547_perm_0 = const()[name = tensor<string, []>("op_2547_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_31 = const()[name = tensor<string, []>("tile_31"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2548_axis_0 = const()[name = tensor<string, []>("op_2548_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_2547_cast_fp16 = transpose(perm = var_2547_perm_0, x = k_21_cast_fp16)[name = tensor<string, []>("transpose_14")];
            tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_2548_cast_fp16_15 = split(axis = var_2548_axis_0, split_sizes = tile_31, x = var_2547_cast_fp16)[name = tensor<string, []>("op_2548_cast_fp16")];
            tensor<int32, [16]> tile_32 = const()[name = tensor<string, []>("tile_32"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2565_axis_0 = const()[name = tensor<string, []>("op_2565_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2565_cast_fp16_15 = split(axis = var_2565_axis_0, split_sizes = tile_32, x = var_2527_cast_fp16)[name = tensor<string, []>("op_2565_cast_fp16")];
            tensor<string, []> aw_321_equation_0 = const()[name = tensor<string, []>("aw_321_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_321_cast_fp16 = einsum(equation = aw_321_equation_0, values = (var_2548_cast_fp16_0, var_2530_cast_fp16_0))[name = tensor<string, []>("aw_321_cast_fp16")];
            tensor<string, []> aw_323_equation_0 = const()[name = tensor<string, []>("aw_323_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_323_cast_fp16 = einsum(equation = aw_323_equation_0, values = (var_2548_cast_fp16_1, var_2530_cast_fp16_1))[name = tensor<string, []>("aw_323_cast_fp16")];
            tensor<string, []> aw_325_equation_0 = const()[name = tensor<string, []>("aw_325_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_325_cast_fp16 = einsum(equation = aw_325_equation_0, values = (var_2548_cast_fp16_2, var_2530_cast_fp16_2))[name = tensor<string, []>("aw_325_cast_fp16")];
            tensor<string, []> aw_327_equation_0 = const()[name = tensor<string, []>("aw_327_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_327_cast_fp16 = einsum(equation = aw_327_equation_0, values = (var_2548_cast_fp16_3, var_2530_cast_fp16_3))[name = tensor<string, []>("aw_327_cast_fp16")];
            tensor<string, []> aw_329_equation_0 = const()[name = tensor<string, []>("aw_329_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_329_cast_fp16 = einsum(equation = aw_329_equation_0, values = (var_2548_cast_fp16_4, var_2530_cast_fp16_4))[name = tensor<string, []>("aw_329_cast_fp16")];
            tensor<string, []> aw_331_equation_0 = const()[name = tensor<string, []>("aw_331_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_331_cast_fp16 = einsum(equation = aw_331_equation_0, values = (var_2548_cast_fp16_5, var_2530_cast_fp16_5))[name = tensor<string, []>("aw_331_cast_fp16")];
            tensor<string, []> aw_333_equation_0 = const()[name = tensor<string, []>("aw_333_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_333_cast_fp16 = einsum(equation = aw_333_equation_0, values = (var_2548_cast_fp16_6, var_2530_cast_fp16_6))[name = tensor<string, []>("aw_333_cast_fp16")];
            tensor<string, []> aw_335_equation_0 = const()[name = tensor<string, []>("aw_335_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_335_cast_fp16 = einsum(equation = aw_335_equation_0, values = (var_2548_cast_fp16_7, var_2530_cast_fp16_7))[name = tensor<string, []>("aw_335_cast_fp16")];
            tensor<string, []> aw_337_equation_0 = const()[name = tensor<string, []>("aw_337_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_337_cast_fp16 = einsum(equation = aw_337_equation_0, values = (var_2548_cast_fp16_8, var_2530_cast_fp16_8))[name = tensor<string, []>("aw_337_cast_fp16")];
            tensor<string, []> aw_339_equation_0 = const()[name = tensor<string, []>("aw_339_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_339_cast_fp16 = einsum(equation = aw_339_equation_0, values = (var_2548_cast_fp16_9, var_2530_cast_fp16_9))[name = tensor<string, []>("aw_339_cast_fp16")];
            tensor<string, []> aw_341_equation_0 = const()[name = tensor<string, []>("aw_341_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_341_cast_fp16 = einsum(equation = aw_341_equation_0, values = (var_2548_cast_fp16_10, var_2530_cast_fp16_10))[name = tensor<string, []>("aw_341_cast_fp16")];
            tensor<string, []> aw_343_equation_0 = const()[name = tensor<string, []>("aw_343_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_343_cast_fp16 = einsum(equation = aw_343_equation_0, values = (var_2548_cast_fp16_11, var_2530_cast_fp16_11))[name = tensor<string, []>("aw_343_cast_fp16")];
            tensor<string, []> aw_345_equation_0 = const()[name = tensor<string, []>("aw_345_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_345_cast_fp16 = einsum(equation = aw_345_equation_0, values = (var_2548_cast_fp16_12, var_2530_cast_fp16_12))[name = tensor<string, []>("aw_345_cast_fp16")];
            tensor<string, []> aw_347_equation_0 = const()[name = tensor<string, []>("aw_347_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_347_cast_fp16 = einsum(equation = aw_347_equation_0, values = (var_2548_cast_fp16_13, var_2530_cast_fp16_13))[name = tensor<string, []>("aw_347_cast_fp16")];
            tensor<string, []> aw_349_equation_0 = const()[name = tensor<string, []>("aw_349_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_349_cast_fp16 = einsum(equation = aw_349_equation_0, values = (var_2548_cast_fp16_14, var_2530_cast_fp16_14))[name = tensor<string, []>("aw_349_cast_fp16")];
            tensor<string, []> aw_351_equation_0 = const()[name = tensor<string, []>("aw_351_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_351_cast_fp16 = einsum(equation = aw_351_equation_0, values = (var_2548_cast_fp16_15, var_2530_cast_fp16_15))[name = tensor<string, []>("aw_351_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2614_cast_fp16 = softmax(axis = var_2478, x = aw_321_cast_fp16)[name = tensor<string, []>("op_2614_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2615_cast_fp16 = softmax(axis = var_2478, x = aw_323_cast_fp16)[name = tensor<string, []>("op_2615_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2616_cast_fp16 = softmax(axis = var_2478, x = aw_325_cast_fp16)[name = tensor<string, []>("op_2616_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2617_cast_fp16 = softmax(axis = var_2478, x = aw_327_cast_fp16)[name = tensor<string, []>("op_2617_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2618_cast_fp16 = softmax(axis = var_2478, x = aw_329_cast_fp16)[name = tensor<string, []>("op_2618_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2619_cast_fp16 = softmax(axis = var_2478, x = aw_331_cast_fp16)[name = tensor<string, []>("op_2619_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2620_cast_fp16 = softmax(axis = var_2478, x = aw_333_cast_fp16)[name = tensor<string, []>("op_2620_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2621_cast_fp16 = softmax(axis = var_2478, x = aw_335_cast_fp16)[name = tensor<string, []>("op_2621_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2622_cast_fp16 = softmax(axis = var_2478, x = aw_337_cast_fp16)[name = tensor<string, []>("op_2622_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2623_cast_fp16 = softmax(axis = var_2478, x = aw_339_cast_fp16)[name = tensor<string, []>("op_2623_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2624_cast_fp16 = softmax(axis = var_2478, x = aw_341_cast_fp16)[name = tensor<string, []>("op_2624_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2625_cast_fp16 = softmax(axis = var_2478, x = aw_343_cast_fp16)[name = tensor<string, []>("op_2625_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2626_cast_fp16 = softmax(axis = var_2478, x = aw_345_cast_fp16)[name = tensor<string, []>("op_2626_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2627_cast_fp16 = softmax(axis = var_2478, x = aw_347_cast_fp16)[name = tensor<string, []>("op_2627_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2628_cast_fp16 = softmax(axis = var_2478, x = aw_349_cast_fp16)[name = tensor<string, []>("op_2628_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2629_cast_fp16 = softmax(axis = var_2478, x = aw_351_cast_fp16)[name = tensor<string, []>("op_2629_cast_fp16")];
            tensor<string, []> var_2631_equation_0 = const()[name = tensor<string, []>("op_2631_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2631_cast_fp16 = einsum(equation = var_2631_equation_0, values = (var_2565_cast_fp16_0, var_2614_cast_fp16))[name = tensor<string, []>("op_2631_cast_fp16")];
            tensor<string, []> var_2633_equation_0 = const()[name = tensor<string, []>("op_2633_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2633_cast_fp16 = einsum(equation = var_2633_equation_0, values = (var_2565_cast_fp16_1, var_2615_cast_fp16))[name = tensor<string, []>("op_2633_cast_fp16")];
            tensor<string, []> var_2635_equation_0 = const()[name = tensor<string, []>("op_2635_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2635_cast_fp16 = einsum(equation = var_2635_equation_0, values = (var_2565_cast_fp16_2, var_2616_cast_fp16))[name = tensor<string, []>("op_2635_cast_fp16")];
            tensor<string, []> var_2637_equation_0 = const()[name = tensor<string, []>("op_2637_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2637_cast_fp16 = einsum(equation = var_2637_equation_0, values = (var_2565_cast_fp16_3, var_2617_cast_fp16))[name = tensor<string, []>("op_2637_cast_fp16")];
            tensor<string, []> var_2639_equation_0 = const()[name = tensor<string, []>("op_2639_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2639_cast_fp16 = einsum(equation = var_2639_equation_0, values = (var_2565_cast_fp16_4, var_2618_cast_fp16))[name = tensor<string, []>("op_2639_cast_fp16")];
            tensor<string, []> var_2641_equation_0 = const()[name = tensor<string, []>("op_2641_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2641_cast_fp16 = einsum(equation = var_2641_equation_0, values = (var_2565_cast_fp16_5, var_2619_cast_fp16))[name = tensor<string, []>("op_2641_cast_fp16")];
            tensor<string, []> var_2643_equation_0 = const()[name = tensor<string, []>("op_2643_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2643_cast_fp16 = einsum(equation = var_2643_equation_0, values = (var_2565_cast_fp16_6, var_2620_cast_fp16))[name = tensor<string, []>("op_2643_cast_fp16")];
            tensor<string, []> var_2645_equation_0 = const()[name = tensor<string, []>("op_2645_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2645_cast_fp16 = einsum(equation = var_2645_equation_0, values = (var_2565_cast_fp16_7, var_2621_cast_fp16))[name = tensor<string, []>("op_2645_cast_fp16")];
            tensor<string, []> var_2647_equation_0 = const()[name = tensor<string, []>("op_2647_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2647_cast_fp16 = einsum(equation = var_2647_equation_0, values = (var_2565_cast_fp16_8, var_2622_cast_fp16))[name = tensor<string, []>("op_2647_cast_fp16")];
            tensor<string, []> var_2649_equation_0 = const()[name = tensor<string, []>("op_2649_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2649_cast_fp16 = einsum(equation = var_2649_equation_0, values = (var_2565_cast_fp16_9, var_2623_cast_fp16))[name = tensor<string, []>("op_2649_cast_fp16")];
            tensor<string, []> var_2651_equation_0 = const()[name = tensor<string, []>("op_2651_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2651_cast_fp16 = einsum(equation = var_2651_equation_0, values = (var_2565_cast_fp16_10, var_2624_cast_fp16))[name = tensor<string, []>("op_2651_cast_fp16")];
            tensor<string, []> var_2653_equation_0 = const()[name = tensor<string, []>("op_2653_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2653_cast_fp16 = einsum(equation = var_2653_equation_0, values = (var_2565_cast_fp16_11, var_2625_cast_fp16))[name = tensor<string, []>("op_2653_cast_fp16")];
            tensor<string, []> var_2655_equation_0 = const()[name = tensor<string, []>("op_2655_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2655_cast_fp16 = einsum(equation = var_2655_equation_0, values = (var_2565_cast_fp16_12, var_2626_cast_fp16))[name = tensor<string, []>("op_2655_cast_fp16")];
            tensor<string, []> var_2657_equation_0 = const()[name = tensor<string, []>("op_2657_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2657_cast_fp16 = einsum(equation = var_2657_equation_0, values = (var_2565_cast_fp16_13, var_2627_cast_fp16))[name = tensor<string, []>("op_2657_cast_fp16")];
            tensor<string, []> var_2659_equation_0 = const()[name = tensor<string, []>("op_2659_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2659_cast_fp16 = einsum(equation = var_2659_equation_0, values = (var_2565_cast_fp16_14, var_2628_cast_fp16))[name = tensor<string, []>("op_2659_cast_fp16")];
            tensor<string, []> var_2661_equation_0 = const()[name = tensor<string, []>("op_2661_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2661_cast_fp16 = einsum(equation = var_2661_equation_0, values = (var_2565_cast_fp16_15, var_2629_cast_fp16))[name = tensor<string, []>("op_2661_cast_fp16")];
            tensor<bool, []> input_105_interleave_0 = const()[name = tensor<string, []>("input_105_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_105_cast_fp16 = concat(axis = var_2478, interleave = input_105_interleave_0, values = (var_2631_cast_fp16, var_2633_cast_fp16, var_2635_cast_fp16, var_2637_cast_fp16, var_2639_cast_fp16, var_2641_cast_fp16, var_2643_cast_fp16, var_2645_cast_fp16, var_2647_cast_fp16, var_2649_cast_fp16, var_2651_cast_fp16, var_2653_cast_fp16, var_2655_cast_fp16, var_2657_cast_fp16, var_2659_cast_fp16, var_2661_cast_fp16))[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<string, []> var_2670_pad_type_0 = const()[name = tensor<string, []>("op_2670_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2670_strides_0 = const()[name = tensor<string, []>("op_2670_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2670_pad_0 = const()[name = tensor<string, []>("op_2670_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2670_dilations_0 = const()[name = tensor<string, []>("op_2670_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2670_groups_0 = const()[name = tensor<string, []>("op_2670_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_10_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(268073152)))];
            tensor<fp16, [1024]> blocks_10_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_10_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(270170368)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2670_cast_fp16 = conv(bias = blocks_10_attn_out_bias_to_fp16, dilations = var_2670_dilations_0, groups = var_2670_groups_0, pad = var_2670_pad_0, pad_type = var_2670_pad_type_0, strides = var_2670_strides_0, weight = blocks_10_attn_out_weight_to_fp16, x = input_105_cast_fp16)[name = tensor<string, []>("op_2670_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_43_cast_fp16 = add(x = inputs_41_cast_fp16, y = var_2670_cast_fp16)[name = tensor<string, []>("inputs_43_cast_fp16")];
            tensor<int32, [1]> input_107_axes_0 = const()[name = tensor<string, []>("input_107_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_107_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_107_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(270172480)))];
            tensor<fp16, [1024]> input_107_beta_0_to_fp16 = const()[name = tensor<string, []>("input_107_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(270174592)))];
            tensor<fp16, []> var_2680_to_fp16 = const()[name = tensor<string, []>("op_2680_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_107_cast_fp16 = layer_norm(axes = input_107_axes_0, beta = input_107_beta_0_to_fp16, epsilon = var_2680_to_fp16, gamma = input_107_gamma_0_to_fp16, x = inputs_43_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<string, []> input_109_pad_type_0 = const()[name = tensor<string, []>("input_109_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_109_strides_0 = const()[name = tensor<string, []>("input_109_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_109_pad_0 = const()[name = tensor<string, []>("input_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_109_dilations_0 = const()[name = tensor<string, []>("input_109_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_109_groups_0 = const()[name = tensor<string, []>("input_109_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_10_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(270176704)))];
            tensor<fp16, [4096]> blocks_10_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_10_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278565376)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_109_cast_fp16 = conv(bias = blocks_10_mlp_0_bias_to_fp16, dilations = input_109_dilations_0, groups = input_109_groups_0, pad = input_109_pad_0, pad_type = input_109_pad_type_0, strides = input_109_strides_0, weight = blocks_10_mlp_0_weight_to_fp16, x = input_107_cast_fp16)[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<string, []> input_111_mode_0 = const()[name = tensor<string, []>("input_111_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_111_cast_fp16 = gelu(mode = input_111_mode_0, x = input_109_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<string, []> var_2706_pad_type_0 = const()[name = tensor<string, []>("op_2706_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2706_strides_0 = const()[name = tensor<string, []>("op_2706_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2706_pad_0 = const()[name = tensor<string, []>("op_2706_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2706_dilations_0 = const()[name = tensor<string, []>("op_2706_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2706_groups_0 = const()[name = tensor<string, []>("op_2706_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_10_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_10_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(278573632)))];
            tensor<fp16, [1024]> blocks_10_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_10_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286962304)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2706_cast_fp16 = conv(bias = blocks_10_mlp_2_bias_to_fp16, dilations = var_2706_dilations_0, groups = var_2706_groups_0, pad = var_2706_pad_0, pad_type = var_2706_pad_type_0, strides = var_2706_strides_0, weight = blocks_10_mlp_2_weight_to_fp16, x = input_111_cast_fp16)[name = tensor<string, []>("op_2706_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_45_cast_fp16 = add(x = inputs_43_cast_fp16, y = var_2706_cast_fp16)[name = tensor<string, []>("inputs_45_cast_fp16")];
            tensor<int32, []> var_2715 = const()[name = tensor<string, []>("op_2715"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_113_axes_0 = const()[name = tensor<string, []>("input_113_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_113_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_113_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286964416)))];
            tensor<fp16, [1024]> input_113_beta_0_to_fp16 = const()[name = tensor<string, []>("input_113_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286966528)))];
            tensor<fp16, []> var_2731_to_fp16 = const()[name = tensor<string, []>("op_2731_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_113_cast_fp16 = layer_norm(axes = input_113_axes_0, beta = input_113_beta_0_to_fp16, epsilon = var_2731_to_fp16, gamma = input_113_gamma_0_to_fp16, x = inputs_45_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<string, []> q_23_pad_type_0 = const()[name = tensor<string, []>("q_23_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_23_strides_0 = const()[name = tensor<string, []>("q_23_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_23_pad_0 = const()[name = tensor<string, []>("q_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_23_dilations_0 = const()[name = tensor<string, []>("q_23_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_23_groups_0 = const()[name = tensor<string, []>("q_23_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_2766_weight_0_to_fp16 = const()[name = tensor<string, []>("op_2766_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286968640)))];
            tensor<fp16, [1024]> var_2766_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2766_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289065856)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2766_cast_fp16 = conv(bias = var_2766_bias_0_to_fp16, dilations = q_23_dilations_0, groups = q_23_groups_0, pad = q_23_pad_0, pad_type = q_23_pad_type_0, strides = q_23_strides_0, weight = var_2766_weight_0_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("op_2766_cast_fp16")];
            tensor<string, []> k_23_pad_type_0 = const()[name = tensor<string, []>("k_23_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_23_strides_0 = const()[name = tensor<string, []>("k_23_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_23_pad_0 = const()[name = tensor<string, []>("k_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_23_dilations_0 = const()[name = tensor<string, []>("k_23_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_23_groups_0 = const()[name = tensor<string, []>("k_23_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_11_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289067968)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_23_cast_fp16 = conv(dilations = k_23_dilations_0, groups = k_23_groups_0, pad = k_23_pad_0, pad_type = k_23_pad_type_0, strides = k_23_strides_0, weight = blocks_11_attn_key_weight_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("k_23_cast_fp16")];
            tensor<string, []> var_2764_pad_type_0 = const()[name = tensor<string, []>("op_2764_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2764_strides_0 = const()[name = tensor<string, []>("op_2764_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2764_pad_0 = const()[name = tensor<string, []>("op_2764_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2764_dilations_0 = const()[name = tensor<string, []>("op_2764_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2764_groups_0 = const()[name = tensor<string, []>("op_2764_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_11_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(291165184)))];
            tensor<fp16, [1024]> blocks_11_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293262400)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2764_cast_fp16 = conv(bias = blocks_11_attn_value_bias_to_fp16, dilations = var_2764_dilations_0, groups = var_2764_groups_0, pad = var_2764_pad_0, pad_type = var_2764_pad_type_0, strides = var_2764_strides_0, weight = blocks_11_attn_value_weight_to_fp16, x = input_113_cast_fp16)[name = tensor<string, []>("op_2764_cast_fp16")];
            tensor<int32, [16]> tile_33 = const()[name = tensor<string, []>("tile_33"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2767_axis_0 = const()[name = tensor<string, []>("op_2767_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2767_cast_fp16_15 = split(axis = var_2767_axis_0, split_sizes = tile_33, x = var_2766_cast_fp16)[name = tensor<string, []>("op_2767_cast_fp16")];
            tensor<int32, [4]> var_2784_perm_0 = const()[name = tensor<string, []>("op_2784_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_34 = const()[name = tensor<string, []>("tile_34"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2785_axis_0 = const()[name = tensor<string, []>("op_2785_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_2784_cast_fp16 = transpose(perm = var_2784_perm_0, x = k_23_cast_fp16)[name = tensor<string, []>("transpose_13")];
            tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_2785_cast_fp16_15 = split(axis = var_2785_axis_0, split_sizes = tile_34, x = var_2784_cast_fp16)[name = tensor<string, []>("op_2785_cast_fp16")];
            tensor<int32, [16]> tile_35 = const()[name = tensor<string, []>("tile_35"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2802_axis_0 = const()[name = tensor<string, []>("op_2802_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_2802_cast_fp16_15 = split(axis = var_2802_axis_0, split_sizes = tile_35, x = var_2764_cast_fp16)[name = tensor<string, []>("op_2802_cast_fp16")];
            tensor<string, []> aw_353_equation_0 = const()[name = tensor<string, []>("aw_353_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_353_cast_fp16 = einsum(equation = aw_353_equation_0, values = (var_2785_cast_fp16_0, var_2767_cast_fp16_0))[name = tensor<string, []>("aw_353_cast_fp16")];
            tensor<string, []> aw_355_equation_0 = const()[name = tensor<string, []>("aw_355_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_355_cast_fp16 = einsum(equation = aw_355_equation_0, values = (var_2785_cast_fp16_1, var_2767_cast_fp16_1))[name = tensor<string, []>("aw_355_cast_fp16")];
            tensor<string, []> aw_357_equation_0 = const()[name = tensor<string, []>("aw_357_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_357_cast_fp16 = einsum(equation = aw_357_equation_0, values = (var_2785_cast_fp16_2, var_2767_cast_fp16_2))[name = tensor<string, []>("aw_357_cast_fp16")];
            tensor<string, []> aw_359_equation_0 = const()[name = tensor<string, []>("aw_359_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_359_cast_fp16 = einsum(equation = aw_359_equation_0, values = (var_2785_cast_fp16_3, var_2767_cast_fp16_3))[name = tensor<string, []>("aw_359_cast_fp16")];
            tensor<string, []> aw_361_equation_0 = const()[name = tensor<string, []>("aw_361_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_361_cast_fp16 = einsum(equation = aw_361_equation_0, values = (var_2785_cast_fp16_4, var_2767_cast_fp16_4))[name = tensor<string, []>("aw_361_cast_fp16")];
            tensor<string, []> aw_363_equation_0 = const()[name = tensor<string, []>("aw_363_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_363_cast_fp16 = einsum(equation = aw_363_equation_0, values = (var_2785_cast_fp16_5, var_2767_cast_fp16_5))[name = tensor<string, []>("aw_363_cast_fp16")];
            tensor<string, []> aw_365_equation_0 = const()[name = tensor<string, []>("aw_365_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_365_cast_fp16 = einsum(equation = aw_365_equation_0, values = (var_2785_cast_fp16_6, var_2767_cast_fp16_6))[name = tensor<string, []>("aw_365_cast_fp16")];
            tensor<string, []> aw_367_equation_0 = const()[name = tensor<string, []>("aw_367_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_367_cast_fp16 = einsum(equation = aw_367_equation_0, values = (var_2785_cast_fp16_7, var_2767_cast_fp16_7))[name = tensor<string, []>("aw_367_cast_fp16")];
            tensor<string, []> aw_369_equation_0 = const()[name = tensor<string, []>("aw_369_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_369_cast_fp16 = einsum(equation = aw_369_equation_0, values = (var_2785_cast_fp16_8, var_2767_cast_fp16_8))[name = tensor<string, []>("aw_369_cast_fp16")];
            tensor<string, []> aw_371_equation_0 = const()[name = tensor<string, []>("aw_371_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_371_cast_fp16 = einsum(equation = aw_371_equation_0, values = (var_2785_cast_fp16_9, var_2767_cast_fp16_9))[name = tensor<string, []>("aw_371_cast_fp16")];
            tensor<string, []> aw_373_equation_0 = const()[name = tensor<string, []>("aw_373_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_373_cast_fp16 = einsum(equation = aw_373_equation_0, values = (var_2785_cast_fp16_10, var_2767_cast_fp16_10))[name = tensor<string, []>("aw_373_cast_fp16")];
            tensor<string, []> aw_375_equation_0 = const()[name = tensor<string, []>("aw_375_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_375_cast_fp16 = einsum(equation = aw_375_equation_0, values = (var_2785_cast_fp16_11, var_2767_cast_fp16_11))[name = tensor<string, []>("aw_375_cast_fp16")];
            tensor<string, []> aw_377_equation_0 = const()[name = tensor<string, []>("aw_377_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_377_cast_fp16 = einsum(equation = aw_377_equation_0, values = (var_2785_cast_fp16_12, var_2767_cast_fp16_12))[name = tensor<string, []>("aw_377_cast_fp16")];
            tensor<string, []> aw_379_equation_0 = const()[name = tensor<string, []>("aw_379_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_379_cast_fp16 = einsum(equation = aw_379_equation_0, values = (var_2785_cast_fp16_13, var_2767_cast_fp16_13))[name = tensor<string, []>("aw_379_cast_fp16")];
            tensor<string, []> aw_381_equation_0 = const()[name = tensor<string, []>("aw_381_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_381_cast_fp16 = einsum(equation = aw_381_equation_0, values = (var_2785_cast_fp16_14, var_2767_cast_fp16_14))[name = tensor<string, []>("aw_381_cast_fp16")];
            tensor<string, []> aw_383_equation_0 = const()[name = tensor<string, []>("aw_383_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_383_cast_fp16 = einsum(equation = aw_383_equation_0, values = (var_2785_cast_fp16_15, var_2767_cast_fp16_15))[name = tensor<string, []>("aw_383_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2851_cast_fp16 = softmax(axis = var_2715, x = aw_353_cast_fp16)[name = tensor<string, []>("op_2851_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2852_cast_fp16 = softmax(axis = var_2715, x = aw_355_cast_fp16)[name = tensor<string, []>("op_2852_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2853_cast_fp16 = softmax(axis = var_2715, x = aw_357_cast_fp16)[name = tensor<string, []>("op_2853_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2854_cast_fp16 = softmax(axis = var_2715, x = aw_359_cast_fp16)[name = tensor<string, []>("op_2854_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2855_cast_fp16 = softmax(axis = var_2715, x = aw_361_cast_fp16)[name = tensor<string, []>("op_2855_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2856_cast_fp16 = softmax(axis = var_2715, x = aw_363_cast_fp16)[name = tensor<string, []>("op_2856_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2857_cast_fp16 = softmax(axis = var_2715, x = aw_365_cast_fp16)[name = tensor<string, []>("op_2857_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2858_cast_fp16 = softmax(axis = var_2715, x = aw_367_cast_fp16)[name = tensor<string, []>("op_2858_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2859_cast_fp16 = softmax(axis = var_2715, x = aw_369_cast_fp16)[name = tensor<string, []>("op_2859_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2860_cast_fp16 = softmax(axis = var_2715, x = aw_371_cast_fp16)[name = tensor<string, []>("op_2860_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2861_cast_fp16 = softmax(axis = var_2715, x = aw_373_cast_fp16)[name = tensor<string, []>("op_2861_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2862_cast_fp16 = softmax(axis = var_2715, x = aw_375_cast_fp16)[name = tensor<string, []>("op_2862_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2863_cast_fp16 = softmax(axis = var_2715, x = aw_377_cast_fp16)[name = tensor<string, []>("op_2863_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2864_cast_fp16 = softmax(axis = var_2715, x = aw_379_cast_fp16)[name = tensor<string, []>("op_2864_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2865_cast_fp16 = softmax(axis = var_2715, x = aw_381_cast_fp16)[name = tensor<string, []>("op_2865_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_2866_cast_fp16 = softmax(axis = var_2715, x = aw_383_cast_fp16)[name = tensor<string, []>("op_2866_cast_fp16")];
            tensor<string, []> var_2868_equation_0 = const()[name = tensor<string, []>("op_2868_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2868_cast_fp16 = einsum(equation = var_2868_equation_0, values = (var_2802_cast_fp16_0, var_2851_cast_fp16))[name = tensor<string, []>("op_2868_cast_fp16")];
            tensor<string, []> var_2870_equation_0 = const()[name = tensor<string, []>("op_2870_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2870_cast_fp16 = einsum(equation = var_2870_equation_0, values = (var_2802_cast_fp16_1, var_2852_cast_fp16))[name = tensor<string, []>("op_2870_cast_fp16")];
            tensor<string, []> var_2872_equation_0 = const()[name = tensor<string, []>("op_2872_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2872_cast_fp16 = einsum(equation = var_2872_equation_0, values = (var_2802_cast_fp16_2, var_2853_cast_fp16))[name = tensor<string, []>("op_2872_cast_fp16")];
            tensor<string, []> var_2874_equation_0 = const()[name = tensor<string, []>("op_2874_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2874_cast_fp16 = einsum(equation = var_2874_equation_0, values = (var_2802_cast_fp16_3, var_2854_cast_fp16))[name = tensor<string, []>("op_2874_cast_fp16")];
            tensor<string, []> var_2876_equation_0 = const()[name = tensor<string, []>("op_2876_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2876_cast_fp16 = einsum(equation = var_2876_equation_0, values = (var_2802_cast_fp16_4, var_2855_cast_fp16))[name = tensor<string, []>("op_2876_cast_fp16")];
            tensor<string, []> var_2878_equation_0 = const()[name = tensor<string, []>("op_2878_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2878_cast_fp16 = einsum(equation = var_2878_equation_0, values = (var_2802_cast_fp16_5, var_2856_cast_fp16))[name = tensor<string, []>("op_2878_cast_fp16")];
            tensor<string, []> var_2880_equation_0 = const()[name = tensor<string, []>("op_2880_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2880_cast_fp16 = einsum(equation = var_2880_equation_0, values = (var_2802_cast_fp16_6, var_2857_cast_fp16))[name = tensor<string, []>("op_2880_cast_fp16")];
            tensor<string, []> var_2882_equation_0 = const()[name = tensor<string, []>("op_2882_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2882_cast_fp16 = einsum(equation = var_2882_equation_0, values = (var_2802_cast_fp16_7, var_2858_cast_fp16))[name = tensor<string, []>("op_2882_cast_fp16")];
            tensor<string, []> var_2884_equation_0 = const()[name = tensor<string, []>("op_2884_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2884_cast_fp16 = einsum(equation = var_2884_equation_0, values = (var_2802_cast_fp16_8, var_2859_cast_fp16))[name = tensor<string, []>("op_2884_cast_fp16")];
            tensor<string, []> var_2886_equation_0 = const()[name = tensor<string, []>("op_2886_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2886_cast_fp16 = einsum(equation = var_2886_equation_0, values = (var_2802_cast_fp16_9, var_2860_cast_fp16))[name = tensor<string, []>("op_2886_cast_fp16")];
            tensor<string, []> var_2888_equation_0 = const()[name = tensor<string, []>("op_2888_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2888_cast_fp16 = einsum(equation = var_2888_equation_0, values = (var_2802_cast_fp16_10, var_2861_cast_fp16))[name = tensor<string, []>("op_2888_cast_fp16")];
            tensor<string, []> var_2890_equation_0 = const()[name = tensor<string, []>("op_2890_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2890_cast_fp16 = einsum(equation = var_2890_equation_0, values = (var_2802_cast_fp16_11, var_2862_cast_fp16))[name = tensor<string, []>("op_2890_cast_fp16")];
            tensor<string, []> var_2892_equation_0 = const()[name = tensor<string, []>("op_2892_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2892_cast_fp16 = einsum(equation = var_2892_equation_0, values = (var_2802_cast_fp16_12, var_2863_cast_fp16))[name = tensor<string, []>("op_2892_cast_fp16")];
            tensor<string, []> var_2894_equation_0 = const()[name = tensor<string, []>("op_2894_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2894_cast_fp16 = einsum(equation = var_2894_equation_0, values = (var_2802_cast_fp16_13, var_2864_cast_fp16))[name = tensor<string, []>("op_2894_cast_fp16")];
            tensor<string, []> var_2896_equation_0 = const()[name = tensor<string, []>("op_2896_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2896_cast_fp16 = einsum(equation = var_2896_equation_0, values = (var_2802_cast_fp16_14, var_2865_cast_fp16))[name = tensor<string, []>("op_2896_cast_fp16")];
            tensor<string, []> var_2898_equation_0 = const()[name = tensor<string, []>("op_2898_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_2898_cast_fp16 = einsum(equation = var_2898_equation_0, values = (var_2802_cast_fp16_15, var_2866_cast_fp16))[name = tensor<string, []>("op_2898_cast_fp16")];
            tensor<bool, []> input_115_interleave_0 = const()[name = tensor<string, []>("input_115_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_115_cast_fp16 = concat(axis = var_2715, interleave = input_115_interleave_0, values = (var_2868_cast_fp16, var_2870_cast_fp16, var_2872_cast_fp16, var_2874_cast_fp16, var_2876_cast_fp16, var_2878_cast_fp16, var_2880_cast_fp16, var_2882_cast_fp16, var_2884_cast_fp16, var_2886_cast_fp16, var_2888_cast_fp16, var_2890_cast_fp16, var_2892_cast_fp16, var_2894_cast_fp16, var_2896_cast_fp16, var_2898_cast_fp16))[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<string, []> var_2907_pad_type_0 = const()[name = tensor<string, []>("op_2907_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2907_strides_0 = const()[name = tensor<string, []>("op_2907_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2907_pad_0 = const()[name = tensor<string, []>("op_2907_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2907_dilations_0 = const()[name = tensor<string, []>("op_2907_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2907_groups_0 = const()[name = tensor<string, []>("op_2907_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_11_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(293264512)))];
            tensor<fp16, [1024]> blocks_11_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_11_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(295361728)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2907_cast_fp16 = conv(bias = blocks_11_attn_out_bias_to_fp16, dilations = var_2907_dilations_0, groups = var_2907_groups_0, pad = var_2907_pad_0, pad_type = var_2907_pad_type_0, strides = var_2907_strides_0, weight = blocks_11_attn_out_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("op_2907_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_47_cast_fp16 = add(x = inputs_45_cast_fp16, y = var_2907_cast_fp16)[name = tensor<string, []>("inputs_47_cast_fp16")];
            tensor<int32, [1]> input_117_axes_0 = const()[name = tensor<string, []>("input_117_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_117_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_117_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(295363840)))];
            tensor<fp16, [1024]> input_117_beta_0_to_fp16 = const()[name = tensor<string, []>("input_117_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(295365952)))];
            tensor<fp16, []> var_2917_to_fp16 = const()[name = tensor<string, []>("op_2917_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_117_cast_fp16 = layer_norm(axes = input_117_axes_0, beta = input_117_beta_0_to_fp16, epsilon = var_2917_to_fp16, gamma = input_117_gamma_0_to_fp16, x = inputs_47_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<string, []> input_119_pad_type_0 = const()[name = tensor<string, []>("input_119_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_119_strides_0 = const()[name = tensor<string, []>("input_119_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_119_pad_0 = const()[name = tensor<string, []>("input_119_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_119_dilations_0 = const()[name = tensor<string, []>("input_119_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_119_groups_0 = const()[name = tensor<string, []>("input_119_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_11_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(295368064)))];
            tensor<fp16, [4096]> blocks_11_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_11_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303756736)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_119_cast_fp16 = conv(bias = blocks_11_mlp_0_bias_to_fp16, dilations = input_119_dilations_0, groups = input_119_groups_0, pad = input_119_pad_0, pad_type = input_119_pad_type_0, strides = input_119_strides_0, weight = blocks_11_mlp_0_weight_to_fp16, x = input_117_cast_fp16)[name = tensor<string, []>("input_119_cast_fp16")];
            tensor<string, []> input_121_mode_0 = const()[name = tensor<string, []>("input_121_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_121_cast_fp16 = gelu(mode = input_121_mode_0, x = input_119_cast_fp16)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<string, []> var_2943_pad_type_0 = const()[name = tensor<string, []>("op_2943_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_2943_strides_0 = const()[name = tensor<string, []>("op_2943_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_2943_pad_0 = const()[name = tensor<string, []>("op_2943_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_2943_dilations_0 = const()[name = tensor<string, []>("op_2943_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_2943_groups_0 = const()[name = tensor<string, []>("op_2943_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_11_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_11_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303764992)))];
            tensor<fp16, [1024]> blocks_11_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_11_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(312153664)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_2943_cast_fp16 = conv(bias = blocks_11_mlp_2_bias_to_fp16, dilations = var_2943_dilations_0, groups = var_2943_groups_0, pad = var_2943_pad_0, pad_type = var_2943_pad_type_0, strides = var_2943_strides_0, weight = blocks_11_mlp_2_weight_to_fp16, x = input_121_cast_fp16)[name = tensor<string, []>("op_2943_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_49_cast_fp16 = add(x = inputs_47_cast_fp16, y = var_2943_cast_fp16)[name = tensor<string, []>("inputs_49_cast_fp16")];
            tensor<int32, []> var_2952 = const()[name = tensor<string, []>("op_2952"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_123_axes_0 = const()[name = tensor<string, []>("input_123_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_123_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_123_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(312155776)))];
            tensor<fp16, [1024]> input_123_beta_0_to_fp16 = const()[name = tensor<string, []>("input_123_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(312157888)))];
            tensor<fp16, []> var_2968_to_fp16 = const()[name = tensor<string, []>("op_2968_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_123_cast_fp16 = layer_norm(axes = input_123_axes_0, beta = input_123_beta_0_to_fp16, epsilon = var_2968_to_fp16, gamma = input_123_gamma_0_to_fp16, x = inputs_49_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<string, []> q_25_pad_type_0 = const()[name = tensor<string, []>("q_25_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_25_strides_0 = const()[name = tensor<string, []>("q_25_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_25_pad_0 = const()[name = tensor<string, []>("q_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_25_dilations_0 = const()[name = tensor<string, []>("q_25_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_25_groups_0 = const()[name = tensor<string, []>("q_25_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_3003_weight_0_to_fp16 = const()[name = tensor<string, []>("op_3003_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(312160000)))];
            tensor<fp16, [1024]> var_3003_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3003_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(314257216)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3003_cast_fp16 = conv(bias = var_3003_bias_0_to_fp16, dilations = q_25_dilations_0, groups = q_25_groups_0, pad = q_25_pad_0, pad_type = q_25_pad_type_0, strides = q_25_strides_0, weight = var_3003_weight_0_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("op_3003_cast_fp16")];
            tensor<string, []> k_25_pad_type_0 = const()[name = tensor<string, []>("k_25_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_25_strides_0 = const()[name = tensor<string, []>("k_25_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_25_pad_0 = const()[name = tensor<string, []>("k_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_25_dilations_0 = const()[name = tensor<string, []>("k_25_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_25_groups_0 = const()[name = tensor<string, []>("k_25_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_12_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(314259328)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_25_cast_fp16 = conv(dilations = k_25_dilations_0, groups = k_25_groups_0, pad = k_25_pad_0, pad_type = k_25_pad_type_0, strides = k_25_strides_0, weight = blocks_12_attn_key_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("k_25_cast_fp16")];
            tensor<string, []> var_3001_pad_type_0 = const()[name = tensor<string, []>("op_3001_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3001_strides_0 = const()[name = tensor<string, []>("op_3001_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3001_pad_0 = const()[name = tensor<string, []>("op_3001_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3001_dilations_0 = const()[name = tensor<string, []>("op_3001_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3001_groups_0 = const()[name = tensor<string, []>("op_3001_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_12_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(316356544)))];
            tensor<fp16, [1024]> blocks_12_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(318453760)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3001_cast_fp16 = conv(bias = blocks_12_attn_value_bias_to_fp16, dilations = var_3001_dilations_0, groups = var_3001_groups_0, pad = var_3001_pad_0, pad_type = var_3001_pad_type_0, strides = var_3001_strides_0, weight = blocks_12_attn_value_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("op_3001_cast_fp16")];
            tensor<int32, [16]> tile_36 = const()[name = tensor<string, []>("tile_36"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3004_axis_0 = const()[name = tensor<string, []>("op_3004_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3004_cast_fp16_15 = split(axis = var_3004_axis_0, split_sizes = tile_36, x = var_3003_cast_fp16)[name = tensor<string, []>("op_3004_cast_fp16")];
            tensor<int32, [4]> var_3021_perm_0 = const()[name = tensor<string, []>("op_3021_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_37 = const()[name = tensor<string, []>("tile_37"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3022_axis_0 = const()[name = tensor<string, []>("op_3022_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_3021_cast_fp16 = transpose(perm = var_3021_perm_0, x = k_25_cast_fp16)[name = tensor<string, []>("transpose_12")];
            tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_3022_cast_fp16_15 = split(axis = var_3022_axis_0, split_sizes = tile_37, x = var_3021_cast_fp16)[name = tensor<string, []>("op_3022_cast_fp16")];
            tensor<int32, [16]> tile_38 = const()[name = tensor<string, []>("tile_38"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3039_axis_0 = const()[name = tensor<string, []>("op_3039_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3039_cast_fp16_15 = split(axis = var_3039_axis_0, split_sizes = tile_38, x = var_3001_cast_fp16)[name = tensor<string, []>("op_3039_cast_fp16")];
            tensor<string, []> aw_385_equation_0 = const()[name = tensor<string, []>("aw_385_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_385_cast_fp16 = einsum(equation = aw_385_equation_0, values = (var_3022_cast_fp16_0, var_3004_cast_fp16_0))[name = tensor<string, []>("aw_385_cast_fp16")];
            tensor<string, []> aw_387_equation_0 = const()[name = tensor<string, []>("aw_387_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_387_cast_fp16 = einsum(equation = aw_387_equation_0, values = (var_3022_cast_fp16_1, var_3004_cast_fp16_1))[name = tensor<string, []>("aw_387_cast_fp16")];
            tensor<string, []> aw_389_equation_0 = const()[name = tensor<string, []>("aw_389_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_389_cast_fp16 = einsum(equation = aw_389_equation_0, values = (var_3022_cast_fp16_2, var_3004_cast_fp16_2))[name = tensor<string, []>("aw_389_cast_fp16")];
            tensor<string, []> aw_391_equation_0 = const()[name = tensor<string, []>("aw_391_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_391_cast_fp16 = einsum(equation = aw_391_equation_0, values = (var_3022_cast_fp16_3, var_3004_cast_fp16_3))[name = tensor<string, []>("aw_391_cast_fp16")];
            tensor<string, []> aw_393_equation_0 = const()[name = tensor<string, []>("aw_393_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_393_cast_fp16 = einsum(equation = aw_393_equation_0, values = (var_3022_cast_fp16_4, var_3004_cast_fp16_4))[name = tensor<string, []>("aw_393_cast_fp16")];
            tensor<string, []> aw_395_equation_0 = const()[name = tensor<string, []>("aw_395_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_395_cast_fp16 = einsum(equation = aw_395_equation_0, values = (var_3022_cast_fp16_5, var_3004_cast_fp16_5))[name = tensor<string, []>("aw_395_cast_fp16")];
            tensor<string, []> aw_397_equation_0 = const()[name = tensor<string, []>("aw_397_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_397_cast_fp16 = einsum(equation = aw_397_equation_0, values = (var_3022_cast_fp16_6, var_3004_cast_fp16_6))[name = tensor<string, []>("aw_397_cast_fp16")];
            tensor<string, []> aw_399_equation_0 = const()[name = tensor<string, []>("aw_399_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_399_cast_fp16 = einsum(equation = aw_399_equation_0, values = (var_3022_cast_fp16_7, var_3004_cast_fp16_7))[name = tensor<string, []>("aw_399_cast_fp16")];
            tensor<string, []> aw_401_equation_0 = const()[name = tensor<string, []>("aw_401_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_401_cast_fp16 = einsum(equation = aw_401_equation_0, values = (var_3022_cast_fp16_8, var_3004_cast_fp16_8))[name = tensor<string, []>("aw_401_cast_fp16")];
            tensor<string, []> aw_403_equation_0 = const()[name = tensor<string, []>("aw_403_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_403_cast_fp16 = einsum(equation = aw_403_equation_0, values = (var_3022_cast_fp16_9, var_3004_cast_fp16_9))[name = tensor<string, []>("aw_403_cast_fp16")];
            tensor<string, []> aw_405_equation_0 = const()[name = tensor<string, []>("aw_405_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_405_cast_fp16 = einsum(equation = aw_405_equation_0, values = (var_3022_cast_fp16_10, var_3004_cast_fp16_10))[name = tensor<string, []>("aw_405_cast_fp16")];
            tensor<string, []> aw_407_equation_0 = const()[name = tensor<string, []>("aw_407_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_407_cast_fp16 = einsum(equation = aw_407_equation_0, values = (var_3022_cast_fp16_11, var_3004_cast_fp16_11))[name = tensor<string, []>("aw_407_cast_fp16")];
            tensor<string, []> aw_409_equation_0 = const()[name = tensor<string, []>("aw_409_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_409_cast_fp16 = einsum(equation = aw_409_equation_0, values = (var_3022_cast_fp16_12, var_3004_cast_fp16_12))[name = tensor<string, []>("aw_409_cast_fp16")];
            tensor<string, []> aw_411_equation_0 = const()[name = tensor<string, []>("aw_411_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_411_cast_fp16 = einsum(equation = aw_411_equation_0, values = (var_3022_cast_fp16_13, var_3004_cast_fp16_13))[name = tensor<string, []>("aw_411_cast_fp16")];
            tensor<string, []> aw_413_equation_0 = const()[name = tensor<string, []>("aw_413_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_413_cast_fp16 = einsum(equation = aw_413_equation_0, values = (var_3022_cast_fp16_14, var_3004_cast_fp16_14))[name = tensor<string, []>("aw_413_cast_fp16")];
            tensor<string, []> aw_415_equation_0 = const()[name = tensor<string, []>("aw_415_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_415_cast_fp16 = einsum(equation = aw_415_equation_0, values = (var_3022_cast_fp16_15, var_3004_cast_fp16_15))[name = tensor<string, []>("aw_415_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3088_cast_fp16 = softmax(axis = var_2952, x = aw_385_cast_fp16)[name = tensor<string, []>("op_3088_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3089_cast_fp16 = softmax(axis = var_2952, x = aw_387_cast_fp16)[name = tensor<string, []>("op_3089_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3090_cast_fp16 = softmax(axis = var_2952, x = aw_389_cast_fp16)[name = tensor<string, []>("op_3090_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3091_cast_fp16 = softmax(axis = var_2952, x = aw_391_cast_fp16)[name = tensor<string, []>("op_3091_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3092_cast_fp16 = softmax(axis = var_2952, x = aw_393_cast_fp16)[name = tensor<string, []>("op_3092_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3093_cast_fp16 = softmax(axis = var_2952, x = aw_395_cast_fp16)[name = tensor<string, []>("op_3093_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3094_cast_fp16 = softmax(axis = var_2952, x = aw_397_cast_fp16)[name = tensor<string, []>("op_3094_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3095_cast_fp16 = softmax(axis = var_2952, x = aw_399_cast_fp16)[name = tensor<string, []>("op_3095_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3096_cast_fp16 = softmax(axis = var_2952, x = aw_401_cast_fp16)[name = tensor<string, []>("op_3096_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3097_cast_fp16 = softmax(axis = var_2952, x = aw_403_cast_fp16)[name = tensor<string, []>("op_3097_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3098_cast_fp16 = softmax(axis = var_2952, x = aw_405_cast_fp16)[name = tensor<string, []>("op_3098_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3099_cast_fp16 = softmax(axis = var_2952, x = aw_407_cast_fp16)[name = tensor<string, []>("op_3099_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3100_cast_fp16 = softmax(axis = var_2952, x = aw_409_cast_fp16)[name = tensor<string, []>("op_3100_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3101_cast_fp16 = softmax(axis = var_2952, x = aw_411_cast_fp16)[name = tensor<string, []>("op_3101_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3102_cast_fp16 = softmax(axis = var_2952, x = aw_413_cast_fp16)[name = tensor<string, []>("op_3102_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3103_cast_fp16 = softmax(axis = var_2952, x = aw_415_cast_fp16)[name = tensor<string, []>("op_3103_cast_fp16")];
            tensor<string, []> var_3105_equation_0 = const()[name = tensor<string, []>("op_3105_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3105_cast_fp16 = einsum(equation = var_3105_equation_0, values = (var_3039_cast_fp16_0, var_3088_cast_fp16))[name = tensor<string, []>("op_3105_cast_fp16")];
            tensor<string, []> var_3107_equation_0 = const()[name = tensor<string, []>("op_3107_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3107_cast_fp16 = einsum(equation = var_3107_equation_0, values = (var_3039_cast_fp16_1, var_3089_cast_fp16))[name = tensor<string, []>("op_3107_cast_fp16")];
            tensor<string, []> var_3109_equation_0 = const()[name = tensor<string, []>("op_3109_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3109_cast_fp16 = einsum(equation = var_3109_equation_0, values = (var_3039_cast_fp16_2, var_3090_cast_fp16))[name = tensor<string, []>("op_3109_cast_fp16")];
            tensor<string, []> var_3111_equation_0 = const()[name = tensor<string, []>("op_3111_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3111_cast_fp16 = einsum(equation = var_3111_equation_0, values = (var_3039_cast_fp16_3, var_3091_cast_fp16))[name = tensor<string, []>("op_3111_cast_fp16")];
            tensor<string, []> var_3113_equation_0 = const()[name = tensor<string, []>("op_3113_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3113_cast_fp16 = einsum(equation = var_3113_equation_0, values = (var_3039_cast_fp16_4, var_3092_cast_fp16))[name = tensor<string, []>("op_3113_cast_fp16")];
            tensor<string, []> var_3115_equation_0 = const()[name = tensor<string, []>("op_3115_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3115_cast_fp16 = einsum(equation = var_3115_equation_0, values = (var_3039_cast_fp16_5, var_3093_cast_fp16))[name = tensor<string, []>("op_3115_cast_fp16")];
            tensor<string, []> var_3117_equation_0 = const()[name = tensor<string, []>("op_3117_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3117_cast_fp16 = einsum(equation = var_3117_equation_0, values = (var_3039_cast_fp16_6, var_3094_cast_fp16))[name = tensor<string, []>("op_3117_cast_fp16")];
            tensor<string, []> var_3119_equation_0 = const()[name = tensor<string, []>("op_3119_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3119_cast_fp16 = einsum(equation = var_3119_equation_0, values = (var_3039_cast_fp16_7, var_3095_cast_fp16))[name = tensor<string, []>("op_3119_cast_fp16")];
            tensor<string, []> var_3121_equation_0 = const()[name = tensor<string, []>("op_3121_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3121_cast_fp16 = einsum(equation = var_3121_equation_0, values = (var_3039_cast_fp16_8, var_3096_cast_fp16))[name = tensor<string, []>("op_3121_cast_fp16")];
            tensor<string, []> var_3123_equation_0 = const()[name = tensor<string, []>("op_3123_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3123_cast_fp16 = einsum(equation = var_3123_equation_0, values = (var_3039_cast_fp16_9, var_3097_cast_fp16))[name = tensor<string, []>("op_3123_cast_fp16")];
            tensor<string, []> var_3125_equation_0 = const()[name = tensor<string, []>("op_3125_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3125_cast_fp16 = einsum(equation = var_3125_equation_0, values = (var_3039_cast_fp16_10, var_3098_cast_fp16))[name = tensor<string, []>("op_3125_cast_fp16")];
            tensor<string, []> var_3127_equation_0 = const()[name = tensor<string, []>("op_3127_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3127_cast_fp16 = einsum(equation = var_3127_equation_0, values = (var_3039_cast_fp16_11, var_3099_cast_fp16))[name = tensor<string, []>("op_3127_cast_fp16")];
            tensor<string, []> var_3129_equation_0 = const()[name = tensor<string, []>("op_3129_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3129_cast_fp16 = einsum(equation = var_3129_equation_0, values = (var_3039_cast_fp16_12, var_3100_cast_fp16))[name = tensor<string, []>("op_3129_cast_fp16")];
            tensor<string, []> var_3131_equation_0 = const()[name = tensor<string, []>("op_3131_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3131_cast_fp16 = einsum(equation = var_3131_equation_0, values = (var_3039_cast_fp16_13, var_3101_cast_fp16))[name = tensor<string, []>("op_3131_cast_fp16")];
            tensor<string, []> var_3133_equation_0 = const()[name = tensor<string, []>("op_3133_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3133_cast_fp16 = einsum(equation = var_3133_equation_0, values = (var_3039_cast_fp16_14, var_3102_cast_fp16))[name = tensor<string, []>("op_3133_cast_fp16")];
            tensor<string, []> var_3135_equation_0 = const()[name = tensor<string, []>("op_3135_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3135_cast_fp16 = einsum(equation = var_3135_equation_0, values = (var_3039_cast_fp16_15, var_3103_cast_fp16))[name = tensor<string, []>("op_3135_cast_fp16")];
            tensor<bool, []> input_125_interleave_0 = const()[name = tensor<string, []>("input_125_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_125_cast_fp16 = concat(axis = var_2952, interleave = input_125_interleave_0, values = (var_3105_cast_fp16, var_3107_cast_fp16, var_3109_cast_fp16, var_3111_cast_fp16, var_3113_cast_fp16, var_3115_cast_fp16, var_3117_cast_fp16, var_3119_cast_fp16, var_3121_cast_fp16, var_3123_cast_fp16, var_3125_cast_fp16, var_3127_cast_fp16, var_3129_cast_fp16, var_3131_cast_fp16, var_3133_cast_fp16, var_3135_cast_fp16))[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<string, []> var_3144_pad_type_0 = const()[name = tensor<string, []>("op_3144_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3144_strides_0 = const()[name = tensor<string, []>("op_3144_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3144_pad_0 = const()[name = tensor<string, []>("op_3144_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3144_dilations_0 = const()[name = tensor<string, []>("op_3144_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3144_groups_0 = const()[name = tensor<string, []>("op_3144_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_12_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(318455872)))];
            tensor<fp16, [1024]> blocks_12_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_12_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(320553088)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3144_cast_fp16 = conv(bias = blocks_12_attn_out_bias_to_fp16, dilations = var_3144_dilations_0, groups = var_3144_groups_0, pad = var_3144_pad_0, pad_type = var_3144_pad_type_0, strides = var_3144_strides_0, weight = blocks_12_attn_out_weight_to_fp16, x = input_125_cast_fp16)[name = tensor<string, []>("op_3144_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_51_cast_fp16 = add(x = inputs_49_cast_fp16, y = var_3144_cast_fp16)[name = tensor<string, []>("inputs_51_cast_fp16")];
            tensor<int32, [1]> input_127_axes_0 = const()[name = tensor<string, []>("input_127_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_127_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_127_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(320555200)))];
            tensor<fp16, [1024]> input_127_beta_0_to_fp16 = const()[name = tensor<string, []>("input_127_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(320557312)))];
            tensor<fp16, []> var_3154_to_fp16 = const()[name = tensor<string, []>("op_3154_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_127_cast_fp16 = layer_norm(axes = input_127_axes_0, beta = input_127_beta_0_to_fp16, epsilon = var_3154_to_fp16, gamma = input_127_gamma_0_to_fp16, x = inputs_51_cast_fp16)[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_129_strides_0 = const()[name = tensor<string, []>("input_129_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_129_dilations_0 = const()[name = tensor<string, []>("input_129_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_129_groups_0 = const()[name = tensor<string, []>("input_129_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_12_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(320559424)))];
            tensor<fp16, [4096]> blocks_12_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_12_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(328948096)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_129_cast_fp16 = conv(bias = blocks_12_mlp_0_bias_to_fp16, dilations = input_129_dilations_0, groups = input_129_groups_0, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = input_129_strides_0, weight = blocks_12_mlp_0_weight_to_fp16, x = input_127_cast_fp16)[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<string, []> input_131_mode_0 = const()[name = tensor<string, []>("input_131_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_131_cast_fp16 = gelu(mode = input_131_mode_0, x = input_129_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<string, []> var_3180_pad_type_0 = const()[name = tensor<string, []>("op_3180_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3180_strides_0 = const()[name = tensor<string, []>("op_3180_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3180_pad_0 = const()[name = tensor<string, []>("op_3180_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3180_dilations_0 = const()[name = tensor<string, []>("op_3180_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3180_groups_0 = const()[name = tensor<string, []>("op_3180_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_12_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_12_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(328956352)))];
            tensor<fp16, [1024]> blocks_12_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_12_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(337345024)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3180_cast_fp16 = conv(bias = blocks_12_mlp_2_bias_to_fp16, dilations = var_3180_dilations_0, groups = var_3180_groups_0, pad = var_3180_pad_0, pad_type = var_3180_pad_type_0, strides = var_3180_strides_0, weight = blocks_12_mlp_2_weight_to_fp16, x = input_131_cast_fp16)[name = tensor<string, []>("op_3180_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_53_cast_fp16 = add(x = inputs_51_cast_fp16, y = var_3180_cast_fp16)[name = tensor<string, []>("inputs_53_cast_fp16")];
            tensor<int32, []> var_3189 = const()[name = tensor<string, []>("op_3189"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_133_axes_0 = const()[name = tensor<string, []>("input_133_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_133_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_133_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(337347136)))];
            tensor<fp16, [1024]> input_133_beta_0_to_fp16 = const()[name = tensor<string, []>("input_133_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(337349248)))];
            tensor<fp16, []> var_3205_to_fp16 = const()[name = tensor<string, []>("op_3205_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_133_cast_fp16 = layer_norm(axes = input_133_axes_0, beta = input_133_beta_0_to_fp16, epsilon = var_3205_to_fp16, gamma = input_133_gamma_0_to_fp16, x = inputs_53_cast_fp16)[name = tensor<string, []>("input_133_cast_fp16")];
            tensor<string, []> q_27_pad_type_0 = const()[name = tensor<string, []>("q_27_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_27_strides_0 = const()[name = tensor<string, []>("q_27_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_27_pad_0 = const()[name = tensor<string, []>("q_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_27_dilations_0 = const()[name = tensor<string, []>("q_27_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_27_groups_0 = const()[name = tensor<string, []>("q_27_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_3240_weight_0_to_fp16 = const()[name = tensor<string, []>("op_3240_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(337351360)))];
            tensor<fp16, [1024]> var_3240_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3240_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(339448576)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3240_cast_fp16 = conv(bias = var_3240_bias_0_to_fp16, dilations = q_27_dilations_0, groups = q_27_groups_0, pad = q_27_pad_0, pad_type = q_27_pad_type_0, strides = q_27_strides_0, weight = var_3240_weight_0_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("op_3240_cast_fp16")];
            tensor<string, []> k_27_pad_type_0 = const()[name = tensor<string, []>("k_27_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_27_strides_0 = const()[name = tensor<string, []>("k_27_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_27_pad_0 = const()[name = tensor<string, []>("k_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_27_dilations_0 = const()[name = tensor<string, []>("k_27_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_27_groups_0 = const()[name = tensor<string, []>("k_27_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_13_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(339450688)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_27_cast_fp16 = conv(dilations = k_27_dilations_0, groups = k_27_groups_0, pad = k_27_pad_0, pad_type = k_27_pad_type_0, strides = k_27_strides_0, weight = blocks_13_attn_key_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("k_27_cast_fp16")];
            tensor<string, []> var_3238_pad_type_0 = const()[name = tensor<string, []>("op_3238_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3238_strides_0 = const()[name = tensor<string, []>("op_3238_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3238_pad_0 = const()[name = tensor<string, []>("op_3238_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3238_dilations_0 = const()[name = tensor<string, []>("op_3238_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3238_groups_0 = const()[name = tensor<string, []>("op_3238_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_13_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(341547904)))];
            tensor<fp16, [1024]> blocks_13_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343645120)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3238_cast_fp16 = conv(bias = blocks_13_attn_value_bias_to_fp16, dilations = var_3238_dilations_0, groups = var_3238_groups_0, pad = var_3238_pad_0, pad_type = var_3238_pad_type_0, strides = var_3238_strides_0, weight = blocks_13_attn_value_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("op_3238_cast_fp16")];
            tensor<int32, [16]> tile_39 = const()[name = tensor<string, []>("tile_39"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3241_axis_0 = const()[name = tensor<string, []>("op_3241_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3241_cast_fp16_15 = split(axis = var_3241_axis_0, split_sizes = tile_39, x = var_3240_cast_fp16)[name = tensor<string, []>("op_3241_cast_fp16")];
            tensor<int32, [4]> var_3258_perm_0 = const()[name = tensor<string, []>("op_3258_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_40 = const()[name = tensor<string, []>("tile_40"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3259_axis_0 = const()[name = tensor<string, []>("op_3259_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_3258_cast_fp16 = transpose(perm = var_3258_perm_0, x = k_27_cast_fp16)[name = tensor<string, []>("transpose_11")];
            tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_3259_cast_fp16_15 = split(axis = var_3259_axis_0, split_sizes = tile_40, x = var_3258_cast_fp16)[name = tensor<string, []>("op_3259_cast_fp16")];
            tensor<int32, [16]> tile_41 = const()[name = tensor<string, []>("tile_41"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3276_axis_0 = const()[name = tensor<string, []>("op_3276_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3276_cast_fp16_15 = split(axis = var_3276_axis_0, split_sizes = tile_41, x = var_3238_cast_fp16)[name = tensor<string, []>("op_3276_cast_fp16")];
            tensor<string, []> aw_417_equation_0 = const()[name = tensor<string, []>("aw_417_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_417_cast_fp16 = einsum(equation = aw_417_equation_0, values = (var_3259_cast_fp16_0, var_3241_cast_fp16_0))[name = tensor<string, []>("aw_417_cast_fp16")];
            tensor<string, []> aw_419_equation_0 = const()[name = tensor<string, []>("aw_419_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_419_cast_fp16 = einsum(equation = aw_419_equation_0, values = (var_3259_cast_fp16_1, var_3241_cast_fp16_1))[name = tensor<string, []>("aw_419_cast_fp16")];
            tensor<string, []> aw_421_equation_0 = const()[name = tensor<string, []>("aw_421_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_421_cast_fp16 = einsum(equation = aw_421_equation_0, values = (var_3259_cast_fp16_2, var_3241_cast_fp16_2))[name = tensor<string, []>("aw_421_cast_fp16")];
            tensor<string, []> aw_423_equation_0 = const()[name = tensor<string, []>("aw_423_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_423_cast_fp16 = einsum(equation = aw_423_equation_0, values = (var_3259_cast_fp16_3, var_3241_cast_fp16_3))[name = tensor<string, []>("aw_423_cast_fp16")];
            tensor<string, []> aw_425_equation_0 = const()[name = tensor<string, []>("aw_425_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_425_cast_fp16 = einsum(equation = aw_425_equation_0, values = (var_3259_cast_fp16_4, var_3241_cast_fp16_4))[name = tensor<string, []>("aw_425_cast_fp16")];
            tensor<string, []> aw_427_equation_0 = const()[name = tensor<string, []>("aw_427_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_427_cast_fp16 = einsum(equation = aw_427_equation_0, values = (var_3259_cast_fp16_5, var_3241_cast_fp16_5))[name = tensor<string, []>("aw_427_cast_fp16")];
            tensor<string, []> aw_429_equation_0 = const()[name = tensor<string, []>("aw_429_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_429_cast_fp16 = einsum(equation = aw_429_equation_0, values = (var_3259_cast_fp16_6, var_3241_cast_fp16_6))[name = tensor<string, []>("aw_429_cast_fp16")];
            tensor<string, []> aw_431_equation_0 = const()[name = tensor<string, []>("aw_431_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_431_cast_fp16 = einsum(equation = aw_431_equation_0, values = (var_3259_cast_fp16_7, var_3241_cast_fp16_7))[name = tensor<string, []>("aw_431_cast_fp16")];
            tensor<string, []> aw_433_equation_0 = const()[name = tensor<string, []>("aw_433_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_433_cast_fp16 = einsum(equation = aw_433_equation_0, values = (var_3259_cast_fp16_8, var_3241_cast_fp16_8))[name = tensor<string, []>("aw_433_cast_fp16")];
            tensor<string, []> aw_435_equation_0 = const()[name = tensor<string, []>("aw_435_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_435_cast_fp16 = einsum(equation = aw_435_equation_0, values = (var_3259_cast_fp16_9, var_3241_cast_fp16_9))[name = tensor<string, []>("aw_435_cast_fp16")];
            tensor<string, []> aw_437_equation_0 = const()[name = tensor<string, []>("aw_437_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_437_cast_fp16 = einsum(equation = aw_437_equation_0, values = (var_3259_cast_fp16_10, var_3241_cast_fp16_10))[name = tensor<string, []>("aw_437_cast_fp16")];
            tensor<string, []> aw_439_equation_0 = const()[name = tensor<string, []>("aw_439_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_439_cast_fp16 = einsum(equation = aw_439_equation_0, values = (var_3259_cast_fp16_11, var_3241_cast_fp16_11))[name = tensor<string, []>("aw_439_cast_fp16")];
            tensor<string, []> aw_441_equation_0 = const()[name = tensor<string, []>("aw_441_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_441_cast_fp16 = einsum(equation = aw_441_equation_0, values = (var_3259_cast_fp16_12, var_3241_cast_fp16_12))[name = tensor<string, []>("aw_441_cast_fp16")];
            tensor<string, []> aw_443_equation_0 = const()[name = tensor<string, []>("aw_443_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_443_cast_fp16 = einsum(equation = aw_443_equation_0, values = (var_3259_cast_fp16_13, var_3241_cast_fp16_13))[name = tensor<string, []>("aw_443_cast_fp16")];
            tensor<string, []> aw_445_equation_0 = const()[name = tensor<string, []>("aw_445_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_445_cast_fp16 = einsum(equation = aw_445_equation_0, values = (var_3259_cast_fp16_14, var_3241_cast_fp16_14))[name = tensor<string, []>("aw_445_cast_fp16")];
            tensor<string, []> aw_447_equation_0 = const()[name = tensor<string, []>("aw_447_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_447_cast_fp16 = einsum(equation = aw_447_equation_0, values = (var_3259_cast_fp16_15, var_3241_cast_fp16_15))[name = tensor<string, []>("aw_447_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3325_cast_fp16 = softmax(axis = var_3189, x = aw_417_cast_fp16)[name = tensor<string, []>("op_3325_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3326_cast_fp16 = softmax(axis = var_3189, x = aw_419_cast_fp16)[name = tensor<string, []>("op_3326_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3327_cast_fp16 = softmax(axis = var_3189, x = aw_421_cast_fp16)[name = tensor<string, []>("op_3327_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3328_cast_fp16 = softmax(axis = var_3189, x = aw_423_cast_fp16)[name = tensor<string, []>("op_3328_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3329_cast_fp16 = softmax(axis = var_3189, x = aw_425_cast_fp16)[name = tensor<string, []>("op_3329_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3330_cast_fp16 = softmax(axis = var_3189, x = aw_427_cast_fp16)[name = tensor<string, []>("op_3330_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3331_cast_fp16 = softmax(axis = var_3189, x = aw_429_cast_fp16)[name = tensor<string, []>("op_3331_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3332_cast_fp16 = softmax(axis = var_3189, x = aw_431_cast_fp16)[name = tensor<string, []>("op_3332_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3333_cast_fp16 = softmax(axis = var_3189, x = aw_433_cast_fp16)[name = tensor<string, []>("op_3333_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3334_cast_fp16 = softmax(axis = var_3189, x = aw_435_cast_fp16)[name = tensor<string, []>("op_3334_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3335_cast_fp16 = softmax(axis = var_3189, x = aw_437_cast_fp16)[name = tensor<string, []>("op_3335_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3336_cast_fp16 = softmax(axis = var_3189, x = aw_439_cast_fp16)[name = tensor<string, []>("op_3336_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3337_cast_fp16 = softmax(axis = var_3189, x = aw_441_cast_fp16)[name = tensor<string, []>("op_3337_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3338_cast_fp16 = softmax(axis = var_3189, x = aw_443_cast_fp16)[name = tensor<string, []>("op_3338_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3339_cast_fp16 = softmax(axis = var_3189, x = aw_445_cast_fp16)[name = tensor<string, []>("op_3339_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3340_cast_fp16 = softmax(axis = var_3189, x = aw_447_cast_fp16)[name = tensor<string, []>("op_3340_cast_fp16")];
            tensor<string, []> var_3342_equation_0 = const()[name = tensor<string, []>("op_3342_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3342_cast_fp16 = einsum(equation = var_3342_equation_0, values = (var_3276_cast_fp16_0, var_3325_cast_fp16))[name = tensor<string, []>("op_3342_cast_fp16")];
            tensor<string, []> var_3344_equation_0 = const()[name = tensor<string, []>("op_3344_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3344_cast_fp16 = einsum(equation = var_3344_equation_0, values = (var_3276_cast_fp16_1, var_3326_cast_fp16))[name = tensor<string, []>("op_3344_cast_fp16")];
            tensor<string, []> var_3346_equation_0 = const()[name = tensor<string, []>("op_3346_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3346_cast_fp16 = einsum(equation = var_3346_equation_0, values = (var_3276_cast_fp16_2, var_3327_cast_fp16))[name = tensor<string, []>("op_3346_cast_fp16")];
            tensor<string, []> var_3348_equation_0 = const()[name = tensor<string, []>("op_3348_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3348_cast_fp16 = einsum(equation = var_3348_equation_0, values = (var_3276_cast_fp16_3, var_3328_cast_fp16))[name = tensor<string, []>("op_3348_cast_fp16")];
            tensor<string, []> var_3350_equation_0 = const()[name = tensor<string, []>("op_3350_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3350_cast_fp16 = einsum(equation = var_3350_equation_0, values = (var_3276_cast_fp16_4, var_3329_cast_fp16))[name = tensor<string, []>("op_3350_cast_fp16")];
            tensor<string, []> var_3352_equation_0 = const()[name = tensor<string, []>("op_3352_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3352_cast_fp16 = einsum(equation = var_3352_equation_0, values = (var_3276_cast_fp16_5, var_3330_cast_fp16))[name = tensor<string, []>("op_3352_cast_fp16")];
            tensor<string, []> var_3354_equation_0 = const()[name = tensor<string, []>("op_3354_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3354_cast_fp16 = einsum(equation = var_3354_equation_0, values = (var_3276_cast_fp16_6, var_3331_cast_fp16))[name = tensor<string, []>("op_3354_cast_fp16")];
            tensor<string, []> var_3356_equation_0 = const()[name = tensor<string, []>("op_3356_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3356_cast_fp16 = einsum(equation = var_3356_equation_0, values = (var_3276_cast_fp16_7, var_3332_cast_fp16))[name = tensor<string, []>("op_3356_cast_fp16")];
            tensor<string, []> var_3358_equation_0 = const()[name = tensor<string, []>("op_3358_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3358_cast_fp16 = einsum(equation = var_3358_equation_0, values = (var_3276_cast_fp16_8, var_3333_cast_fp16))[name = tensor<string, []>("op_3358_cast_fp16")];
            tensor<string, []> var_3360_equation_0 = const()[name = tensor<string, []>("op_3360_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3360_cast_fp16 = einsum(equation = var_3360_equation_0, values = (var_3276_cast_fp16_9, var_3334_cast_fp16))[name = tensor<string, []>("op_3360_cast_fp16")];
            tensor<string, []> var_3362_equation_0 = const()[name = tensor<string, []>("op_3362_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3362_cast_fp16 = einsum(equation = var_3362_equation_0, values = (var_3276_cast_fp16_10, var_3335_cast_fp16))[name = tensor<string, []>("op_3362_cast_fp16")];
            tensor<string, []> var_3364_equation_0 = const()[name = tensor<string, []>("op_3364_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3364_cast_fp16 = einsum(equation = var_3364_equation_0, values = (var_3276_cast_fp16_11, var_3336_cast_fp16))[name = tensor<string, []>("op_3364_cast_fp16")];
            tensor<string, []> var_3366_equation_0 = const()[name = tensor<string, []>("op_3366_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3366_cast_fp16 = einsum(equation = var_3366_equation_0, values = (var_3276_cast_fp16_12, var_3337_cast_fp16))[name = tensor<string, []>("op_3366_cast_fp16")];
            tensor<string, []> var_3368_equation_0 = const()[name = tensor<string, []>("op_3368_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3368_cast_fp16 = einsum(equation = var_3368_equation_0, values = (var_3276_cast_fp16_13, var_3338_cast_fp16))[name = tensor<string, []>("op_3368_cast_fp16")];
            tensor<string, []> var_3370_equation_0 = const()[name = tensor<string, []>("op_3370_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3370_cast_fp16 = einsum(equation = var_3370_equation_0, values = (var_3276_cast_fp16_14, var_3339_cast_fp16))[name = tensor<string, []>("op_3370_cast_fp16")];
            tensor<string, []> var_3372_equation_0 = const()[name = tensor<string, []>("op_3372_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3372_cast_fp16 = einsum(equation = var_3372_equation_0, values = (var_3276_cast_fp16_15, var_3340_cast_fp16))[name = tensor<string, []>("op_3372_cast_fp16")];
            tensor<bool, []> input_135_interleave_0 = const()[name = tensor<string, []>("input_135_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_135_cast_fp16 = concat(axis = var_3189, interleave = input_135_interleave_0, values = (var_3342_cast_fp16, var_3344_cast_fp16, var_3346_cast_fp16, var_3348_cast_fp16, var_3350_cast_fp16, var_3352_cast_fp16, var_3354_cast_fp16, var_3356_cast_fp16, var_3358_cast_fp16, var_3360_cast_fp16, var_3362_cast_fp16, var_3364_cast_fp16, var_3366_cast_fp16, var_3368_cast_fp16, var_3370_cast_fp16, var_3372_cast_fp16))[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<string, []> var_3381_pad_type_0 = const()[name = tensor<string, []>("op_3381_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3381_strides_0 = const()[name = tensor<string, []>("op_3381_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3381_pad_0 = const()[name = tensor<string, []>("op_3381_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3381_dilations_0 = const()[name = tensor<string, []>("op_3381_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3381_groups_0 = const()[name = tensor<string, []>("op_3381_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_13_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343647232)))];
            tensor<fp16, [1024]> blocks_13_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_13_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(345744448)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3381_cast_fp16 = conv(bias = blocks_13_attn_out_bias_to_fp16, dilations = var_3381_dilations_0, groups = var_3381_groups_0, pad = var_3381_pad_0, pad_type = var_3381_pad_type_0, strides = var_3381_strides_0, weight = blocks_13_attn_out_weight_to_fp16, x = input_135_cast_fp16)[name = tensor<string, []>("op_3381_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_55_cast_fp16 = add(x = inputs_53_cast_fp16, y = var_3381_cast_fp16)[name = tensor<string, []>("inputs_55_cast_fp16")];
            tensor<int32, [1]> input_137_axes_0 = const()[name = tensor<string, []>("input_137_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_137_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_137_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(345746560)))];
            tensor<fp16, [1024]> input_137_beta_0_to_fp16 = const()[name = tensor<string, []>("input_137_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(345748672)))];
            tensor<fp16, []> var_3391_to_fp16 = const()[name = tensor<string, []>("op_3391_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_137_cast_fp16 = layer_norm(axes = input_137_axes_0, beta = input_137_beta_0_to_fp16, epsilon = var_3391_to_fp16, gamma = input_137_gamma_0_to_fp16, x = inputs_55_cast_fp16)[name = tensor<string, []>("input_137_cast_fp16")];
            tensor<string, []> input_139_pad_type_0 = const()[name = tensor<string, []>("input_139_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_139_strides_0 = const()[name = tensor<string, []>("input_139_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_139_pad_0 = const()[name = tensor<string, []>("input_139_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_139_dilations_0 = const()[name = tensor<string, []>("input_139_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_139_groups_0 = const()[name = tensor<string, []>("input_139_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_13_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(345750784)))];
            tensor<fp16, [4096]> blocks_13_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_13_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(354139456)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_139_cast_fp16 = conv(bias = blocks_13_mlp_0_bias_to_fp16, dilations = input_139_dilations_0, groups = input_139_groups_0, pad = input_139_pad_0, pad_type = input_139_pad_type_0, strides = input_139_strides_0, weight = blocks_13_mlp_0_weight_to_fp16, x = input_137_cast_fp16)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<string, []> input_141_mode_0 = const()[name = tensor<string, []>("input_141_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_141_cast_fp16 = gelu(mode = input_141_mode_0, x = input_139_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<string, []> var_3417_pad_type_0 = const()[name = tensor<string, []>("op_3417_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3417_strides_0 = const()[name = tensor<string, []>("op_3417_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3417_pad_0 = const()[name = tensor<string, []>("op_3417_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3417_dilations_0 = const()[name = tensor<string, []>("op_3417_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3417_groups_0 = const()[name = tensor<string, []>("op_3417_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_13_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_13_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(354147712)))];
            tensor<fp16, [1024]> blocks_13_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_13_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(362536384)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3417_cast_fp16 = conv(bias = blocks_13_mlp_2_bias_to_fp16, dilations = var_3417_dilations_0, groups = var_3417_groups_0, pad = var_3417_pad_0, pad_type = var_3417_pad_type_0, strides = var_3417_strides_0, weight = blocks_13_mlp_2_weight_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("op_3417_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_57_cast_fp16 = add(x = inputs_55_cast_fp16, y = var_3417_cast_fp16)[name = tensor<string, []>("inputs_57_cast_fp16")];
            tensor<int32, []> var_3426 = const()[name = tensor<string, []>("op_3426"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_143_axes_0 = const()[name = tensor<string, []>("input_143_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_143_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_143_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(362538496)))];
            tensor<fp16, [1024]> input_143_beta_0_to_fp16 = const()[name = tensor<string, []>("input_143_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(362540608)))];
            tensor<fp16, []> var_3442_to_fp16 = const()[name = tensor<string, []>("op_3442_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_143_cast_fp16 = layer_norm(axes = input_143_axes_0, beta = input_143_beta_0_to_fp16, epsilon = var_3442_to_fp16, gamma = input_143_gamma_0_to_fp16, x = inputs_57_cast_fp16)[name = tensor<string, []>("input_143_cast_fp16")];
            tensor<string, []> q_29_pad_type_0 = const()[name = tensor<string, []>("q_29_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_29_strides_0 = const()[name = tensor<string, []>("q_29_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_29_pad_0 = const()[name = tensor<string, []>("q_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_29_dilations_0 = const()[name = tensor<string, []>("q_29_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_29_groups_0 = const()[name = tensor<string, []>("q_29_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_3477_weight_0_to_fp16 = const()[name = tensor<string, []>("op_3477_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(362542720)))];
            tensor<fp16, [1024]> var_3477_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3477_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(364639936)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3477_cast_fp16 = conv(bias = var_3477_bias_0_to_fp16, dilations = q_29_dilations_0, groups = q_29_groups_0, pad = q_29_pad_0, pad_type = q_29_pad_type_0, strides = q_29_strides_0, weight = var_3477_weight_0_to_fp16, x = input_143_cast_fp16)[name = tensor<string, []>("op_3477_cast_fp16")];
            tensor<string, []> k_29_pad_type_0 = const()[name = tensor<string, []>("k_29_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_29_strides_0 = const()[name = tensor<string, []>("k_29_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_29_pad_0 = const()[name = tensor<string, []>("k_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_29_dilations_0 = const()[name = tensor<string, []>("k_29_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_29_groups_0 = const()[name = tensor<string, []>("k_29_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_14_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(364642048)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_29_cast_fp16 = conv(dilations = k_29_dilations_0, groups = k_29_groups_0, pad = k_29_pad_0, pad_type = k_29_pad_type_0, strides = k_29_strides_0, weight = blocks_14_attn_key_weight_to_fp16, x = input_143_cast_fp16)[name = tensor<string, []>("k_29_cast_fp16")];
            tensor<string, []> var_3475_pad_type_0 = const()[name = tensor<string, []>("op_3475_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3475_strides_0 = const()[name = tensor<string, []>("op_3475_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3475_pad_0 = const()[name = tensor<string, []>("op_3475_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3475_dilations_0 = const()[name = tensor<string, []>("op_3475_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3475_groups_0 = const()[name = tensor<string, []>("op_3475_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_14_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(366739264)))];
            tensor<fp16, [1024]> blocks_14_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(368836480)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3475_cast_fp16 = conv(bias = blocks_14_attn_value_bias_to_fp16, dilations = var_3475_dilations_0, groups = var_3475_groups_0, pad = var_3475_pad_0, pad_type = var_3475_pad_type_0, strides = var_3475_strides_0, weight = blocks_14_attn_value_weight_to_fp16, x = input_143_cast_fp16)[name = tensor<string, []>("op_3475_cast_fp16")];
            tensor<int32, [16]> tile_42 = const()[name = tensor<string, []>("tile_42"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3478_axis_0 = const()[name = tensor<string, []>("op_3478_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3478_cast_fp16_15 = split(axis = var_3478_axis_0, split_sizes = tile_42, x = var_3477_cast_fp16)[name = tensor<string, []>("op_3478_cast_fp16")];
            tensor<int32, [4]> var_3495_perm_0 = const()[name = tensor<string, []>("op_3495_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_43 = const()[name = tensor<string, []>("tile_43"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3496_axis_0 = const()[name = tensor<string, []>("op_3496_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_3495_cast_fp16 = transpose(perm = var_3495_perm_0, x = k_29_cast_fp16)[name = tensor<string, []>("transpose_10")];
            tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_3496_cast_fp16_15 = split(axis = var_3496_axis_0, split_sizes = tile_43, x = var_3495_cast_fp16)[name = tensor<string, []>("op_3496_cast_fp16")];
            tensor<int32, [16]> tile_44 = const()[name = tensor<string, []>("tile_44"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3513_axis_0 = const()[name = tensor<string, []>("op_3513_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3513_cast_fp16_15 = split(axis = var_3513_axis_0, split_sizes = tile_44, x = var_3475_cast_fp16)[name = tensor<string, []>("op_3513_cast_fp16")];
            tensor<string, []> aw_449_equation_0 = const()[name = tensor<string, []>("aw_449_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_449_cast_fp16 = einsum(equation = aw_449_equation_0, values = (var_3496_cast_fp16_0, var_3478_cast_fp16_0))[name = tensor<string, []>("aw_449_cast_fp16")];
            tensor<string, []> aw_451_equation_0 = const()[name = tensor<string, []>("aw_451_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_451_cast_fp16 = einsum(equation = aw_451_equation_0, values = (var_3496_cast_fp16_1, var_3478_cast_fp16_1))[name = tensor<string, []>("aw_451_cast_fp16")];
            tensor<string, []> aw_453_equation_0 = const()[name = tensor<string, []>("aw_453_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_453_cast_fp16 = einsum(equation = aw_453_equation_0, values = (var_3496_cast_fp16_2, var_3478_cast_fp16_2))[name = tensor<string, []>("aw_453_cast_fp16")];
            tensor<string, []> aw_455_equation_0 = const()[name = tensor<string, []>("aw_455_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_455_cast_fp16 = einsum(equation = aw_455_equation_0, values = (var_3496_cast_fp16_3, var_3478_cast_fp16_3))[name = tensor<string, []>("aw_455_cast_fp16")];
            tensor<string, []> aw_457_equation_0 = const()[name = tensor<string, []>("aw_457_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_457_cast_fp16 = einsum(equation = aw_457_equation_0, values = (var_3496_cast_fp16_4, var_3478_cast_fp16_4))[name = tensor<string, []>("aw_457_cast_fp16")];
            tensor<string, []> aw_459_equation_0 = const()[name = tensor<string, []>("aw_459_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_459_cast_fp16 = einsum(equation = aw_459_equation_0, values = (var_3496_cast_fp16_5, var_3478_cast_fp16_5))[name = tensor<string, []>("aw_459_cast_fp16")];
            tensor<string, []> aw_461_equation_0 = const()[name = tensor<string, []>("aw_461_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_461_cast_fp16 = einsum(equation = aw_461_equation_0, values = (var_3496_cast_fp16_6, var_3478_cast_fp16_6))[name = tensor<string, []>("aw_461_cast_fp16")];
            tensor<string, []> aw_463_equation_0 = const()[name = tensor<string, []>("aw_463_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_463_cast_fp16 = einsum(equation = aw_463_equation_0, values = (var_3496_cast_fp16_7, var_3478_cast_fp16_7))[name = tensor<string, []>("aw_463_cast_fp16")];
            tensor<string, []> aw_465_equation_0 = const()[name = tensor<string, []>("aw_465_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_465_cast_fp16 = einsum(equation = aw_465_equation_0, values = (var_3496_cast_fp16_8, var_3478_cast_fp16_8))[name = tensor<string, []>("aw_465_cast_fp16")];
            tensor<string, []> aw_467_equation_0 = const()[name = tensor<string, []>("aw_467_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_467_cast_fp16 = einsum(equation = aw_467_equation_0, values = (var_3496_cast_fp16_9, var_3478_cast_fp16_9))[name = tensor<string, []>("aw_467_cast_fp16")];
            tensor<string, []> aw_469_equation_0 = const()[name = tensor<string, []>("aw_469_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_469_cast_fp16 = einsum(equation = aw_469_equation_0, values = (var_3496_cast_fp16_10, var_3478_cast_fp16_10))[name = tensor<string, []>("aw_469_cast_fp16")];
            tensor<string, []> aw_471_equation_0 = const()[name = tensor<string, []>("aw_471_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_471_cast_fp16 = einsum(equation = aw_471_equation_0, values = (var_3496_cast_fp16_11, var_3478_cast_fp16_11))[name = tensor<string, []>("aw_471_cast_fp16")];
            tensor<string, []> aw_473_equation_0 = const()[name = tensor<string, []>("aw_473_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_473_cast_fp16 = einsum(equation = aw_473_equation_0, values = (var_3496_cast_fp16_12, var_3478_cast_fp16_12))[name = tensor<string, []>("aw_473_cast_fp16")];
            tensor<string, []> aw_475_equation_0 = const()[name = tensor<string, []>("aw_475_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_475_cast_fp16 = einsum(equation = aw_475_equation_0, values = (var_3496_cast_fp16_13, var_3478_cast_fp16_13))[name = tensor<string, []>("aw_475_cast_fp16")];
            tensor<string, []> aw_477_equation_0 = const()[name = tensor<string, []>("aw_477_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_477_cast_fp16 = einsum(equation = aw_477_equation_0, values = (var_3496_cast_fp16_14, var_3478_cast_fp16_14))[name = tensor<string, []>("aw_477_cast_fp16")];
            tensor<string, []> aw_479_equation_0 = const()[name = tensor<string, []>("aw_479_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_479_cast_fp16 = einsum(equation = aw_479_equation_0, values = (var_3496_cast_fp16_15, var_3478_cast_fp16_15))[name = tensor<string, []>("aw_479_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3562_cast_fp16 = softmax(axis = var_3426, x = aw_449_cast_fp16)[name = tensor<string, []>("op_3562_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3563_cast_fp16 = softmax(axis = var_3426, x = aw_451_cast_fp16)[name = tensor<string, []>("op_3563_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3564_cast_fp16 = softmax(axis = var_3426, x = aw_453_cast_fp16)[name = tensor<string, []>("op_3564_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3565_cast_fp16 = softmax(axis = var_3426, x = aw_455_cast_fp16)[name = tensor<string, []>("op_3565_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3566_cast_fp16 = softmax(axis = var_3426, x = aw_457_cast_fp16)[name = tensor<string, []>("op_3566_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3567_cast_fp16 = softmax(axis = var_3426, x = aw_459_cast_fp16)[name = tensor<string, []>("op_3567_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3568_cast_fp16 = softmax(axis = var_3426, x = aw_461_cast_fp16)[name = tensor<string, []>("op_3568_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3569_cast_fp16 = softmax(axis = var_3426, x = aw_463_cast_fp16)[name = tensor<string, []>("op_3569_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3570_cast_fp16 = softmax(axis = var_3426, x = aw_465_cast_fp16)[name = tensor<string, []>("op_3570_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3571_cast_fp16 = softmax(axis = var_3426, x = aw_467_cast_fp16)[name = tensor<string, []>("op_3571_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3572_cast_fp16 = softmax(axis = var_3426, x = aw_469_cast_fp16)[name = tensor<string, []>("op_3572_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3573_cast_fp16 = softmax(axis = var_3426, x = aw_471_cast_fp16)[name = tensor<string, []>("op_3573_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3574_cast_fp16 = softmax(axis = var_3426, x = aw_473_cast_fp16)[name = tensor<string, []>("op_3574_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3575_cast_fp16 = softmax(axis = var_3426, x = aw_475_cast_fp16)[name = tensor<string, []>("op_3575_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3576_cast_fp16 = softmax(axis = var_3426, x = aw_477_cast_fp16)[name = tensor<string, []>("op_3576_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3577_cast_fp16 = softmax(axis = var_3426, x = aw_479_cast_fp16)[name = tensor<string, []>("op_3577_cast_fp16")];
            tensor<string, []> var_3579_equation_0 = const()[name = tensor<string, []>("op_3579_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3579_cast_fp16 = einsum(equation = var_3579_equation_0, values = (var_3513_cast_fp16_0, var_3562_cast_fp16))[name = tensor<string, []>("op_3579_cast_fp16")];
            tensor<string, []> var_3581_equation_0 = const()[name = tensor<string, []>("op_3581_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3581_cast_fp16 = einsum(equation = var_3581_equation_0, values = (var_3513_cast_fp16_1, var_3563_cast_fp16))[name = tensor<string, []>("op_3581_cast_fp16")];
            tensor<string, []> var_3583_equation_0 = const()[name = tensor<string, []>("op_3583_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3583_cast_fp16 = einsum(equation = var_3583_equation_0, values = (var_3513_cast_fp16_2, var_3564_cast_fp16))[name = tensor<string, []>("op_3583_cast_fp16")];
            tensor<string, []> var_3585_equation_0 = const()[name = tensor<string, []>("op_3585_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3585_cast_fp16 = einsum(equation = var_3585_equation_0, values = (var_3513_cast_fp16_3, var_3565_cast_fp16))[name = tensor<string, []>("op_3585_cast_fp16")];
            tensor<string, []> var_3587_equation_0 = const()[name = tensor<string, []>("op_3587_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3587_cast_fp16 = einsum(equation = var_3587_equation_0, values = (var_3513_cast_fp16_4, var_3566_cast_fp16))[name = tensor<string, []>("op_3587_cast_fp16")];
            tensor<string, []> var_3589_equation_0 = const()[name = tensor<string, []>("op_3589_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3589_cast_fp16 = einsum(equation = var_3589_equation_0, values = (var_3513_cast_fp16_5, var_3567_cast_fp16))[name = tensor<string, []>("op_3589_cast_fp16")];
            tensor<string, []> var_3591_equation_0 = const()[name = tensor<string, []>("op_3591_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3591_cast_fp16 = einsum(equation = var_3591_equation_0, values = (var_3513_cast_fp16_6, var_3568_cast_fp16))[name = tensor<string, []>("op_3591_cast_fp16")];
            tensor<string, []> var_3593_equation_0 = const()[name = tensor<string, []>("op_3593_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3593_cast_fp16 = einsum(equation = var_3593_equation_0, values = (var_3513_cast_fp16_7, var_3569_cast_fp16))[name = tensor<string, []>("op_3593_cast_fp16")];
            tensor<string, []> var_3595_equation_0 = const()[name = tensor<string, []>("op_3595_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3595_cast_fp16 = einsum(equation = var_3595_equation_0, values = (var_3513_cast_fp16_8, var_3570_cast_fp16))[name = tensor<string, []>("op_3595_cast_fp16")];
            tensor<string, []> var_3597_equation_0 = const()[name = tensor<string, []>("op_3597_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3597_cast_fp16 = einsum(equation = var_3597_equation_0, values = (var_3513_cast_fp16_9, var_3571_cast_fp16))[name = tensor<string, []>("op_3597_cast_fp16")];
            tensor<string, []> var_3599_equation_0 = const()[name = tensor<string, []>("op_3599_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3599_cast_fp16 = einsum(equation = var_3599_equation_0, values = (var_3513_cast_fp16_10, var_3572_cast_fp16))[name = tensor<string, []>("op_3599_cast_fp16")];
            tensor<string, []> var_3601_equation_0 = const()[name = tensor<string, []>("op_3601_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3601_cast_fp16 = einsum(equation = var_3601_equation_0, values = (var_3513_cast_fp16_11, var_3573_cast_fp16))[name = tensor<string, []>("op_3601_cast_fp16")];
            tensor<string, []> var_3603_equation_0 = const()[name = tensor<string, []>("op_3603_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3603_cast_fp16 = einsum(equation = var_3603_equation_0, values = (var_3513_cast_fp16_12, var_3574_cast_fp16))[name = tensor<string, []>("op_3603_cast_fp16")];
            tensor<string, []> var_3605_equation_0 = const()[name = tensor<string, []>("op_3605_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3605_cast_fp16 = einsum(equation = var_3605_equation_0, values = (var_3513_cast_fp16_13, var_3575_cast_fp16))[name = tensor<string, []>("op_3605_cast_fp16")];
            tensor<string, []> var_3607_equation_0 = const()[name = tensor<string, []>("op_3607_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3607_cast_fp16 = einsum(equation = var_3607_equation_0, values = (var_3513_cast_fp16_14, var_3576_cast_fp16))[name = tensor<string, []>("op_3607_cast_fp16")];
            tensor<string, []> var_3609_equation_0 = const()[name = tensor<string, []>("op_3609_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3609_cast_fp16 = einsum(equation = var_3609_equation_0, values = (var_3513_cast_fp16_15, var_3577_cast_fp16))[name = tensor<string, []>("op_3609_cast_fp16")];
            tensor<bool, []> input_145_interleave_0 = const()[name = tensor<string, []>("input_145_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_145_cast_fp16 = concat(axis = var_3426, interleave = input_145_interleave_0, values = (var_3579_cast_fp16, var_3581_cast_fp16, var_3583_cast_fp16, var_3585_cast_fp16, var_3587_cast_fp16, var_3589_cast_fp16, var_3591_cast_fp16, var_3593_cast_fp16, var_3595_cast_fp16, var_3597_cast_fp16, var_3599_cast_fp16, var_3601_cast_fp16, var_3603_cast_fp16, var_3605_cast_fp16, var_3607_cast_fp16, var_3609_cast_fp16))[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<string, []> var_3618_pad_type_0 = const()[name = tensor<string, []>("op_3618_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3618_strides_0 = const()[name = tensor<string, []>("op_3618_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3618_pad_0 = const()[name = tensor<string, []>("op_3618_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3618_dilations_0 = const()[name = tensor<string, []>("op_3618_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3618_groups_0 = const()[name = tensor<string, []>("op_3618_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_14_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(368838592)))];
            tensor<fp16, [1024]> blocks_14_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_14_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(370935808)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3618_cast_fp16 = conv(bias = blocks_14_attn_out_bias_to_fp16, dilations = var_3618_dilations_0, groups = var_3618_groups_0, pad = var_3618_pad_0, pad_type = var_3618_pad_type_0, strides = var_3618_strides_0, weight = blocks_14_attn_out_weight_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("op_3618_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_59_cast_fp16 = add(x = inputs_57_cast_fp16, y = var_3618_cast_fp16)[name = tensor<string, []>("inputs_59_cast_fp16")];
            tensor<int32, [1]> input_147_axes_0 = const()[name = tensor<string, []>("input_147_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_147_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_147_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(370937920)))];
            tensor<fp16, [1024]> input_147_beta_0_to_fp16 = const()[name = tensor<string, []>("input_147_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(370940032)))];
            tensor<fp16, []> var_3628_to_fp16 = const()[name = tensor<string, []>("op_3628_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_147_cast_fp16 = layer_norm(axes = input_147_axes_0, beta = input_147_beta_0_to_fp16, epsilon = var_3628_to_fp16, gamma = input_147_gamma_0_to_fp16, x = inputs_59_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<string, []> input_149_pad_type_0 = const()[name = tensor<string, []>("input_149_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_149_strides_0 = const()[name = tensor<string, []>("input_149_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_149_pad_0 = const()[name = tensor<string, []>("input_149_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_149_dilations_0 = const()[name = tensor<string, []>("input_149_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_149_groups_0 = const()[name = tensor<string, []>("input_149_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_14_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(370942144)))];
            tensor<fp16, [4096]> blocks_14_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_14_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(379330816)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_149_cast_fp16 = conv(bias = blocks_14_mlp_0_bias_to_fp16, dilations = input_149_dilations_0, groups = input_149_groups_0, pad = input_149_pad_0, pad_type = input_149_pad_type_0, strides = input_149_strides_0, weight = blocks_14_mlp_0_weight_to_fp16, x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<string, []> input_151_mode_0 = const()[name = tensor<string, []>("input_151_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_151_cast_fp16 = gelu(mode = input_151_mode_0, x = input_149_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<string, []> var_3654_pad_type_0 = const()[name = tensor<string, []>("op_3654_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3654_strides_0 = const()[name = tensor<string, []>("op_3654_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3654_pad_0 = const()[name = tensor<string, []>("op_3654_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3654_dilations_0 = const()[name = tensor<string, []>("op_3654_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3654_groups_0 = const()[name = tensor<string, []>("op_3654_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_14_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_14_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(379339072)))];
            tensor<fp16, [1024]> blocks_14_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_14_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(387727744)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3654_cast_fp16 = conv(bias = blocks_14_mlp_2_bias_to_fp16, dilations = var_3654_dilations_0, groups = var_3654_groups_0, pad = var_3654_pad_0, pad_type = var_3654_pad_type_0, strides = var_3654_strides_0, weight = blocks_14_mlp_2_weight_to_fp16, x = input_151_cast_fp16)[name = tensor<string, []>("op_3654_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_61_cast_fp16 = add(x = inputs_59_cast_fp16, y = var_3654_cast_fp16)[name = tensor<string, []>("inputs_61_cast_fp16")];
            tensor<int32, []> var_3663 = const()[name = tensor<string, []>("op_3663"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_153_axes_0 = const()[name = tensor<string, []>("input_153_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_153_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_153_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(387729856)))];
            tensor<fp16, [1024]> input_153_beta_0_to_fp16 = const()[name = tensor<string, []>("input_153_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(387731968)))];
            tensor<fp16, []> var_3679_to_fp16 = const()[name = tensor<string, []>("op_3679_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_153_cast_fp16 = layer_norm(axes = input_153_axes_0, beta = input_153_beta_0_to_fp16, epsilon = var_3679_to_fp16, gamma = input_153_gamma_0_to_fp16, x = inputs_61_cast_fp16)[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<string, []> q_31_pad_type_0 = const()[name = tensor<string, []>("q_31_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_31_strides_0 = const()[name = tensor<string, []>("q_31_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_31_pad_0 = const()[name = tensor<string, []>("q_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_31_dilations_0 = const()[name = tensor<string, []>("q_31_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_31_groups_0 = const()[name = tensor<string, []>("q_31_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_3714_weight_0_to_fp16 = const()[name = tensor<string, []>("op_3714_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(387734080)))];
            tensor<fp16, [1024]> var_3714_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3714_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(389831296)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3714_cast_fp16 = conv(bias = var_3714_bias_0_to_fp16, dilations = q_31_dilations_0, groups = q_31_groups_0, pad = q_31_pad_0, pad_type = q_31_pad_type_0, strides = q_31_strides_0, weight = var_3714_weight_0_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("op_3714_cast_fp16")];
            tensor<string, []> k_31_pad_type_0 = const()[name = tensor<string, []>("k_31_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_31_strides_0 = const()[name = tensor<string, []>("k_31_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_31_pad_0 = const()[name = tensor<string, []>("k_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_31_dilations_0 = const()[name = tensor<string, []>("k_31_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_31_groups_0 = const()[name = tensor<string, []>("k_31_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_15_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(389833408)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_31_cast_fp16 = conv(dilations = k_31_dilations_0, groups = k_31_groups_0, pad = k_31_pad_0, pad_type = k_31_pad_type_0, strides = k_31_strides_0, weight = blocks_15_attn_key_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("k_31_cast_fp16")];
            tensor<string, []> var_3712_pad_type_0 = const()[name = tensor<string, []>("op_3712_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3712_strides_0 = const()[name = tensor<string, []>("op_3712_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3712_pad_0 = const()[name = tensor<string, []>("op_3712_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3712_dilations_0 = const()[name = tensor<string, []>("op_3712_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3712_groups_0 = const()[name = tensor<string, []>("op_3712_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_15_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(391930624)))];
            tensor<fp16, [1024]> blocks_15_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(394027840)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3712_cast_fp16 = conv(bias = blocks_15_attn_value_bias_to_fp16, dilations = var_3712_dilations_0, groups = var_3712_groups_0, pad = var_3712_pad_0, pad_type = var_3712_pad_type_0, strides = var_3712_strides_0, weight = blocks_15_attn_value_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("op_3712_cast_fp16")];
            tensor<int32, [16]> tile_45 = const()[name = tensor<string, []>("tile_45"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3715_axis_0 = const()[name = tensor<string, []>("op_3715_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3715_cast_fp16_15 = split(axis = var_3715_axis_0, split_sizes = tile_45, x = var_3714_cast_fp16)[name = tensor<string, []>("op_3715_cast_fp16")];
            tensor<int32, [4]> var_3732_perm_0 = const()[name = tensor<string, []>("op_3732_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_46 = const()[name = tensor<string, []>("tile_46"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3733_axis_0 = const()[name = tensor<string, []>("op_3733_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_3732_cast_fp16 = transpose(perm = var_3732_perm_0, x = k_31_cast_fp16)[name = tensor<string, []>("transpose_9")];
            tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_3733_cast_fp16_15 = split(axis = var_3733_axis_0, split_sizes = tile_46, x = var_3732_cast_fp16)[name = tensor<string, []>("op_3733_cast_fp16")];
            tensor<int32, [16]> tile_47 = const()[name = tensor<string, []>("tile_47"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3750_axis_0 = const()[name = tensor<string, []>("op_3750_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3750_cast_fp16_15 = split(axis = var_3750_axis_0, split_sizes = tile_47, x = var_3712_cast_fp16)[name = tensor<string, []>("op_3750_cast_fp16")];
            tensor<string, []> aw_481_equation_0 = const()[name = tensor<string, []>("aw_481_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_481_cast_fp16 = einsum(equation = aw_481_equation_0, values = (var_3733_cast_fp16_0, var_3715_cast_fp16_0))[name = tensor<string, []>("aw_481_cast_fp16")];
            tensor<string, []> aw_483_equation_0 = const()[name = tensor<string, []>("aw_483_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_483_cast_fp16 = einsum(equation = aw_483_equation_0, values = (var_3733_cast_fp16_1, var_3715_cast_fp16_1))[name = tensor<string, []>("aw_483_cast_fp16")];
            tensor<string, []> aw_485_equation_0 = const()[name = tensor<string, []>("aw_485_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_485_cast_fp16 = einsum(equation = aw_485_equation_0, values = (var_3733_cast_fp16_2, var_3715_cast_fp16_2))[name = tensor<string, []>("aw_485_cast_fp16")];
            tensor<string, []> aw_487_equation_0 = const()[name = tensor<string, []>("aw_487_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_487_cast_fp16 = einsum(equation = aw_487_equation_0, values = (var_3733_cast_fp16_3, var_3715_cast_fp16_3))[name = tensor<string, []>("aw_487_cast_fp16")];
            tensor<string, []> aw_489_equation_0 = const()[name = tensor<string, []>("aw_489_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_489_cast_fp16 = einsum(equation = aw_489_equation_0, values = (var_3733_cast_fp16_4, var_3715_cast_fp16_4))[name = tensor<string, []>("aw_489_cast_fp16")];
            tensor<string, []> aw_491_equation_0 = const()[name = tensor<string, []>("aw_491_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_491_cast_fp16 = einsum(equation = aw_491_equation_0, values = (var_3733_cast_fp16_5, var_3715_cast_fp16_5))[name = tensor<string, []>("aw_491_cast_fp16")];
            tensor<string, []> aw_493_equation_0 = const()[name = tensor<string, []>("aw_493_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_493_cast_fp16 = einsum(equation = aw_493_equation_0, values = (var_3733_cast_fp16_6, var_3715_cast_fp16_6))[name = tensor<string, []>("aw_493_cast_fp16")];
            tensor<string, []> aw_495_equation_0 = const()[name = tensor<string, []>("aw_495_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_495_cast_fp16 = einsum(equation = aw_495_equation_0, values = (var_3733_cast_fp16_7, var_3715_cast_fp16_7))[name = tensor<string, []>("aw_495_cast_fp16")];
            tensor<string, []> aw_497_equation_0 = const()[name = tensor<string, []>("aw_497_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_497_cast_fp16 = einsum(equation = aw_497_equation_0, values = (var_3733_cast_fp16_8, var_3715_cast_fp16_8))[name = tensor<string, []>("aw_497_cast_fp16")];
            tensor<string, []> aw_499_equation_0 = const()[name = tensor<string, []>("aw_499_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_499_cast_fp16 = einsum(equation = aw_499_equation_0, values = (var_3733_cast_fp16_9, var_3715_cast_fp16_9))[name = tensor<string, []>("aw_499_cast_fp16")];
            tensor<string, []> aw_501_equation_0 = const()[name = tensor<string, []>("aw_501_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_501_cast_fp16 = einsum(equation = aw_501_equation_0, values = (var_3733_cast_fp16_10, var_3715_cast_fp16_10))[name = tensor<string, []>("aw_501_cast_fp16")];
            tensor<string, []> aw_503_equation_0 = const()[name = tensor<string, []>("aw_503_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_503_cast_fp16 = einsum(equation = aw_503_equation_0, values = (var_3733_cast_fp16_11, var_3715_cast_fp16_11))[name = tensor<string, []>("aw_503_cast_fp16")];
            tensor<string, []> aw_505_equation_0 = const()[name = tensor<string, []>("aw_505_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_505_cast_fp16 = einsum(equation = aw_505_equation_0, values = (var_3733_cast_fp16_12, var_3715_cast_fp16_12))[name = tensor<string, []>("aw_505_cast_fp16")];
            tensor<string, []> aw_507_equation_0 = const()[name = tensor<string, []>("aw_507_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_507_cast_fp16 = einsum(equation = aw_507_equation_0, values = (var_3733_cast_fp16_13, var_3715_cast_fp16_13))[name = tensor<string, []>("aw_507_cast_fp16")];
            tensor<string, []> aw_509_equation_0 = const()[name = tensor<string, []>("aw_509_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_509_cast_fp16 = einsum(equation = aw_509_equation_0, values = (var_3733_cast_fp16_14, var_3715_cast_fp16_14))[name = tensor<string, []>("aw_509_cast_fp16")];
            tensor<string, []> aw_511_equation_0 = const()[name = tensor<string, []>("aw_511_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_511_cast_fp16 = einsum(equation = aw_511_equation_0, values = (var_3733_cast_fp16_15, var_3715_cast_fp16_15))[name = tensor<string, []>("aw_511_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3799_cast_fp16 = softmax(axis = var_3663, x = aw_481_cast_fp16)[name = tensor<string, []>("op_3799_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3800_cast_fp16 = softmax(axis = var_3663, x = aw_483_cast_fp16)[name = tensor<string, []>("op_3800_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3801_cast_fp16 = softmax(axis = var_3663, x = aw_485_cast_fp16)[name = tensor<string, []>("op_3801_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3802_cast_fp16 = softmax(axis = var_3663, x = aw_487_cast_fp16)[name = tensor<string, []>("op_3802_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3803_cast_fp16 = softmax(axis = var_3663, x = aw_489_cast_fp16)[name = tensor<string, []>("op_3803_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3804_cast_fp16 = softmax(axis = var_3663, x = aw_491_cast_fp16)[name = tensor<string, []>("op_3804_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3805_cast_fp16 = softmax(axis = var_3663, x = aw_493_cast_fp16)[name = tensor<string, []>("op_3805_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3806_cast_fp16 = softmax(axis = var_3663, x = aw_495_cast_fp16)[name = tensor<string, []>("op_3806_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3807_cast_fp16 = softmax(axis = var_3663, x = aw_497_cast_fp16)[name = tensor<string, []>("op_3807_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3808_cast_fp16 = softmax(axis = var_3663, x = aw_499_cast_fp16)[name = tensor<string, []>("op_3808_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3809_cast_fp16 = softmax(axis = var_3663, x = aw_501_cast_fp16)[name = tensor<string, []>("op_3809_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3810_cast_fp16 = softmax(axis = var_3663, x = aw_503_cast_fp16)[name = tensor<string, []>("op_3810_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3811_cast_fp16 = softmax(axis = var_3663, x = aw_505_cast_fp16)[name = tensor<string, []>("op_3811_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3812_cast_fp16 = softmax(axis = var_3663, x = aw_507_cast_fp16)[name = tensor<string, []>("op_3812_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3813_cast_fp16 = softmax(axis = var_3663, x = aw_509_cast_fp16)[name = tensor<string, []>("op_3813_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_3814_cast_fp16 = softmax(axis = var_3663, x = aw_511_cast_fp16)[name = tensor<string, []>("op_3814_cast_fp16")];
            tensor<string, []> var_3816_equation_0 = const()[name = tensor<string, []>("op_3816_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3816_cast_fp16 = einsum(equation = var_3816_equation_0, values = (var_3750_cast_fp16_0, var_3799_cast_fp16))[name = tensor<string, []>("op_3816_cast_fp16")];
            tensor<string, []> var_3818_equation_0 = const()[name = tensor<string, []>("op_3818_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3818_cast_fp16 = einsum(equation = var_3818_equation_0, values = (var_3750_cast_fp16_1, var_3800_cast_fp16))[name = tensor<string, []>("op_3818_cast_fp16")];
            tensor<string, []> var_3820_equation_0 = const()[name = tensor<string, []>("op_3820_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3820_cast_fp16 = einsum(equation = var_3820_equation_0, values = (var_3750_cast_fp16_2, var_3801_cast_fp16))[name = tensor<string, []>("op_3820_cast_fp16")];
            tensor<string, []> var_3822_equation_0 = const()[name = tensor<string, []>("op_3822_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3822_cast_fp16 = einsum(equation = var_3822_equation_0, values = (var_3750_cast_fp16_3, var_3802_cast_fp16))[name = tensor<string, []>("op_3822_cast_fp16")];
            tensor<string, []> var_3824_equation_0 = const()[name = tensor<string, []>("op_3824_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3824_cast_fp16 = einsum(equation = var_3824_equation_0, values = (var_3750_cast_fp16_4, var_3803_cast_fp16))[name = tensor<string, []>("op_3824_cast_fp16")];
            tensor<string, []> var_3826_equation_0 = const()[name = tensor<string, []>("op_3826_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3826_cast_fp16 = einsum(equation = var_3826_equation_0, values = (var_3750_cast_fp16_5, var_3804_cast_fp16))[name = tensor<string, []>("op_3826_cast_fp16")];
            tensor<string, []> var_3828_equation_0 = const()[name = tensor<string, []>("op_3828_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3828_cast_fp16 = einsum(equation = var_3828_equation_0, values = (var_3750_cast_fp16_6, var_3805_cast_fp16))[name = tensor<string, []>("op_3828_cast_fp16")];
            tensor<string, []> var_3830_equation_0 = const()[name = tensor<string, []>("op_3830_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3830_cast_fp16 = einsum(equation = var_3830_equation_0, values = (var_3750_cast_fp16_7, var_3806_cast_fp16))[name = tensor<string, []>("op_3830_cast_fp16")];
            tensor<string, []> var_3832_equation_0 = const()[name = tensor<string, []>("op_3832_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3832_cast_fp16 = einsum(equation = var_3832_equation_0, values = (var_3750_cast_fp16_8, var_3807_cast_fp16))[name = tensor<string, []>("op_3832_cast_fp16")];
            tensor<string, []> var_3834_equation_0 = const()[name = tensor<string, []>("op_3834_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3834_cast_fp16 = einsum(equation = var_3834_equation_0, values = (var_3750_cast_fp16_9, var_3808_cast_fp16))[name = tensor<string, []>("op_3834_cast_fp16")];
            tensor<string, []> var_3836_equation_0 = const()[name = tensor<string, []>("op_3836_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3836_cast_fp16 = einsum(equation = var_3836_equation_0, values = (var_3750_cast_fp16_10, var_3809_cast_fp16))[name = tensor<string, []>("op_3836_cast_fp16")];
            tensor<string, []> var_3838_equation_0 = const()[name = tensor<string, []>("op_3838_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3838_cast_fp16 = einsum(equation = var_3838_equation_0, values = (var_3750_cast_fp16_11, var_3810_cast_fp16))[name = tensor<string, []>("op_3838_cast_fp16")];
            tensor<string, []> var_3840_equation_0 = const()[name = tensor<string, []>("op_3840_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3840_cast_fp16 = einsum(equation = var_3840_equation_0, values = (var_3750_cast_fp16_12, var_3811_cast_fp16))[name = tensor<string, []>("op_3840_cast_fp16")];
            tensor<string, []> var_3842_equation_0 = const()[name = tensor<string, []>("op_3842_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3842_cast_fp16 = einsum(equation = var_3842_equation_0, values = (var_3750_cast_fp16_13, var_3812_cast_fp16))[name = tensor<string, []>("op_3842_cast_fp16")];
            tensor<string, []> var_3844_equation_0 = const()[name = tensor<string, []>("op_3844_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3844_cast_fp16 = einsum(equation = var_3844_equation_0, values = (var_3750_cast_fp16_14, var_3813_cast_fp16))[name = tensor<string, []>("op_3844_cast_fp16")];
            tensor<string, []> var_3846_equation_0 = const()[name = tensor<string, []>("op_3846_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_3846_cast_fp16 = einsum(equation = var_3846_equation_0, values = (var_3750_cast_fp16_15, var_3814_cast_fp16))[name = tensor<string, []>("op_3846_cast_fp16")];
            tensor<bool, []> input_155_interleave_0 = const()[name = tensor<string, []>("input_155_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_155_cast_fp16 = concat(axis = var_3663, interleave = input_155_interleave_0, values = (var_3816_cast_fp16, var_3818_cast_fp16, var_3820_cast_fp16, var_3822_cast_fp16, var_3824_cast_fp16, var_3826_cast_fp16, var_3828_cast_fp16, var_3830_cast_fp16, var_3832_cast_fp16, var_3834_cast_fp16, var_3836_cast_fp16, var_3838_cast_fp16, var_3840_cast_fp16, var_3842_cast_fp16, var_3844_cast_fp16, var_3846_cast_fp16))[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<string, []> var_3855_pad_type_0 = const()[name = tensor<string, []>("op_3855_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3855_strides_0 = const()[name = tensor<string, []>("op_3855_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3855_pad_0 = const()[name = tensor<string, []>("op_3855_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3855_dilations_0 = const()[name = tensor<string, []>("op_3855_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3855_groups_0 = const()[name = tensor<string, []>("op_3855_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_15_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(394029952)))];
            tensor<fp16, [1024]> blocks_15_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_15_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(396127168)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3855_cast_fp16 = conv(bias = blocks_15_attn_out_bias_to_fp16, dilations = var_3855_dilations_0, groups = var_3855_groups_0, pad = var_3855_pad_0, pad_type = var_3855_pad_type_0, strides = var_3855_strides_0, weight = blocks_15_attn_out_weight_to_fp16, x = input_155_cast_fp16)[name = tensor<string, []>("op_3855_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_63_cast_fp16 = add(x = inputs_61_cast_fp16, y = var_3855_cast_fp16)[name = tensor<string, []>("inputs_63_cast_fp16")];
            tensor<int32, [1]> input_157_axes_0 = const()[name = tensor<string, []>("input_157_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_157_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_157_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(396129280)))];
            tensor<fp16, [1024]> input_157_beta_0_to_fp16 = const()[name = tensor<string, []>("input_157_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(396131392)))];
            tensor<fp16, []> var_3865_to_fp16 = const()[name = tensor<string, []>("op_3865_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_157_cast_fp16 = layer_norm(axes = input_157_axes_0, beta = input_157_beta_0_to_fp16, epsilon = var_3865_to_fp16, gamma = input_157_gamma_0_to_fp16, x = inputs_63_cast_fp16)[name = tensor<string, []>("input_157_cast_fp16")];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_159_strides_0 = const()[name = tensor<string, []>("input_159_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_159_dilations_0 = const()[name = tensor<string, []>("input_159_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_159_groups_0 = const()[name = tensor<string, []>("input_159_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_15_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(396133504)))];
            tensor<fp16, [4096]> blocks_15_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_15_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(404522176)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_159_cast_fp16 = conv(bias = blocks_15_mlp_0_bias_to_fp16, dilations = input_159_dilations_0, groups = input_159_groups_0, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = input_159_strides_0, weight = blocks_15_mlp_0_weight_to_fp16, x = input_157_cast_fp16)[name = tensor<string, []>("input_159_cast_fp16")];
            tensor<string, []> input_161_mode_0 = const()[name = tensor<string, []>("input_161_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_161_cast_fp16 = gelu(mode = input_161_mode_0, x = input_159_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<string, []> var_3891_pad_type_0 = const()[name = tensor<string, []>("op_3891_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3891_strides_0 = const()[name = tensor<string, []>("op_3891_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3891_pad_0 = const()[name = tensor<string, []>("op_3891_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3891_dilations_0 = const()[name = tensor<string, []>("op_3891_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3891_groups_0 = const()[name = tensor<string, []>("op_3891_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_15_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_15_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(404530432)))];
            tensor<fp16, [1024]> blocks_15_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_15_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(412919104)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3891_cast_fp16 = conv(bias = blocks_15_mlp_2_bias_to_fp16, dilations = var_3891_dilations_0, groups = var_3891_groups_0, pad = var_3891_pad_0, pad_type = var_3891_pad_type_0, strides = var_3891_strides_0, weight = blocks_15_mlp_2_weight_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("op_3891_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_65_cast_fp16 = add(x = inputs_63_cast_fp16, y = var_3891_cast_fp16)[name = tensor<string, []>("inputs_65_cast_fp16")];
            tensor<int32, []> var_3900 = const()[name = tensor<string, []>("op_3900"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_163_axes_0 = const()[name = tensor<string, []>("input_163_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_163_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_163_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(412921216)))];
            tensor<fp16, [1024]> input_163_beta_0_to_fp16 = const()[name = tensor<string, []>("input_163_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(412923328)))];
            tensor<fp16, []> var_3916_to_fp16 = const()[name = tensor<string, []>("op_3916_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_163_cast_fp16 = layer_norm(axes = input_163_axes_0, beta = input_163_beta_0_to_fp16, epsilon = var_3916_to_fp16, gamma = input_163_gamma_0_to_fp16, x = inputs_65_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<string, []> q_33_pad_type_0 = const()[name = tensor<string, []>("q_33_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_33_strides_0 = const()[name = tensor<string, []>("q_33_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_33_pad_0 = const()[name = tensor<string, []>("q_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_33_dilations_0 = const()[name = tensor<string, []>("q_33_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_33_groups_0 = const()[name = tensor<string, []>("q_33_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_3951_weight_0_to_fp16 = const()[name = tensor<string, []>("op_3951_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(412925440)))];
            tensor<fp16, [1024]> var_3951_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3951_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(415022656)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3951_cast_fp16 = conv(bias = var_3951_bias_0_to_fp16, dilations = q_33_dilations_0, groups = q_33_groups_0, pad = q_33_pad_0, pad_type = q_33_pad_type_0, strides = q_33_strides_0, weight = var_3951_weight_0_to_fp16, x = input_163_cast_fp16)[name = tensor<string, []>("op_3951_cast_fp16")];
            tensor<string, []> k_33_pad_type_0 = const()[name = tensor<string, []>("k_33_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_33_strides_0 = const()[name = tensor<string, []>("k_33_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_33_pad_0 = const()[name = tensor<string, []>("k_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_33_dilations_0 = const()[name = tensor<string, []>("k_33_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_33_groups_0 = const()[name = tensor<string, []>("k_33_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_16_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(415024768)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_33_cast_fp16 = conv(dilations = k_33_dilations_0, groups = k_33_groups_0, pad = k_33_pad_0, pad_type = k_33_pad_type_0, strides = k_33_strides_0, weight = blocks_16_attn_key_weight_to_fp16, x = input_163_cast_fp16)[name = tensor<string, []>("k_33_cast_fp16")];
            tensor<string, []> var_3949_pad_type_0 = const()[name = tensor<string, []>("op_3949_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_3949_strides_0 = const()[name = tensor<string, []>("op_3949_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_3949_pad_0 = const()[name = tensor<string, []>("op_3949_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_3949_dilations_0 = const()[name = tensor<string, []>("op_3949_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_3949_groups_0 = const()[name = tensor<string, []>("op_3949_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_16_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417121984)))];
            tensor<fp16, [1024]> blocks_16_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(419219200)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_3949_cast_fp16 = conv(bias = blocks_16_attn_value_bias_to_fp16, dilations = var_3949_dilations_0, groups = var_3949_groups_0, pad = var_3949_pad_0, pad_type = var_3949_pad_type_0, strides = var_3949_strides_0, weight = blocks_16_attn_value_weight_to_fp16, x = input_163_cast_fp16)[name = tensor<string, []>("op_3949_cast_fp16")];
            tensor<int32, [16]> tile_48 = const()[name = tensor<string, []>("tile_48"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3952_axis_0 = const()[name = tensor<string, []>("op_3952_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3952_cast_fp16_15 = split(axis = var_3952_axis_0, split_sizes = tile_48, x = var_3951_cast_fp16)[name = tensor<string, []>("op_3952_cast_fp16")];
            tensor<int32, [4]> var_3969_perm_0 = const()[name = tensor<string, []>("op_3969_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_49 = const()[name = tensor<string, []>("tile_49"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3970_axis_0 = const()[name = tensor<string, []>("op_3970_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_3969_cast_fp16 = transpose(perm = var_3969_perm_0, x = k_33_cast_fp16)[name = tensor<string, []>("transpose_8")];
            tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_3970_cast_fp16_15 = split(axis = var_3970_axis_0, split_sizes = tile_49, x = var_3969_cast_fp16)[name = tensor<string, []>("op_3970_cast_fp16")];
            tensor<int32, [16]> tile_50 = const()[name = tensor<string, []>("tile_50"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3987_axis_0 = const()[name = tensor<string, []>("op_3987_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_3987_cast_fp16_15 = split(axis = var_3987_axis_0, split_sizes = tile_50, x = var_3949_cast_fp16)[name = tensor<string, []>("op_3987_cast_fp16")];
            tensor<string, []> aw_513_equation_0 = const()[name = tensor<string, []>("aw_513_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_513_cast_fp16 = einsum(equation = aw_513_equation_0, values = (var_3970_cast_fp16_0, var_3952_cast_fp16_0))[name = tensor<string, []>("aw_513_cast_fp16")];
            tensor<string, []> aw_515_equation_0 = const()[name = tensor<string, []>("aw_515_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_515_cast_fp16 = einsum(equation = aw_515_equation_0, values = (var_3970_cast_fp16_1, var_3952_cast_fp16_1))[name = tensor<string, []>("aw_515_cast_fp16")];
            tensor<string, []> aw_517_equation_0 = const()[name = tensor<string, []>("aw_517_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_517_cast_fp16 = einsum(equation = aw_517_equation_0, values = (var_3970_cast_fp16_2, var_3952_cast_fp16_2))[name = tensor<string, []>("aw_517_cast_fp16")];
            tensor<string, []> aw_519_equation_0 = const()[name = tensor<string, []>("aw_519_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_519_cast_fp16 = einsum(equation = aw_519_equation_0, values = (var_3970_cast_fp16_3, var_3952_cast_fp16_3))[name = tensor<string, []>("aw_519_cast_fp16")];
            tensor<string, []> aw_521_equation_0 = const()[name = tensor<string, []>("aw_521_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_521_cast_fp16 = einsum(equation = aw_521_equation_0, values = (var_3970_cast_fp16_4, var_3952_cast_fp16_4))[name = tensor<string, []>("aw_521_cast_fp16")];
            tensor<string, []> aw_523_equation_0 = const()[name = tensor<string, []>("aw_523_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_523_cast_fp16 = einsum(equation = aw_523_equation_0, values = (var_3970_cast_fp16_5, var_3952_cast_fp16_5))[name = tensor<string, []>("aw_523_cast_fp16")];
            tensor<string, []> aw_525_equation_0 = const()[name = tensor<string, []>("aw_525_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_525_cast_fp16 = einsum(equation = aw_525_equation_0, values = (var_3970_cast_fp16_6, var_3952_cast_fp16_6))[name = tensor<string, []>("aw_525_cast_fp16")];
            tensor<string, []> aw_527_equation_0 = const()[name = tensor<string, []>("aw_527_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_527_cast_fp16 = einsum(equation = aw_527_equation_0, values = (var_3970_cast_fp16_7, var_3952_cast_fp16_7))[name = tensor<string, []>("aw_527_cast_fp16")];
            tensor<string, []> aw_529_equation_0 = const()[name = tensor<string, []>("aw_529_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_529_cast_fp16 = einsum(equation = aw_529_equation_0, values = (var_3970_cast_fp16_8, var_3952_cast_fp16_8))[name = tensor<string, []>("aw_529_cast_fp16")];
            tensor<string, []> aw_531_equation_0 = const()[name = tensor<string, []>("aw_531_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_531_cast_fp16 = einsum(equation = aw_531_equation_0, values = (var_3970_cast_fp16_9, var_3952_cast_fp16_9))[name = tensor<string, []>("aw_531_cast_fp16")];
            tensor<string, []> aw_533_equation_0 = const()[name = tensor<string, []>("aw_533_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_533_cast_fp16 = einsum(equation = aw_533_equation_0, values = (var_3970_cast_fp16_10, var_3952_cast_fp16_10))[name = tensor<string, []>("aw_533_cast_fp16")];
            tensor<string, []> aw_535_equation_0 = const()[name = tensor<string, []>("aw_535_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_535_cast_fp16 = einsum(equation = aw_535_equation_0, values = (var_3970_cast_fp16_11, var_3952_cast_fp16_11))[name = tensor<string, []>("aw_535_cast_fp16")];
            tensor<string, []> aw_537_equation_0 = const()[name = tensor<string, []>("aw_537_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_537_cast_fp16 = einsum(equation = aw_537_equation_0, values = (var_3970_cast_fp16_12, var_3952_cast_fp16_12))[name = tensor<string, []>("aw_537_cast_fp16")];
            tensor<string, []> aw_539_equation_0 = const()[name = tensor<string, []>("aw_539_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_539_cast_fp16 = einsum(equation = aw_539_equation_0, values = (var_3970_cast_fp16_13, var_3952_cast_fp16_13))[name = tensor<string, []>("aw_539_cast_fp16")];
            tensor<string, []> aw_541_equation_0 = const()[name = tensor<string, []>("aw_541_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_541_cast_fp16 = einsum(equation = aw_541_equation_0, values = (var_3970_cast_fp16_14, var_3952_cast_fp16_14))[name = tensor<string, []>("aw_541_cast_fp16")];
            tensor<string, []> aw_543_equation_0 = const()[name = tensor<string, []>("aw_543_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_543_cast_fp16 = einsum(equation = aw_543_equation_0, values = (var_3970_cast_fp16_15, var_3952_cast_fp16_15))[name = tensor<string, []>("aw_543_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4036_cast_fp16 = softmax(axis = var_3900, x = aw_513_cast_fp16)[name = tensor<string, []>("op_4036_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4037_cast_fp16 = softmax(axis = var_3900, x = aw_515_cast_fp16)[name = tensor<string, []>("op_4037_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4038_cast_fp16 = softmax(axis = var_3900, x = aw_517_cast_fp16)[name = tensor<string, []>("op_4038_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4039_cast_fp16 = softmax(axis = var_3900, x = aw_519_cast_fp16)[name = tensor<string, []>("op_4039_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4040_cast_fp16 = softmax(axis = var_3900, x = aw_521_cast_fp16)[name = tensor<string, []>("op_4040_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4041_cast_fp16 = softmax(axis = var_3900, x = aw_523_cast_fp16)[name = tensor<string, []>("op_4041_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4042_cast_fp16 = softmax(axis = var_3900, x = aw_525_cast_fp16)[name = tensor<string, []>("op_4042_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4043_cast_fp16 = softmax(axis = var_3900, x = aw_527_cast_fp16)[name = tensor<string, []>("op_4043_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4044_cast_fp16 = softmax(axis = var_3900, x = aw_529_cast_fp16)[name = tensor<string, []>("op_4044_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4045_cast_fp16 = softmax(axis = var_3900, x = aw_531_cast_fp16)[name = tensor<string, []>("op_4045_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4046_cast_fp16 = softmax(axis = var_3900, x = aw_533_cast_fp16)[name = tensor<string, []>("op_4046_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4047_cast_fp16 = softmax(axis = var_3900, x = aw_535_cast_fp16)[name = tensor<string, []>("op_4047_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4048_cast_fp16 = softmax(axis = var_3900, x = aw_537_cast_fp16)[name = tensor<string, []>("op_4048_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4049_cast_fp16 = softmax(axis = var_3900, x = aw_539_cast_fp16)[name = tensor<string, []>("op_4049_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4050_cast_fp16 = softmax(axis = var_3900, x = aw_541_cast_fp16)[name = tensor<string, []>("op_4050_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4051_cast_fp16 = softmax(axis = var_3900, x = aw_543_cast_fp16)[name = tensor<string, []>("op_4051_cast_fp16")];
            tensor<string, []> var_4053_equation_0 = const()[name = tensor<string, []>("op_4053_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4053_cast_fp16 = einsum(equation = var_4053_equation_0, values = (var_3987_cast_fp16_0, var_4036_cast_fp16))[name = tensor<string, []>("op_4053_cast_fp16")];
            tensor<string, []> var_4055_equation_0 = const()[name = tensor<string, []>("op_4055_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4055_cast_fp16 = einsum(equation = var_4055_equation_0, values = (var_3987_cast_fp16_1, var_4037_cast_fp16))[name = tensor<string, []>("op_4055_cast_fp16")];
            tensor<string, []> var_4057_equation_0 = const()[name = tensor<string, []>("op_4057_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4057_cast_fp16 = einsum(equation = var_4057_equation_0, values = (var_3987_cast_fp16_2, var_4038_cast_fp16))[name = tensor<string, []>("op_4057_cast_fp16")];
            tensor<string, []> var_4059_equation_0 = const()[name = tensor<string, []>("op_4059_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4059_cast_fp16 = einsum(equation = var_4059_equation_0, values = (var_3987_cast_fp16_3, var_4039_cast_fp16))[name = tensor<string, []>("op_4059_cast_fp16")];
            tensor<string, []> var_4061_equation_0 = const()[name = tensor<string, []>("op_4061_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4061_cast_fp16 = einsum(equation = var_4061_equation_0, values = (var_3987_cast_fp16_4, var_4040_cast_fp16))[name = tensor<string, []>("op_4061_cast_fp16")];
            tensor<string, []> var_4063_equation_0 = const()[name = tensor<string, []>("op_4063_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4063_cast_fp16 = einsum(equation = var_4063_equation_0, values = (var_3987_cast_fp16_5, var_4041_cast_fp16))[name = tensor<string, []>("op_4063_cast_fp16")];
            tensor<string, []> var_4065_equation_0 = const()[name = tensor<string, []>("op_4065_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4065_cast_fp16 = einsum(equation = var_4065_equation_0, values = (var_3987_cast_fp16_6, var_4042_cast_fp16))[name = tensor<string, []>("op_4065_cast_fp16")];
            tensor<string, []> var_4067_equation_0 = const()[name = tensor<string, []>("op_4067_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4067_cast_fp16 = einsum(equation = var_4067_equation_0, values = (var_3987_cast_fp16_7, var_4043_cast_fp16))[name = tensor<string, []>("op_4067_cast_fp16")];
            tensor<string, []> var_4069_equation_0 = const()[name = tensor<string, []>("op_4069_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4069_cast_fp16 = einsum(equation = var_4069_equation_0, values = (var_3987_cast_fp16_8, var_4044_cast_fp16))[name = tensor<string, []>("op_4069_cast_fp16")];
            tensor<string, []> var_4071_equation_0 = const()[name = tensor<string, []>("op_4071_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4071_cast_fp16 = einsum(equation = var_4071_equation_0, values = (var_3987_cast_fp16_9, var_4045_cast_fp16))[name = tensor<string, []>("op_4071_cast_fp16")];
            tensor<string, []> var_4073_equation_0 = const()[name = tensor<string, []>("op_4073_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4073_cast_fp16 = einsum(equation = var_4073_equation_0, values = (var_3987_cast_fp16_10, var_4046_cast_fp16))[name = tensor<string, []>("op_4073_cast_fp16")];
            tensor<string, []> var_4075_equation_0 = const()[name = tensor<string, []>("op_4075_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4075_cast_fp16 = einsum(equation = var_4075_equation_0, values = (var_3987_cast_fp16_11, var_4047_cast_fp16))[name = tensor<string, []>("op_4075_cast_fp16")];
            tensor<string, []> var_4077_equation_0 = const()[name = tensor<string, []>("op_4077_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4077_cast_fp16 = einsum(equation = var_4077_equation_0, values = (var_3987_cast_fp16_12, var_4048_cast_fp16))[name = tensor<string, []>("op_4077_cast_fp16")];
            tensor<string, []> var_4079_equation_0 = const()[name = tensor<string, []>("op_4079_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4079_cast_fp16 = einsum(equation = var_4079_equation_0, values = (var_3987_cast_fp16_13, var_4049_cast_fp16))[name = tensor<string, []>("op_4079_cast_fp16")];
            tensor<string, []> var_4081_equation_0 = const()[name = tensor<string, []>("op_4081_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4081_cast_fp16 = einsum(equation = var_4081_equation_0, values = (var_3987_cast_fp16_14, var_4050_cast_fp16))[name = tensor<string, []>("op_4081_cast_fp16")];
            tensor<string, []> var_4083_equation_0 = const()[name = tensor<string, []>("op_4083_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4083_cast_fp16 = einsum(equation = var_4083_equation_0, values = (var_3987_cast_fp16_15, var_4051_cast_fp16))[name = tensor<string, []>("op_4083_cast_fp16")];
            tensor<bool, []> input_165_interleave_0 = const()[name = tensor<string, []>("input_165_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_165_cast_fp16 = concat(axis = var_3900, interleave = input_165_interleave_0, values = (var_4053_cast_fp16, var_4055_cast_fp16, var_4057_cast_fp16, var_4059_cast_fp16, var_4061_cast_fp16, var_4063_cast_fp16, var_4065_cast_fp16, var_4067_cast_fp16, var_4069_cast_fp16, var_4071_cast_fp16, var_4073_cast_fp16, var_4075_cast_fp16, var_4077_cast_fp16, var_4079_cast_fp16, var_4081_cast_fp16, var_4083_cast_fp16))[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<string, []> var_4092_pad_type_0 = const()[name = tensor<string, []>("op_4092_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4092_strides_0 = const()[name = tensor<string, []>("op_4092_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4092_pad_0 = const()[name = tensor<string, []>("op_4092_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4092_dilations_0 = const()[name = tensor<string, []>("op_4092_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4092_groups_0 = const()[name = tensor<string, []>("op_4092_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_16_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(419221312)))];
            tensor<fp16, [1024]> blocks_16_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_16_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(421318528)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4092_cast_fp16 = conv(bias = blocks_16_attn_out_bias_to_fp16, dilations = var_4092_dilations_0, groups = var_4092_groups_0, pad = var_4092_pad_0, pad_type = var_4092_pad_type_0, strides = var_4092_strides_0, weight = blocks_16_attn_out_weight_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("op_4092_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_67_cast_fp16 = add(x = inputs_65_cast_fp16, y = var_4092_cast_fp16)[name = tensor<string, []>("inputs_67_cast_fp16")];
            tensor<int32, [1]> input_167_axes_0 = const()[name = tensor<string, []>("input_167_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_167_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_167_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(421320640)))];
            tensor<fp16, [1024]> input_167_beta_0_to_fp16 = const()[name = tensor<string, []>("input_167_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(421322752)))];
            tensor<fp16, []> var_4102_to_fp16 = const()[name = tensor<string, []>("op_4102_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_167_cast_fp16 = layer_norm(axes = input_167_axes_0, beta = input_167_beta_0_to_fp16, epsilon = var_4102_to_fp16, gamma = input_167_gamma_0_to_fp16, x = inputs_67_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<string, []> input_169_pad_type_0 = const()[name = tensor<string, []>("input_169_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_169_strides_0 = const()[name = tensor<string, []>("input_169_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_169_pad_0 = const()[name = tensor<string, []>("input_169_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_169_dilations_0 = const()[name = tensor<string, []>("input_169_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_169_groups_0 = const()[name = tensor<string, []>("input_169_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_16_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(421324864)))];
            tensor<fp16, [4096]> blocks_16_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_16_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(429713536)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_169_cast_fp16 = conv(bias = blocks_16_mlp_0_bias_to_fp16, dilations = input_169_dilations_0, groups = input_169_groups_0, pad = input_169_pad_0, pad_type = input_169_pad_type_0, strides = input_169_strides_0, weight = blocks_16_mlp_0_weight_to_fp16, x = input_167_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<string, []> input_171_mode_0 = const()[name = tensor<string, []>("input_171_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_171_cast_fp16 = gelu(mode = input_171_mode_0, x = input_169_cast_fp16)[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<string, []> var_4128_pad_type_0 = const()[name = tensor<string, []>("op_4128_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4128_strides_0 = const()[name = tensor<string, []>("op_4128_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4128_pad_0 = const()[name = tensor<string, []>("op_4128_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4128_dilations_0 = const()[name = tensor<string, []>("op_4128_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4128_groups_0 = const()[name = tensor<string, []>("op_4128_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_16_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_16_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(429721792)))];
            tensor<fp16, [1024]> blocks_16_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_16_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(438110464)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4128_cast_fp16 = conv(bias = blocks_16_mlp_2_bias_to_fp16, dilations = var_4128_dilations_0, groups = var_4128_groups_0, pad = var_4128_pad_0, pad_type = var_4128_pad_type_0, strides = var_4128_strides_0, weight = blocks_16_mlp_2_weight_to_fp16, x = input_171_cast_fp16)[name = tensor<string, []>("op_4128_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_69_cast_fp16 = add(x = inputs_67_cast_fp16, y = var_4128_cast_fp16)[name = tensor<string, []>("inputs_69_cast_fp16")];
            tensor<int32, []> var_4137 = const()[name = tensor<string, []>("op_4137"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_173_axes_0 = const()[name = tensor<string, []>("input_173_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_173_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_173_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(438112576)))];
            tensor<fp16, [1024]> input_173_beta_0_to_fp16 = const()[name = tensor<string, []>("input_173_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(438114688)))];
            tensor<fp16, []> var_4153_to_fp16 = const()[name = tensor<string, []>("op_4153_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_173_cast_fp16 = layer_norm(axes = input_173_axes_0, beta = input_173_beta_0_to_fp16, epsilon = var_4153_to_fp16, gamma = input_173_gamma_0_to_fp16, x = inputs_69_cast_fp16)[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<string, []> q_35_pad_type_0 = const()[name = tensor<string, []>("q_35_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_35_strides_0 = const()[name = tensor<string, []>("q_35_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_35_pad_0 = const()[name = tensor<string, []>("q_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_35_dilations_0 = const()[name = tensor<string, []>("q_35_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_35_groups_0 = const()[name = tensor<string, []>("q_35_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_4188_weight_0_to_fp16 = const()[name = tensor<string, []>("op_4188_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(438116800)))];
            tensor<fp16, [1024]> var_4188_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4188_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(440214016)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4188_cast_fp16 = conv(bias = var_4188_bias_0_to_fp16, dilations = q_35_dilations_0, groups = q_35_groups_0, pad = q_35_pad_0, pad_type = q_35_pad_type_0, strides = q_35_strides_0, weight = var_4188_weight_0_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("op_4188_cast_fp16")];
            tensor<string, []> k_35_pad_type_0 = const()[name = tensor<string, []>("k_35_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_35_strides_0 = const()[name = tensor<string, []>("k_35_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_35_pad_0 = const()[name = tensor<string, []>("k_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_35_dilations_0 = const()[name = tensor<string, []>("k_35_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_35_groups_0 = const()[name = tensor<string, []>("k_35_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_17_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(440216128)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_35_cast_fp16 = conv(dilations = k_35_dilations_0, groups = k_35_groups_0, pad = k_35_pad_0, pad_type = k_35_pad_type_0, strides = k_35_strides_0, weight = blocks_17_attn_key_weight_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("k_35_cast_fp16")];
            tensor<string, []> var_4186_pad_type_0 = const()[name = tensor<string, []>("op_4186_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4186_strides_0 = const()[name = tensor<string, []>("op_4186_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4186_pad_0 = const()[name = tensor<string, []>("op_4186_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4186_dilations_0 = const()[name = tensor<string, []>("op_4186_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4186_groups_0 = const()[name = tensor<string, []>("op_4186_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_17_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(442313344)))];
            tensor<fp16, [1024]> blocks_17_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(444410560)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4186_cast_fp16 = conv(bias = blocks_17_attn_value_bias_to_fp16, dilations = var_4186_dilations_0, groups = var_4186_groups_0, pad = var_4186_pad_0, pad_type = var_4186_pad_type_0, strides = var_4186_strides_0, weight = blocks_17_attn_value_weight_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("op_4186_cast_fp16")];
            tensor<int32, [16]> tile_51 = const()[name = tensor<string, []>("tile_51"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4189_axis_0 = const()[name = tensor<string, []>("op_4189_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4189_cast_fp16_15 = split(axis = var_4189_axis_0, split_sizes = tile_51, x = var_4188_cast_fp16)[name = tensor<string, []>("op_4189_cast_fp16")];
            tensor<int32, [4]> var_4206_perm_0 = const()[name = tensor<string, []>("op_4206_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_52 = const()[name = tensor<string, []>("tile_52"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4207_axis_0 = const()[name = tensor<string, []>("op_4207_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_4206_cast_fp16 = transpose(perm = var_4206_perm_0, x = k_35_cast_fp16)[name = tensor<string, []>("transpose_7")];
            tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_4207_cast_fp16_15 = split(axis = var_4207_axis_0, split_sizes = tile_52, x = var_4206_cast_fp16)[name = tensor<string, []>("op_4207_cast_fp16")];
            tensor<int32, [16]> tile_53 = const()[name = tensor<string, []>("tile_53"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4224_axis_0 = const()[name = tensor<string, []>("op_4224_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4224_cast_fp16_15 = split(axis = var_4224_axis_0, split_sizes = tile_53, x = var_4186_cast_fp16)[name = tensor<string, []>("op_4224_cast_fp16")];
            tensor<string, []> aw_545_equation_0 = const()[name = tensor<string, []>("aw_545_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_545_cast_fp16 = einsum(equation = aw_545_equation_0, values = (var_4207_cast_fp16_0, var_4189_cast_fp16_0))[name = tensor<string, []>("aw_545_cast_fp16")];
            tensor<string, []> aw_547_equation_0 = const()[name = tensor<string, []>("aw_547_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_547_cast_fp16 = einsum(equation = aw_547_equation_0, values = (var_4207_cast_fp16_1, var_4189_cast_fp16_1))[name = tensor<string, []>("aw_547_cast_fp16")];
            tensor<string, []> aw_549_equation_0 = const()[name = tensor<string, []>("aw_549_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_549_cast_fp16 = einsum(equation = aw_549_equation_0, values = (var_4207_cast_fp16_2, var_4189_cast_fp16_2))[name = tensor<string, []>("aw_549_cast_fp16")];
            tensor<string, []> aw_551_equation_0 = const()[name = tensor<string, []>("aw_551_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_551_cast_fp16 = einsum(equation = aw_551_equation_0, values = (var_4207_cast_fp16_3, var_4189_cast_fp16_3))[name = tensor<string, []>("aw_551_cast_fp16")];
            tensor<string, []> aw_553_equation_0 = const()[name = tensor<string, []>("aw_553_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_553_cast_fp16 = einsum(equation = aw_553_equation_0, values = (var_4207_cast_fp16_4, var_4189_cast_fp16_4))[name = tensor<string, []>("aw_553_cast_fp16")];
            tensor<string, []> aw_555_equation_0 = const()[name = tensor<string, []>("aw_555_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_555_cast_fp16 = einsum(equation = aw_555_equation_0, values = (var_4207_cast_fp16_5, var_4189_cast_fp16_5))[name = tensor<string, []>("aw_555_cast_fp16")];
            tensor<string, []> aw_557_equation_0 = const()[name = tensor<string, []>("aw_557_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_557_cast_fp16 = einsum(equation = aw_557_equation_0, values = (var_4207_cast_fp16_6, var_4189_cast_fp16_6))[name = tensor<string, []>("aw_557_cast_fp16")];
            tensor<string, []> aw_559_equation_0 = const()[name = tensor<string, []>("aw_559_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_559_cast_fp16 = einsum(equation = aw_559_equation_0, values = (var_4207_cast_fp16_7, var_4189_cast_fp16_7))[name = tensor<string, []>("aw_559_cast_fp16")];
            tensor<string, []> aw_561_equation_0 = const()[name = tensor<string, []>("aw_561_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_561_cast_fp16 = einsum(equation = aw_561_equation_0, values = (var_4207_cast_fp16_8, var_4189_cast_fp16_8))[name = tensor<string, []>("aw_561_cast_fp16")];
            tensor<string, []> aw_563_equation_0 = const()[name = tensor<string, []>("aw_563_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_563_cast_fp16 = einsum(equation = aw_563_equation_0, values = (var_4207_cast_fp16_9, var_4189_cast_fp16_9))[name = tensor<string, []>("aw_563_cast_fp16")];
            tensor<string, []> aw_565_equation_0 = const()[name = tensor<string, []>("aw_565_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_565_cast_fp16 = einsum(equation = aw_565_equation_0, values = (var_4207_cast_fp16_10, var_4189_cast_fp16_10))[name = tensor<string, []>("aw_565_cast_fp16")];
            tensor<string, []> aw_567_equation_0 = const()[name = tensor<string, []>("aw_567_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_567_cast_fp16 = einsum(equation = aw_567_equation_0, values = (var_4207_cast_fp16_11, var_4189_cast_fp16_11))[name = tensor<string, []>("aw_567_cast_fp16")];
            tensor<string, []> aw_569_equation_0 = const()[name = tensor<string, []>("aw_569_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_569_cast_fp16 = einsum(equation = aw_569_equation_0, values = (var_4207_cast_fp16_12, var_4189_cast_fp16_12))[name = tensor<string, []>("aw_569_cast_fp16")];
            tensor<string, []> aw_571_equation_0 = const()[name = tensor<string, []>("aw_571_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_571_cast_fp16 = einsum(equation = aw_571_equation_0, values = (var_4207_cast_fp16_13, var_4189_cast_fp16_13))[name = tensor<string, []>("aw_571_cast_fp16")];
            tensor<string, []> aw_573_equation_0 = const()[name = tensor<string, []>("aw_573_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_573_cast_fp16 = einsum(equation = aw_573_equation_0, values = (var_4207_cast_fp16_14, var_4189_cast_fp16_14))[name = tensor<string, []>("aw_573_cast_fp16")];
            tensor<string, []> aw_575_equation_0 = const()[name = tensor<string, []>("aw_575_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_575_cast_fp16 = einsum(equation = aw_575_equation_0, values = (var_4207_cast_fp16_15, var_4189_cast_fp16_15))[name = tensor<string, []>("aw_575_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4273_cast_fp16 = softmax(axis = var_4137, x = aw_545_cast_fp16)[name = tensor<string, []>("op_4273_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4274_cast_fp16 = softmax(axis = var_4137, x = aw_547_cast_fp16)[name = tensor<string, []>("op_4274_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4275_cast_fp16 = softmax(axis = var_4137, x = aw_549_cast_fp16)[name = tensor<string, []>("op_4275_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4276_cast_fp16 = softmax(axis = var_4137, x = aw_551_cast_fp16)[name = tensor<string, []>("op_4276_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4277_cast_fp16 = softmax(axis = var_4137, x = aw_553_cast_fp16)[name = tensor<string, []>("op_4277_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4278_cast_fp16 = softmax(axis = var_4137, x = aw_555_cast_fp16)[name = tensor<string, []>("op_4278_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4279_cast_fp16 = softmax(axis = var_4137, x = aw_557_cast_fp16)[name = tensor<string, []>("op_4279_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4280_cast_fp16 = softmax(axis = var_4137, x = aw_559_cast_fp16)[name = tensor<string, []>("op_4280_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4281_cast_fp16 = softmax(axis = var_4137, x = aw_561_cast_fp16)[name = tensor<string, []>("op_4281_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4282_cast_fp16 = softmax(axis = var_4137, x = aw_563_cast_fp16)[name = tensor<string, []>("op_4282_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4283_cast_fp16 = softmax(axis = var_4137, x = aw_565_cast_fp16)[name = tensor<string, []>("op_4283_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4284_cast_fp16 = softmax(axis = var_4137, x = aw_567_cast_fp16)[name = tensor<string, []>("op_4284_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4285_cast_fp16 = softmax(axis = var_4137, x = aw_569_cast_fp16)[name = tensor<string, []>("op_4285_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4286_cast_fp16 = softmax(axis = var_4137, x = aw_571_cast_fp16)[name = tensor<string, []>("op_4286_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4287_cast_fp16 = softmax(axis = var_4137, x = aw_573_cast_fp16)[name = tensor<string, []>("op_4287_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4288_cast_fp16 = softmax(axis = var_4137, x = aw_575_cast_fp16)[name = tensor<string, []>("op_4288_cast_fp16")];
            tensor<string, []> var_4290_equation_0 = const()[name = tensor<string, []>("op_4290_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4290_cast_fp16 = einsum(equation = var_4290_equation_0, values = (var_4224_cast_fp16_0, var_4273_cast_fp16))[name = tensor<string, []>("op_4290_cast_fp16")];
            tensor<string, []> var_4292_equation_0 = const()[name = tensor<string, []>("op_4292_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4292_cast_fp16 = einsum(equation = var_4292_equation_0, values = (var_4224_cast_fp16_1, var_4274_cast_fp16))[name = tensor<string, []>("op_4292_cast_fp16")];
            tensor<string, []> var_4294_equation_0 = const()[name = tensor<string, []>("op_4294_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4294_cast_fp16 = einsum(equation = var_4294_equation_0, values = (var_4224_cast_fp16_2, var_4275_cast_fp16))[name = tensor<string, []>("op_4294_cast_fp16")];
            tensor<string, []> var_4296_equation_0 = const()[name = tensor<string, []>("op_4296_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4296_cast_fp16 = einsum(equation = var_4296_equation_0, values = (var_4224_cast_fp16_3, var_4276_cast_fp16))[name = tensor<string, []>("op_4296_cast_fp16")];
            tensor<string, []> var_4298_equation_0 = const()[name = tensor<string, []>("op_4298_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4298_cast_fp16 = einsum(equation = var_4298_equation_0, values = (var_4224_cast_fp16_4, var_4277_cast_fp16))[name = tensor<string, []>("op_4298_cast_fp16")];
            tensor<string, []> var_4300_equation_0 = const()[name = tensor<string, []>("op_4300_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4300_cast_fp16 = einsum(equation = var_4300_equation_0, values = (var_4224_cast_fp16_5, var_4278_cast_fp16))[name = tensor<string, []>("op_4300_cast_fp16")];
            tensor<string, []> var_4302_equation_0 = const()[name = tensor<string, []>("op_4302_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4302_cast_fp16 = einsum(equation = var_4302_equation_0, values = (var_4224_cast_fp16_6, var_4279_cast_fp16))[name = tensor<string, []>("op_4302_cast_fp16")];
            tensor<string, []> var_4304_equation_0 = const()[name = tensor<string, []>("op_4304_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4304_cast_fp16 = einsum(equation = var_4304_equation_0, values = (var_4224_cast_fp16_7, var_4280_cast_fp16))[name = tensor<string, []>("op_4304_cast_fp16")];
            tensor<string, []> var_4306_equation_0 = const()[name = tensor<string, []>("op_4306_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4306_cast_fp16 = einsum(equation = var_4306_equation_0, values = (var_4224_cast_fp16_8, var_4281_cast_fp16))[name = tensor<string, []>("op_4306_cast_fp16")];
            tensor<string, []> var_4308_equation_0 = const()[name = tensor<string, []>("op_4308_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4308_cast_fp16 = einsum(equation = var_4308_equation_0, values = (var_4224_cast_fp16_9, var_4282_cast_fp16))[name = tensor<string, []>("op_4308_cast_fp16")];
            tensor<string, []> var_4310_equation_0 = const()[name = tensor<string, []>("op_4310_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4310_cast_fp16 = einsum(equation = var_4310_equation_0, values = (var_4224_cast_fp16_10, var_4283_cast_fp16))[name = tensor<string, []>("op_4310_cast_fp16")];
            tensor<string, []> var_4312_equation_0 = const()[name = tensor<string, []>("op_4312_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4312_cast_fp16 = einsum(equation = var_4312_equation_0, values = (var_4224_cast_fp16_11, var_4284_cast_fp16))[name = tensor<string, []>("op_4312_cast_fp16")];
            tensor<string, []> var_4314_equation_0 = const()[name = tensor<string, []>("op_4314_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4314_cast_fp16 = einsum(equation = var_4314_equation_0, values = (var_4224_cast_fp16_12, var_4285_cast_fp16))[name = tensor<string, []>("op_4314_cast_fp16")];
            tensor<string, []> var_4316_equation_0 = const()[name = tensor<string, []>("op_4316_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4316_cast_fp16 = einsum(equation = var_4316_equation_0, values = (var_4224_cast_fp16_13, var_4286_cast_fp16))[name = tensor<string, []>("op_4316_cast_fp16")];
            tensor<string, []> var_4318_equation_0 = const()[name = tensor<string, []>("op_4318_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4318_cast_fp16 = einsum(equation = var_4318_equation_0, values = (var_4224_cast_fp16_14, var_4287_cast_fp16))[name = tensor<string, []>("op_4318_cast_fp16")];
            tensor<string, []> var_4320_equation_0 = const()[name = tensor<string, []>("op_4320_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4320_cast_fp16 = einsum(equation = var_4320_equation_0, values = (var_4224_cast_fp16_15, var_4288_cast_fp16))[name = tensor<string, []>("op_4320_cast_fp16")];
            tensor<bool, []> input_175_interleave_0 = const()[name = tensor<string, []>("input_175_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_175_cast_fp16 = concat(axis = var_4137, interleave = input_175_interleave_0, values = (var_4290_cast_fp16, var_4292_cast_fp16, var_4294_cast_fp16, var_4296_cast_fp16, var_4298_cast_fp16, var_4300_cast_fp16, var_4302_cast_fp16, var_4304_cast_fp16, var_4306_cast_fp16, var_4308_cast_fp16, var_4310_cast_fp16, var_4312_cast_fp16, var_4314_cast_fp16, var_4316_cast_fp16, var_4318_cast_fp16, var_4320_cast_fp16))[name = tensor<string, []>("input_175_cast_fp16")];
            tensor<string, []> var_4329_pad_type_0 = const()[name = tensor<string, []>("op_4329_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4329_strides_0 = const()[name = tensor<string, []>("op_4329_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4329_pad_0 = const()[name = tensor<string, []>("op_4329_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4329_dilations_0 = const()[name = tensor<string, []>("op_4329_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4329_groups_0 = const()[name = tensor<string, []>("op_4329_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_17_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(444412672)))];
            tensor<fp16, [1024]> blocks_17_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_17_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(446509888)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4329_cast_fp16 = conv(bias = blocks_17_attn_out_bias_to_fp16, dilations = var_4329_dilations_0, groups = var_4329_groups_0, pad = var_4329_pad_0, pad_type = var_4329_pad_type_0, strides = var_4329_strides_0, weight = blocks_17_attn_out_weight_to_fp16, x = input_175_cast_fp16)[name = tensor<string, []>("op_4329_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_71_cast_fp16 = add(x = inputs_69_cast_fp16, y = var_4329_cast_fp16)[name = tensor<string, []>("inputs_71_cast_fp16")];
            tensor<int32, [1]> input_177_axes_0 = const()[name = tensor<string, []>("input_177_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_177_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_177_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(446512000)))];
            tensor<fp16, [1024]> input_177_beta_0_to_fp16 = const()[name = tensor<string, []>("input_177_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(446514112)))];
            tensor<fp16, []> var_4339_to_fp16 = const()[name = tensor<string, []>("op_4339_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_177_cast_fp16 = layer_norm(axes = input_177_axes_0, beta = input_177_beta_0_to_fp16, epsilon = var_4339_to_fp16, gamma = input_177_gamma_0_to_fp16, x = inputs_71_cast_fp16)[name = tensor<string, []>("input_177_cast_fp16")];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_179_strides_0 = const()[name = tensor<string, []>("input_179_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_179_dilations_0 = const()[name = tensor<string, []>("input_179_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_179_groups_0 = const()[name = tensor<string, []>("input_179_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_17_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(446516224)))];
            tensor<fp16, [4096]> blocks_17_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_17_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(454904896)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_179_cast_fp16 = conv(bias = blocks_17_mlp_0_bias_to_fp16, dilations = input_179_dilations_0, groups = input_179_groups_0, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = input_179_strides_0, weight = blocks_17_mlp_0_weight_to_fp16, x = input_177_cast_fp16)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<string, []> input_181_mode_0 = const()[name = tensor<string, []>("input_181_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_181_cast_fp16 = gelu(mode = input_181_mode_0, x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<string, []> var_4365_pad_type_0 = const()[name = tensor<string, []>("op_4365_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4365_strides_0 = const()[name = tensor<string, []>("op_4365_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4365_pad_0 = const()[name = tensor<string, []>("op_4365_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4365_dilations_0 = const()[name = tensor<string, []>("op_4365_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4365_groups_0 = const()[name = tensor<string, []>("op_4365_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_17_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_17_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(454913152)))];
            tensor<fp16, [1024]> blocks_17_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_17_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(463301824)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4365_cast_fp16 = conv(bias = blocks_17_mlp_2_bias_to_fp16, dilations = var_4365_dilations_0, groups = var_4365_groups_0, pad = var_4365_pad_0, pad_type = var_4365_pad_type_0, strides = var_4365_strides_0, weight = blocks_17_mlp_2_weight_to_fp16, x = input_181_cast_fp16)[name = tensor<string, []>("op_4365_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_73_cast_fp16 = add(x = inputs_71_cast_fp16, y = var_4365_cast_fp16)[name = tensor<string, []>("inputs_73_cast_fp16")];
            tensor<int32, []> var_4374 = const()[name = tensor<string, []>("op_4374"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_183_axes_0 = const()[name = tensor<string, []>("input_183_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_183_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_183_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(463303936)))];
            tensor<fp16, [1024]> input_183_beta_0_to_fp16 = const()[name = tensor<string, []>("input_183_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(463306048)))];
            tensor<fp16, []> var_4390_to_fp16 = const()[name = tensor<string, []>("op_4390_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_183_cast_fp16 = layer_norm(axes = input_183_axes_0, beta = input_183_beta_0_to_fp16, epsilon = var_4390_to_fp16, gamma = input_183_gamma_0_to_fp16, x = inputs_73_cast_fp16)[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<string, []> q_37_pad_type_0 = const()[name = tensor<string, []>("q_37_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_37_strides_0 = const()[name = tensor<string, []>("q_37_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_37_pad_0 = const()[name = tensor<string, []>("q_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_37_dilations_0 = const()[name = tensor<string, []>("q_37_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_37_groups_0 = const()[name = tensor<string, []>("q_37_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_4425_weight_0_to_fp16 = const()[name = tensor<string, []>("op_4425_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(463308160)))];
            tensor<fp16, [1024]> var_4425_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4425_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(465405376)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4425_cast_fp16 = conv(bias = var_4425_bias_0_to_fp16, dilations = q_37_dilations_0, groups = q_37_groups_0, pad = q_37_pad_0, pad_type = q_37_pad_type_0, strides = q_37_strides_0, weight = var_4425_weight_0_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("op_4425_cast_fp16")];
            tensor<string, []> k_37_pad_type_0 = const()[name = tensor<string, []>("k_37_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_37_strides_0 = const()[name = tensor<string, []>("k_37_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_37_pad_0 = const()[name = tensor<string, []>("k_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_37_dilations_0 = const()[name = tensor<string, []>("k_37_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_37_groups_0 = const()[name = tensor<string, []>("k_37_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_18_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(465407488)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_37_cast_fp16 = conv(dilations = k_37_dilations_0, groups = k_37_groups_0, pad = k_37_pad_0, pad_type = k_37_pad_type_0, strides = k_37_strides_0, weight = blocks_18_attn_key_weight_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("k_37_cast_fp16")];
            tensor<string, []> var_4423_pad_type_0 = const()[name = tensor<string, []>("op_4423_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4423_strides_0 = const()[name = tensor<string, []>("op_4423_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4423_pad_0 = const()[name = tensor<string, []>("op_4423_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4423_dilations_0 = const()[name = tensor<string, []>("op_4423_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4423_groups_0 = const()[name = tensor<string, []>("op_4423_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_18_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(467504704)))];
            tensor<fp16, [1024]> blocks_18_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(469601920)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4423_cast_fp16 = conv(bias = blocks_18_attn_value_bias_to_fp16, dilations = var_4423_dilations_0, groups = var_4423_groups_0, pad = var_4423_pad_0, pad_type = var_4423_pad_type_0, strides = var_4423_strides_0, weight = blocks_18_attn_value_weight_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("op_4423_cast_fp16")];
            tensor<int32, [16]> tile_54 = const()[name = tensor<string, []>("tile_54"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4426_axis_0 = const()[name = tensor<string, []>("op_4426_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4426_cast_fp16_15 = split(axis = var_4426_axis_0, split_sizes = tile_54, x = var_4425_cast_fp16)[name = tensor<string, []>("op_4426_cast_fp16")];
            tensor<int32, [4]> var_4443_perm_0 = const()[name = tensor<string, []>("op_4443_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_55 = const()[name = tensor<string, []>("tile_55"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4444_axis_0 = const()[name = tensor<string, []>("op_4444_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_4443_cast_fp16 = transpose(perm = var_4443_perm_0, x = k_37_cast_fp16)[name = tensor<string, []>("transpose_6")];
            tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_4444_cast_fp16_15 = split(axis = var_4444_axis_0, split_sizes = tile_55, x = var_4443_cast_fp16)[name = tensor<string, []>("op_4444_cast_fp16")];
            tensor<int32, [16]> tile_56 = const()[name = tensor<string, []>("tile_56"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4461_axis_0 = const()[name = tensor<string, []>("op_4461_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4461_cast_fp16_15 = split(axis = var_4461_axis_0, split_sizes = tile_56, x = var_4423_cast_fp16)[name = tensor<string, []>("op_4461_cast_fp16")];
            tensor<string, []> aw_577_equation_0 = const()[name = tensor<string, []>("aw_577_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_577_cast_fp16 = einsum(equation = aw_577_equation_0, values = (var_4444_cast_fp16_0, var_4426_cast_fp16_0))[name = tensor<string, []>("aw_577_cast_fp16")];
            tensor<string, []> aw_579_equation_0 = const()[name = tensor<string, []>("aw_579_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_579_cast_fp16 = einsum(equation = aw_579_equation_0, values = (var_4444_cast_fp16_1, var_4426_cast_fp16_1))[name = tensor<string, []>("aw_579_cast_fp16")];
            tensor<string, []> aw_581_equation_0 = const()[name = tensor<string, []>("aw_581_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_581_cast_fp16 = einsum(equation = aw_581_equation_0, values = (var_4444_cast_fp16_2, var_4426_cast_fp16_2))[name = tensor<string, []>("aw_581_cast_fp16")];
            tensor<string, []> aw_583_equation_0 = const()[name = tensor<string, []>("aw_583_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_583_cast_fp16 = einsum(equation = aw_583_equation_0, values = (var_4444_cast_fp16_3, var_4426_cast_fp16_3))[name = tensor<string, []>("aw_583_cast_fp16")];
            tensor<string, []> aw_585_equation_0 = const()[name = tensor<string, []>("aw_585_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_585_cast_fp16 = einsum(equation = aw_585_equation_0, values = (var_4444_cast_fp16_4, var_4426_cast_fp16_4))[name = tensor<string, []>("aw_585_cast_fp16")];
            tensor<string, []> aw_587_equation_0 = const()[name = tensor<string, []>("aw_587_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_587_cast_fp16 = einsum(equation = aw_587_equation_0, values = (var_4444_cast_fp16_5, var_4426_cast_fp16_5))[name = tensor<string, []>("aw_587_cast_fp16")];
            tensor<string, []> aw_589_equation_0 = const()[name = tensor<string, []>("aw_589_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_589_cast_fp16 = einsum(equation = aw_589_equation_0, values = (var_4444_cast_fp16_6, var_4426_cast_fp16_6))[name = tensor<string, []>("aw_589_cast_fp16")];
            tensor<string, []> aw_591_equation_0 = const()[name = tensor<string, []>("aw_591_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_591_cast_fp16 = einsum(equation = aw_591_equation_0, values = (var_4444_cast_fp16_7, var_4426_cast_fp16_7))[name = tensor<string, []>("aw_591_cast_fp16")];
            tensor<string, []> aw_593_equation_0 = const()[name = tensor<string, []>("aw_593_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_593_cast_fp16 = einsum(equation = aw_593_equation_0, values = (var_4444_cast_fp16_8, var_4426_cast_fp16_8))[name = tensor<string, []>("aw_593_cast_fp16")];
            tensor<string, []> aw_595_equation_0 = const()[name = tensor<string, []>("aw_595_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_595_cast_fp16 = einsum(equation = aw_595_equation_0, values = (var_4444_cast_fp16_9, var_4426_cast_fp16_9))[name = tensor<string, []>("aw_595_cast_fp16")];
            tensor<string, []> aw_597_equation_0 = const()[name = tensor<string, []>("aw_597_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_597_cast_fp16 = einsum(equation = aw_597_equation_0, values = (var_4444_cast_fp16_10, var_4426_cast_fp16_10))[name = tensor<string, []>("aw_597_cast_fp16")];
            tensor<string, []> aw_599_equation_0 = const()[name = tensor<string, []>("aw_599_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_599_cast_fp16 = einsum(equation = aw_599_equation_0, values = (var_4444_cast_fp16_11, var_4426_cast_fp16_11))[name = tensor<string, []>("aw_599_cast_fp16")];
            tensor<string, []> aw_601_equation_0 = const()[name = tensor<string, []>("aw_601_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_601_cast_fp16 = einsum(equation = aw_601_equation_0, values = (var_4444_cast_fp16_12, var_4426_cast_fp16_12))[name = tensor<string, []>("aw_601_cast_fp16")];
            tensor<string, []> aw_603_equation_0 = const()[name = tensor<string, []>("aw_603_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_603_cast_fp16 = einsum(equation = aw_603_equation_0, values = (var_4444_cast_fp16_13, var_4426_cast_fp16_13))[name = tensor<string, []>("aw_603_cast_fp16")];
            tensor<string, []> aw_605_equation_0 = const()[name = tensor<string, []>("aw_605_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_605_cast_fp16 = einsum(equation = aw_605_equation_0, values = (var_4444_cast_fp16_14, var_4426_cast_fp16_14))[name = tensor<string, []>("aw_605_cast_fp16")];
            tensor<string, []> aw_607_equation_0 = const()[name = tensor<string, []>("aw_607_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_607_cast_fp16 = einsum(equation = aw_607_equation_0, values = (var_4444_cast_fp16_15, var_4426_cast_fp16_15))[name = tensor<string, []>("aw_607_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4510_cast_fp16 = softmax(axis = var_4374, x = aw_577_cast_fp16)[name = tensor<string, []>("op_4510_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4511_cast_fp16 = softmax(axis = var_4374, x = aw_579_cast_fp16)[name = tensor<string, []>("op_4511_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4512_cast_fp16 = softmax(axis = var_4374, x = aw_581_cast_fp16)[name = tensor<string, []>("op_4512_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4513_cast_fp16 = softmax(axis = var_4374, x = aw_583_cast_fp16)[name = tensor<string, []>("op_4513_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4514_cast_fp16 = softmax(axis = var_4374, x = aw_585_cast_fp16)[name = tensor<string, []>("op_4514_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4515_cast_fp16 = softmax(axis = var_4374, x = aw_587_cast_fp16)[name = tensor<string, []>("op_4515_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4516_cast_fp16 = softmax(axis = var_4374, x = aw_589_cast_fp16)[name = tensor<string, []>("op_4516_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4517_cast_fp16 = softmax(axis = var_4374, x = aw_591_cast_fp16)[name = tensor<string, []>("op_4517_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4518_cast_fp16 = softmax(axis = var_4374, x = aw_593_cast_fp16)[name = tensor<string, []>("op_4518_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4519_cast_fp16 = softmax(axis = var_4374, x = aw_595_cast_fp16)[name = tensor<string, []>("op_4519_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4520_cast_fp16 = softmax(axis = var_4374, x = aw_597_cast_fp16)[name = tensor<string, []>("op_4520_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4521_cast_fp16 = softmax(axis = var_4374, x = aw_599_cast_fp16)[name = tensor<string, []>("op_4521_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4522_cast_fp16 = softmax(axis = var_4374, x = aw_601_cast_fp16)[name = tensor<string, []>("op_4522_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4523_cast_fp16 = softmax(axis = var_4374, x = aw_603_cast_fp16)[name = tensor<string, []>("op_4523_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4524_cast_fp16 = softmax(axis = var_4374, x = aw_605_cast_fp16)[name = tensor<string, []>("op_4524_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4525_cast_fp16 = softmax(axis = var_4374, x = aw_607_cast_fp16)[name = tensor<string, []>("op_4525_cast_fp16")];
            tensor<string, []> var_4527_equation_0 = const()[name = tensor<string, []>("op_4527_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4527_cast_fp16 = einsum(equation = var_4527_equation_0, values = (var_4461_cast_fp16_0, var_4510_cast_fp16))[name = tensor<string, []>("op_4527_cast_fp16")];
            tensor<string, []> var_4529_equation_0 = const()[name = tensor<string, []>("op_4529_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4529_cast_fp16 = einsum(equation = var_4529_equation_0, values = (var_4461_cast_fp16_1, var_4511_cast_fp16))[name = tensor<string, []>("op_4529_cast_fp16")];
            tensor<string, []> var_4531_equation_0 = const()[name = tensor<string, []>("op_4531_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4531_cast_fp16 = einsum(equation = var_4531_equation_0, values = (var_4461_cast_fp16_2, var_4512_cast_fp16))[name = tensor<string, []>("op_4531_cast_fp16")];
            tensor<string, []> var_4533_equation_0 = const()[name = tensor<string, []>("op_4533_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4533_cast_fp16 = einsum(equation = var_4533_equation_0, values = (var_4461_cast_fp16_3, var_4513_cast_fp16))[name = tensor<string, []>("op_4533_cast_fp16")];
            tensor<string, []> var_4535_equation_0 = const()[name = tensor<string, []>("op_4535_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4535_cast_fp16 = einsum(equation = var_4535_equation_0, values = (var_4461_cast_fp16_4, var_4514_cast_fp16))[name = tensor<string, []>("op_4535_cast_fp16")];
            tensor<string, []> var_4537_equation_0 = const()[name = tensor<string, []>("op_4537_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4537_cast_fp16 = einsum(equation = var_4537_equation_0, values = (var_4461_cast_fp16_5, var_4515_cast_fp16))[name = tensor<string, []>("op_4537_cast_fp16")];
            tensor<string, []> var_4539_equation_0 = const()[name = tensor<string, []>("op_4539_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4539_cast_fp16 = einsum(equation = var_4539_equation_0, values = (var_4461_cast_fp16_6, var_4516_cast_fp16))[name = tensor<string, []>("op_4539_cast_fp16")];
            tensor<string, []> var_4541_equation_0 = const()[name = tensor<string, []>("op_4541_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4541_cast_fp16 = einsum(equation = var_4541_equation_0, values = (var_4461_cast_fp16_7, var_4517_cast_fp16))[name = tensor<string, []>("op_4541_cast_fp16")];
            tensor<string, []> var_4543_equation_0 = const()[name = tensor<string, []>("op_4543_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4543_cast_fp16 = einsum(equation = var_4543_equation_0, values = (var_4461_cast_fp16_8, var_4518_cast_fp16))[name = tensor<string, []>("op_4543_cast_fp16")];
            tensor<string, []> var_4545_equation_0 = const()[name = tensor<string, []>("op_4545_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4545_cast_fp16 = einsum(equation = var_4545_equation_0, values = (var_4461_cast_fp16_9, var_4519_cast_fp16))[name = tensor<string, []>("op_4545_cast_fp16")];
            tensor<string, []> var_4547_equation_0 = const()[name = tensor<string, []>("op_4547_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4547_cast_fp16 = einsum(equation = var_4547_equation_0, values = (var_4461_cast_fp16_10, var_4520_cast_fp16))[name = tensor<string, []>("op_4547_cast_fp16")];
            tensor<string, []> var_4549_equation_0 = const()[name = tensor<string, []>("op_4549_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4549_cast_fp16 = einsum(equation = var_4549_equation_0, values = (var_4461_cast_fp16_11, var_4521_cast_fp16))[name = tensor<string, []>("op_4549_cast_fp16")];
            tensor<string, []> var_4551_equation_0 = const()[name = tensor<string, []>("op_4551_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4551_cast_fp16 = einsum(equation = var_4551_equation_0, values = (var_4461_cast_fp16_12, var_4522_cast_fp16))[name = tensor<string, []>("op_4551_cast_fp16")];
            tensor<string, []> var_4553_equation_0 = const()[name = tensor<string, []>("op_4553_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4553_cast_fp16 = einsum(equation = var_4553_equation_0, values = (var_4461_cast_fp16_13, var_4523_cast_fp16))[name = tensor<string, []>("op_4553_cast_fp16")];
            tensor<string, []> var_4555_equation_0 = const()[name = tensor<string, []>("op_4555_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4555_cast_fp16 = einsum(equation = var_4555_equation_0, values = (var_4461_cast_fp16_14, var_4524_cast_fp16))[name = tensor<string, []>("op_4555_cast_fp16")];
            tensor<string, []> var_4557_equation_0 = const()[name = tensor<string, []>("op_4557_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4557_cast_fp16 = einsum(equation = var_4557_equation_0, values = (var_4461_cast_fp16_15, var_4525_cast_fp16))[name = tensor<string, []>("op_4557_cast_fp16")];
            tensor<bool, []> input_185_interleave_0 = const()[name = tensor<string, []>("input_185_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_185_cast_fp16 = concat(axis = var_4374, interleave = input_185_interleave_0, values = (var_4527_cast_fp16, var_4529_cast_fp16, var_4531_cast_fp16, var_4533_cast_fp16, var_4535_cast_fp16, var_4537_cast_fp16, var_4539_cast_fp16, var_4541_cast_fp16, var_4543_cast_fp16, var_4545_cast_fp16, var_4547_cast_fp16, var_4549_cast_fp16, var_4551_cast_fp16, var_4553_cast_fp16, var_4555_cast_fp16, var_4557_cast_fp16))[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<string, []> var_4566_pad_type_0 = const()[name = tensor<string, []>("op_4566_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4566_strides_0 = const()[name = tensor<string, []>("op_4566_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4566_pad_0 = const()[name = tensor<string, []>("op_4566_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4566_dilations_0 = const()[name = tensor<string, []>("op_4566_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4566_groups_0 = const()[name = tensor<string, []>("op_4566_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_18_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(469604032)))];
            tensor<fp16, [1024]> blocks_18_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_18_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(471701248)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4566_cast_fp16 = conv(bias = blocks_18_attn_out_bias_to_fp16, dilations = var_4566_dilations_0, groups = var_4566_groups_0, pad = var_4566_pad_0, pad_type = var_4566_pad_type_0, strides = var_4566_strides_0, weight = blocks_18_attn_out_weight_to_fp16, x = input_185_cast_fp16)[name = tensor<string, []>("op_4566_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_75_cast_fp16 = add(x = inputs_73_cast_fp16, y = var_4566_cast_fp16)[name = tensor<string, []>("inputs_75_cast_fp16")];
            tensor<int32, [1]> input_187_axes_0 = const()[name = tensor<string, []>("input_187_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_187_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_187_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(471703360)))];
            tensor<fp16, [1024]> input_187_beta_0_to_fp16 = const()[name = tensor<string, []>("input_187_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(471705472)))];
            tensor<fp16, []> var_4576_to_fp16 = const()[name = tensor<string, []>("op_4576_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_187_cast_fp16 = layer_norm(axes = input_187_axes_0, beta = input_187_beta_0_to_fp16, epsilon = var_4576_to_fp16, gamma = input_187_gamma_0_to_fp16, x = inputs_75_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_189_strides_0 = const()[name = tensor<string, []>("input_189_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_189_dilations_0 = const()[name = tensor<string, []>("input_189_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_189_groups_0 = const()[name = tensor<string, []>("input_189_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_18_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(471707584)))];
            tensor<fp16, [4096]> blocks_18_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_18_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(480096256)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_189_cast_fp16 = conv(bias = blocks_18_mlp_0_bias_to_fp16, dilations = input_189_dilations_0, groups = input_189_groups_0, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = input_189_strides_0, weight = blocks_18_mlp_0_weight_to_fp16, x = input_187_cast_fp16)[name = tensor<string, []>("input_189_cast_fp16")];
            tensor<string, []> input_191_mode_0 = const()[name = tensor<string, []>("input_191_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_191_cast_fp16 = gelu(mode = input_191_mode_0, x = input_189_cast_fp16)[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<string, []> var_4602_pad_type_0 = const()[name = tensor<string, []>("op_4602_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4602_strides_0 = const()[name = tensor<string, []>("op_4602_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4602_pad_0 = const()[name = tensor<string, []>("op_4602_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4602_dilations_0 = const()[name = tensor<string, []>("op_4602_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4602_groups_0 = const()[name = tensor<string, []>("op_4602_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_18_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_18_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(480104512)))];
            tensor<fp16, [1024]> blocks_18_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_18_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(488493184)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4602_cast_fp16 = conv(bias = blocks_18_mlp_2_bias_to_fp16, dilations = var_4602_dilations_0, groups = var_4602_groups_0, pad = var_4602_pad_0, pad_type = var_4602_pad_type_0, strides = var_4602_strides_0, weight = blocks_18_mlp_2_weight_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("op_4602_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_77_cast_fp16 = add(x = inputs_75_cast_fp16, y = var_4602_cast_fp16)[name = tensor<string, []>("inputs_77_cast_fp16")];
            tensor<int32, []> var_4611 = const()[name = tensor<string, []>("op_4611"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_193_axes_0 = const()[name = tensor<string, []>("input_193_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_193_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_193_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(488495296)))];
            tensor<fp16, [1024]> input_193_beta_0_to_fp16 = const()[name = tensor<string, []>("input_193_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(488497408)))];
            tensor<fp16, []> var_4627_to_fp16 = const()[name = tensor<string, []>("op_4627_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_193_cast_fp16 = layer_norm(axes = input_193_axes_0, beta = input_193_beta_0_to_fp16, epsilon = var_4627_to_fp16, gamma = input_193_gamma_0_to_fp16, x = inputs_77_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<string, []> q_39_pad_type_0 = const()[name = tensor<string, []>("q_39_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_39_strides_0 = const()[name = tensor<string, []>("q_39_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_39_pad_0 = const()[name = tensor<string, []>("q_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_39_dilations_0 = const()[name = tensor<string, []>("q_39_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_39_groups_0 = const()[name = tensor<string, []>("q_39_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_4662_weight_0_to_fp16 = const()[name = tensor<string, []>("op_4662_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(488499520)))];
            tensor<fp16, [1024]> var_4662_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4662_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(490596736)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4662_cast_fp16 = conv(bias = var_4662_bias_0_to_fp16, dilations = q_39_dilations_0, groups = q_39_groups_0, pad = q_39_pad_0, pad_type = q_39_pad_type_0, strides = q_39_strides_0, weight = var_4662_weight_0_to_fp16, x = input_193_cast_fp16)[name = tensor<string, []>("op_4662_cast_fp16")];
            tensor<string, []> k_39_pad_type_0 = const()[name = tensor<string, []>("k_39_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_39_strides_0 = const()[name = tensor<string, []>("k_39_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_39_pad_0 = const()[name = tensor<string, []>("k_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_39_dilations_0 = const()[name = tensor<string, []>("k_39_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_39_groups_0 = const()[name = tensor<string, []>("k_39_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_19_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(490598848)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_39_cast_fp16 = conv(dilations = k_39_dilations_0, groups = k_39_groups_0, pad = k_39_pad_0, pad_type = k_39_pad_type_0, strides = k_39_strides_0, weight = blocks_19_attn_key_weight_to_fp16, x = input_193_cast_fp16)[name = tensor<string, []>("k_39_cast_fp16")];
            tensor<string, []> var_4660_pad_type_0 = const()[name = tensor<string, []>("op_4660_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4660_strides_0 = const()[name = tensor<string, []>("op_4660_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4660_pad_0 = const()[name = tensor<string, []>("op_4660_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4660_dilations_0 = const()[name = tensor<string, []>("op_4660_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4660_groups_0 = const()[name = tensor<string, []>("op_4660_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_19_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(492696064)))];
            tensor<fp16, [1024]> blocks_19_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(494793280)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4660_cast_fp16 = conv(bias = blocks_19_attn_value_bias_to_fp16, dilations = var_4660_dilations_0, groups = var_4660_groups_0, pad = var_4660_pad_0, pad_type = var_4660_pad_type_0, strides = var_4660_strides_0, weight = blocks_19_attn_value_weight_to_fp16, x = input_193_cast_fp16)[name = tensor<string, []>("op_4660_cast_fp16")];
            tensor<int32, [16]> tile_57 = const()[name = tensor<string, []>("tile_57"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4663_axis_0 = const()[name = tensor<string, []>("op_4663_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4663_cast_fp16_15 = split(axis = var_4663_axis_0, split_sizes = tile_57, x = var_4662_cast_fp16)[name = tensor<string, []>("op_4663_cast_fp16")];
            tensor<int32, [4]> var_4680_perm_0 = const()[name = tensor<string, []>("op_4680_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_58 = const()[name = tensor<string, []>("tile_58"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4681_axis_0 = const()[name = tensor<string, []>("op_4681_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_4680_cast_fp16 = transpose(perm = var_4680_perm_0, x = k_39_cast_fp16)[name = tensor<string, []>("transpose_5")];
            tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_4681_cast_fp16_15 = split(axis = var_4681_axis_0, split_sizes = tile_58, x = var_4680_cast_fp16)[name = tensor<string, []>("op_4681_cast_fp16")];
            tensor<int32, [16]> tile_59 = const()[name = tensor<string, []>("tile_59"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4698_axis_0 = const()[name = tensor<string, []>("op_4698_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4698_cast_fp16_15 = split(axis = var_4698_axis_0, split_sizes = tile_59, x = var_4660_cast_fp16)[name = tensor<string, []>("op_4698_cast_fp16")];
            tensor<string, []> aw_609_equation_0 = const()[name = tensor<string, []>("aw_609_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_609_cast_fp16 = einsum(equation = aw_609_equation_0, values = (var_4681_cast_fp16_0, var_4663_cast_fp16_0))[name = tensor<string, []>("aw_609_cast_fp16")];
            tensor<string, []> aw_611_equation_0 = const()[name = tensor<string, []>("aw_611_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_611_cast_fp16 = einsum(equation = aw_611_equation_0, values = (var_4681_cast_fp16_1, var_4663_cast_fp16_1))[name = tensor<string, []>("aw_611_cast_fp16")];
            tensor<string, []> aw_613_equation_0 = const()[name = tensor<string, []>("aw_613_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_613_cast_fp16 = einsum(equation = aw_613_equation_0, values = (var_4681_cast_fp16_2, var_4663_cast_fp16_2))[name = tensor<string, []>("aw_613_cast_fp16")];
            tensor<string, []> aw_615_equation_0 = const()[name = tensor<string, []>("aw_615_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_615_cast_fp16 = einsum(equation = aw_615_equation_0, values = (var_4681_cast_fp16_3, var_4663_cast_fp16_3))[name = tensor<string, []>("aw_615_cast_fp16")];
            tensor<string, []> aw_617_equation_0 = const()[name = tensor<string, []>("aw_617_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_617_cast_fp16 = einsum(equation = aw_617_equation_0, values = (var_4681_cast_fp16_4, var_4663_cast_fp16_4))[name = tensor<string, []>("aw_617_cast_fp16")];
            tensor<string, []> aw_619_equation_0 = const()[name = tensor<string, []>("aw_619_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_619_cast_fp16 = einsum(equation = aw_619_equation_0, values = (var_4681_cast_fp16_5, var_4663_cast_fp16_5))[name = tensor<string, []>("aw_619_cast_fp16")];
            tensor<string, []> aw_621_equation_0 = const()[name = tensor<string, []>("aw_621_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_621_cast_fp16 = einsum(equation = aw_621_equation_0, values = (var_4681_cast_fp16_6, var_4663_cast_fp16_6))[name = tensor<string, []>("aw_621_cast_fp16")];
            tensor<string, []> aw_623_equation_0 = const()[name = tensor<string, []>("aw_623_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_623_cast_fp16 = einsum(equation = aw_623_equation_0, values = (var_4681_cast_fp16_7, var_4663_cast_fp16_7))[name = tensor<string, []>("aw_623_cast_fp16")];
            tensor<string, []> aw_625_equation_0 = const()[name = tensor<string, []>("aw_625_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_625_cast_fp16 = einsum(equation = aw_625_equation_0, values = (var_4681_cast_fp16_8, var_4663_cast_fp16_8))[name = tensor<string, []>("aw_625_cast_fp16")];
            tensor<string, []> aw_627_equation_0 = const()[name = tensor<string, []>("aw_627_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_627_cast_fp16 = einsum(equation = aw_627_equation_0, values = (var_4681_cast_fp16_9, var_4663_cast_fp16_9))[name = tensor<string, []>("aw_627_cast_fp16")];
            tensor<string, []> aw_629_equation_0 = const()[name = tensor<string, []>("aw_629_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_629_cast_fp16 = einsum(equation = aw_629_equation_0, values = (var_4681_cast_fp16_10, var_4663_cast_fp16_10))[name = tensor<string, []>("aw_629_cast_fp16")];
            tensor<string, []> aw_631_equation_0 = const()[name = tensor<string, []>("aw_631_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_631_cast_fp16 = einsum(equation = aw_631_equation_0, values = (var_4681_cast_fp16_11, var_4663_cast_fp16_11))[name = tensor<string, []>("aw_631_cast_fp16")];
            tensor<string, []> aw_633_equation_0 = const()[name = tensor<string, []>("aw_633_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_633_cast_fp16 = einsum(equation = aw_633_equation_0, values = (var_4681_cast_fp16_12, var_4663_cast_fp16_12))[name = tensor<string, []>("aw_633_cast_fp16")];
            tensor<string, []> aw_635_equation_0 = const()[name = tensor<string, []>("aw_635_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_635_cast_fp16 = einsum(equation = aw_635_equation_0, values = (var_4681_cast_fp16_13, var_4663_cast_fp16_13))[name = tensor<string, []>("aw_635_cast_fp16")];
            tensor<string, []> aw_637_equation_0 = const()[name = tensor<string, []>("aw_637_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_637_cast_fp16 = einsum(equation = aw_637_equation_0, values = (var_4681_cast_fp16_14, var_4663_cast_fp16_14))[name = tensor<string, []>("aw_637_cast_fp16")];
            tensor<string, []> aw_639_equation_0 = const()[name = tensor<string, []>("aw_639_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_639_cast_fp16 = einsum(equation = aw_639_equation_0, values = (var_4681_cast_fp16_15, var_4663_cast_fp16_15))[name = tensor<string, []>("aw_639_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4747_cast_fp16 = softmax(axis = var_4611, x = aw_609_cast_fp16)[name = tensor<string, []>("op_4747_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4748_cast_fp16 = softmax(axis = var_4611, x = aw_611_cast_fp16)[name = tensor<string, []>("op_4748_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4749_cast_fp16 = softmax(axis = var_4611, x = aw_613_cast_fp16)[name = tensor<string, []>("op_4749_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4750_cast_fp16 = softmax(axis = var_4611, x = aw_615_cast_fp16)[name = tensor<string, []>("op_4750_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4751_cast_fp16 = softmax(axis = var_4611, x = aw_617_cast_fp16)[name = tensor<string, []>("op_4751_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4752_cast_fp16 = softmax(axis = var_4611, x = aw_619_cast_fp16)[name = tensor<string, []>("op_4752_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4753_cast_fp16 = softmax(axis = var_4611, x = aw_621_cast_fp16)[name = tensor<string, []>("op_4753_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4754_cast_fp16 = softmax(axis = var_4611, x = aw_623_cast_fp16)[name = tensor<string, []>("op_4754_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4755_cast_fp16 = softmax(axis = var_4611, x = aw_625_cast_fp16)[name = tensor<string, []>("op_4755_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4756_cast_fp16 = softmax(axis = var_4611, x = aw_627_cast_fp16)[name = tensor<string, []>("op_4756_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4757_cast_fp16 = softmax(axis = var_4611, x = aw_629_cast_fp16)[name = tensor<string, []>("op_4757_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4758_cast_fp16 = softmax(axis = var_4611, x = aw_631_cast_fp16)[name = tensor<string, []>("op_4758_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4759_cast_fp16 = softmax(axis = var_4611, x = aw_633_cast_fp16)[name = tensor<string, []>("op_4759_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4760_cast_fp16 = softmax(axis = var_4611, x = aw_635_cast_fp16)[name = tensor<string, []>("op_4760_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4761_cast_fp16 = softmax(axis = var_4611, x = aw_637_cast_fp16)[name = tensor<string, []>("op_4761_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4762_cast_fp16 = softmax(axis = var_4611, x = aw_639_cast_fp16)[name = tensor<string, []>("op_4762_cast_fp16")];
            tensor<string, []> var_4764_equation_0 = const()[name = tensor<string, []>("op_4764_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4764_cast_fp16 = einsum(equation = var_4764_equation_0, values = (var_4698_cast_fp16_0, var_4747_cast_fp16))[name = tensor<string, []>("op_4764_cast_fp16")];
            tensor<string, []> var_4766_equation_0 = const()[name = tensor<string, []>("op_4766_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4766_cast_fp16 = einsum(equation = var_4766_equation_0, values = (var_4698_cast_fp16_1, var_4748_cast_fp16))[name = tensor<string, []>("op_4766_cast_fp16")];
            tensor<string, []> var_4768_equation_0 = const()[name = tensor<string, []>("op_4768_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4768_cast_fp16 = einsum(equation = var_4768_equation_0, values = (var_4698_cast_fp16_2, var_4749_cast_fp16))[name = tensor<string, []>("op_4768_cast_fp16")];
            tensor<string, []> var_4770_equation_0 = const()[name = tensor<string, []>("op_4770_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4770_cast_fp16 = einsum(equation = var_4770_equation_0, values = (var_4698_cast_fp16_3, var_4750_cast_fp16))[name = tensor<string, []>("op_4770_cast_fp16")];
            tensor<string, []> var_4772_equation_0 = const()[name = tensor<string, []>("op_4772_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4772_cast_fp16 = einsum(equation = var_4772_equation_0, values = (var_4698_cast_fp16_4, var_4751_cast_fp16))[name = tensor<string, []>("op_4772_cast_fp16")];
            tensor<string, []> var_4774_equation_0 = const()[name = tensor<string, []>("op_4774_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4774_cast_fp16 = einsum(equation = var_4774_equation_0, values = (var_4698_cast_fp16_5, var_4752_cast_fp16))[name = tensor<string, []>("op_4774_cast_fp16")];
            tensor<string, []> var_4776_equation_0 = const()[name = tensor<string, []>("op_4776_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4776_cast_fp16 = einsum(equation = var_4776_equation_0, values = (var_4698_cast_fp16_6, var_4753_cast_fp16))[name = tensor<string, []>("op_4776_cast_fp16")];
            tensor<string, []> var_4778_equation_0 = const()[name = tensor<string, []>("op_4778_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4778_cast_fp16 = einsum(equation = var_4778_equation_0, values = (var_4698_cast_fp16_7, var_4754_cast_fp16))[name = tensor<string, []>("op_4778_cast_fp16")];
            tensor<string, []> var_4780_equation_0 = const()[name = tensor<string, []>("op_4780_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4780_cast_fp16 = einsum(equation = var_4780_equation_0, values = (var_4698_cast_fp16_8, var_4755_cast_fp16))[name = tensor<string, []>("op_4780_cast_fp16")];
            tensor<string, []> var_4782_equation_0 = const()[name = tensor<string, []>("op_4782_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4782_cast_fp16 = einsum(equation = var_4782_equation_0, values = (var_4698_cast_fp16_9, var_4756_cast_fp16))[name = tensor<string, []>("op_4782_cast_fp16")];
            tensor<string, []> var_4784_equation_0 = const()[name = tensor<string, []>("op_4784_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4784_cast_fp16 = einsum(equation = var_4784_equation_0, values = (var_4698_cast_fp16_10, var_4757_cast_fp16))[name = tensor<string, []>("op_4784_cast_fp16")];
            tensor<string, []> var_4786_equation_0 = const()[name = tensor<string, []>("op_4786_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4786_cast_fp16 = einsum(equation = var_4786_equation_0, values = (var_4698_cast_fp16_11, var_4758_cast_fp16))[name = tensor<string, []>("op_4786_cast_fp16")];
            tensor<string, []> var_4788_equation_0 = const()[name = tensor<string, []>("op_4788_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4788_cast_fp16 = einsum(equation = var_4788_equation_0, values = (var_4698_cast_fp16_12, var_4759_cast_fp16))[name = tensor<string, []>("op_4788_cast_fp16")];
            tensor<string, []> var_4790_equation_0 = const()[name = tensor<string, []>("op_4790_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4790_cast_fp16 = einsum(equation = var_4790_equation_0, values = (var_4698_cast_fp16_13, var_4760_cast_fp16))[name = tensor<string, []>("op_4790_cast_fp16")];
            tensor<string, []> var_4792_equation_0 = const()[name = tensor<string, []>("op_4792_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4792_cast_fp16 = einsum(equation = var_4792_equation_0, values = (var_4698_cast_fp16_14, var_4761_cast_fp16))[name = tensor<string, []>("op_4792_cast_fp16")];
            tensor<string, []> var_4794_equation_0 = const()[name = tensor<string, []>("op_4794_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_4794_cast_fp16 = einsum(equation = var_4794_equation_0, values = (var_4698_cast_fp16_15, var_4762_cast_fp16))[name = tensor<string, []>("op_4794_cast_fp16")];
            tensor<bool, []> input_195_interleave_0 = const()[name = tensor<string, []>("input_195_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_195_cast_fp16 = concat(axis = var_4611, interleave = input_195_interleave_0, values = (var_4764_cast_fp16, var_4766_cast_fp16, var_4768_cast_fp16, var_4770_cast_fp16, var_4772_cast_fp16, var_4774_cast_fp16, var_4776_cast_fp16, var_4778_cast_fp16, var_4780_cast_fp16, var_4782_cast_fp16, var_4784_cast_fp16, var_4786_cast_fp16, var_4788_cast_fp16, var_4790_cast_fp16, var_4792_cast_fp16, var_4794_cast_fp16))[name = tensor<string, []>("input_195_cast_fp16")];
            tensor<string, []> var_4803_pad_type_0 = const()[name = tensor<string, []>("op_4803_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4803_strides_0 = const()[name = tensor<string, []>("op_4803_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4803_pad_0 = const()[name = tensor<string, []>("op_4803_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4803_dilations_0 = const()[name = tensor<string, []>("op_4803_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4803_groups_0 = const()[name = tensor<string, []>("op_4803_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_19_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(494795392)))];
            tensor<fp16, [1024]> blocks_19_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_19_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(496892608)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4803_cast_fp16 = conv(bias = blocks_19_attn_out_bias_to_fp16, dilations = var_4803_dilations_0, groups = var_4803_groups_0, pad = var_4803_pad_0, pad_type = var_4803_pad_type_0, strides = var_4803_strides_0, weight = blocks_19_attn_out_weight_to_fp16, x = input_195_cast_fp16)[name = tensor<string, []>("op_4803_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_79_cast_fp16 = add(x = inputs_77_cast_fp16, y = var_4803_cast_fp16)[name = tensor<string, []>("inputs_79_cast_fp16")];
            tensor<int32, [1]> input_197_axes_0 = const()[name = tensor<string, []>("input_197_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_197_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_197_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(496894720)))];
            tensor<fp16, [1024]> input_197_beta_0_to_fp16 = const()[name = tensor<string, []>("input_197_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(496896832)))];
            tensor<fp16, []> var_4813_to_fp16 = const()[name = tensor<string, []>("op_4813_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_197_cast_fp16 = layer_norm(axes = input_197_axes_0, beta = input_197_beta_0_to_fp16, epsilon = var_4813_to_fp16, gamma = input_197_gamma_0_to_fp16, x = inputs_79_cast_fp16)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<string, []> input_199_pad_type_0 = const()[name = tensor<string, []>("input_199_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_199_strides_0 = const()[name = tensor<string, []>("input_199_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_199_pad_0 = const()[name = tensor<string, []>("input_199_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_199_dilations_0 = const()[name = tensor<string, []>("input_199_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_199_groups_0 = const()[name = tensor<string, []>("input_199_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_19_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(496898944)))];
            tensor<fp16, [4096]> blocks_19_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_19_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(505287616)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_199_cast_fp16 = conv(bias = blocks_19_mlp_0_bias_to_fp16, dilations = input_199_dilations_0, groups = input_199_groups_0, pad = input_199_pad_0, pad_type = input_199_pad_type_0, strides = input_199_strides_0, weight = blocks_19_mlp_0_weight_to_fp16, x = input_197_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<string, []> input_201_mode_0 = const()[name = tensor<string, []>("input_201_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_201_cast_fp16 = gelu(mode = input_201_mode_0, x = input_199_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<string, []> var_4839_pad_type_0 = const()[name = tensor<string, []>("op_4839_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4839_strides_0 = const()[name = tensor<string, []>("op_4839_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4839_pad_0 = const()[name = tensor<string, []>("op_4839_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4839_dilations_0 = const()[name = tensor<string, []>("op_4839_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4839_groups_0 = const()[name = tensor<string, []>("op_4839_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_19_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_19_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(505295872)))];
            tensor<fp16, [1024]> blocks_19_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_19_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(513684544)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4839_cast_fp16 = conv(bias = blocks_19_mlp_2_bias_to_fp16, dilations = var_4839_dilations_0, groups = var_4839_groups_0, pad = var_4839_pad_0, pad_type = var_4839_pad_type_0, strides = var_4839_strides_0, weight = blocks_19_mlp_2_weight_to_fp16, x = input_201_cast_fp16)[name = tensor<string, []>("op_4839_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_81_cast_fp16 = add(x = inputs_79_cast_fp16, y = var_4839_cast_fp16)[name = tensor<string, []>("inputs_81_cast_fp16")];
            tensor<int32, []> var_4848 = const()[name = tensor<string, []>("op_4848"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_203_axes_0 = const()[name = tensor<string, []>("input_203_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_203_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_203_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(513686656)))];
            tensor<fp16, [1024]> input_203_beta_0_to_fp16 = const()[name = tensor<string, []>("input_203_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(513688768)))];
            tensor<fp16, []> var_4864_to_fp16 = const()[name = tensor<string, []>("op_4864_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_203_cast_fp16 = layer_norm(axes = input_203_axes_0, beta = input_203_beta_0_to_fp16, epsilon = var_4864_to_fp16, gamma = input_203_gamma_0_to_fp16, x = inputs_81_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<string, []> q_41_pad_type_0 = const()[name = tensor<string, []>("q_41_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_41_strides_0 = const()[name = tensor<string, []>("q_41_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_41_pad_0 = const()[name = tensor<string, []>("q_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_41_dilations_0 = const()[name = tensor<string, []>("q_41_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_41_groups_0 = const()[name = tensor<string, []>("q_41_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_4899_weight_0_to_fp16 = const()[name = tensor<string, []>("op_4899_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(513690880)))];
            tensor<fp16, [1024]> var_4899_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4899_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(515788096)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4899_cast_fp16 = conv(bias = var_4899_bias_0_to_fp16, dilations = q_41_dilations_0, groups = q_41_groups_0, pad = q_41_pad_0, pad_type = q_41_pad_type_0, strides = q_41_strides_0, weight = var_4899_weight_0_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_4899_cast_fp16")];
            tensor<string, []> k_41_pad_type_0 = const()[name = tensor<string, []>("k_41_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_41_strides_0 = const()[name = tensor<string, []>("k_41_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_41_pad_0 = const()[name = tensor<string, []>("k_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_41_dilations_0 = const()[name = tensor<string, []>("k_41_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_41_groups_0 = const()[name = tensor<string, []>("k_41_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_20_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(515790208)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_41_cast_fp16 = conv(dilations = k_41_dilations_0, groups = k_41_groups_0, pad = k_41_pad_0, pad_type = k_41_pad_type_0, strides = k_41_strides_0, weight = blocks_20_attn_key_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("k_41_cast_fp16")];
            tensor<string, []> var_4897_pad_type_0 = const()[name = tensor<string, []>("op_4897_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_4897_strides_0 = const()[name = tensor<string, []>("op_4897_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_4897_pad_0 = const()[name = tensor<string, []>("op_4897_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_4897_dilations_0 = const()[name = tensor<string, []>("op_4897_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_4897_groups_0 = const()[name = tensor<string, []>("op_4897_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_20_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(517887424)))];
            tensor<fp16, [1024]> blocks_20_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(519984640)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_4897_cast_fp16 = conv(bias = blocks_20_attn_value_bias_to_fp16, dilations = var_4897_dilations_0, groups = var_4897_groups_0, pad = var_4897_pad_0, pad_type = var_4897_pad_type_0, strides = var_4897_strides_0, weight = blocks_20_attn_value_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_4897_cast_fp16")];
            tensor<int32, [16]> tile_60 = const()[name = tensor<string, []>("tile_60"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4900_axis_0 = const()[name = tensor<string, []>("op_4900_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4900_cast_fp16_15 = split(axis = var_4900_axis_0, split_sizes = tile_60, x = var_4899_cast_fp16)[name = tensor<string, []>("op_4900_cast_fp16")];
            tensor<int32, [4]> var_4917_perm_0 = const()[name = tensor<string, []>("op_4917_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_61 = const()[name = tensor<string, []>("tile_61"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4918_axis_0 = const()[name = tensor<string, []>("op_4918_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_4917_cast_fp16 = transpose(perm = var_4917_perm_0, x = k_41_cast_fp16)[name = tensor<string, []>("transpose_4")];
            tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_4918_cast_fp16_15 = split(axis = var_4918_axis_0, split_sizes = tile_61, x = var_4917_cast_fp16)[name = tensor<string, []>("op_4918_cast_fp16")];
            tensor<int32, [16]> tile_62 = const()[name = tensor<string, []>("tile_62"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4935_axis_0 = const()[name = tensor<string, []>("op_4935_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_4935_cast_fp16_15 = split(axis = var_4935_axis_0, split_sizes = tile_62, x = var_4897_cast_fp16)[name = tensor<string, []>("op_4935_cast_fp16")];
            tensor<string, []> aw_641_equation_0 = const()[name = tensor<string, []>("aw_641_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_641_cast_fp16 = einsum(equation = aw_641_equation_0, values = (var_4918_cast_fp16_0, var_4900_cast_fp16_0))[name = tensor<string, []>("aw_641_cast_fp16")];
            tensor<string, []> aw_643_equation_0 = const()[name = tensor<string, []>("aw_643_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_643_cast_fp16 = einsum(equation = aw_643_equation_0, values = (var_4918_cast_fp16_1, var_4900_cast_fp16_1))[name = tensor<string, []>("aw_643_cast_fp16")];
            tensor<string, []> aw_645_equation_0 = const()[name = tensor<string, []>("aw_645_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_645_cast_fp16 = einsum(equation = aw_645_equation_0, values = (var_4918_cast_fp16_2, var_4900_cast_fp16_2))[name = tensor<string, []>("aw_645_cast_fp16")];
            tensor<string, []> aw_647_equation_0 = const()[name = tensor<string, []>("aw_647_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_647_cast_fp16 = einsum(equation = aw_647_equation_0, values = (var_4918_cast_fp16_3, var_4900_cast_fp16_3))[name = tensor<string, []>("aw_647_cast_fp16")];
            tensor<string, []> aw_649_equation_0 = const()[name = tensor<string, []>("aw_649_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_649_cast_fp16 = einsum(equation = aw_649_equation_0, values = (var_4918_cast_fp16_4, var_4900_cast_fp16_4))[name = tensor<string, []>("aw_649_cast_fp16")];
            tensor<string, []> aw_651_equation_0 = const()[name = tensor<string, []>("aw_651_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_651_cast_fp16 = einsum(equation = aw_651_equation_0, values = (var_4918_cast_fp16_5, var_4900_cast_fp16_5))[name = tensor<string, []>("aw_651_cast_fp16")];
            tensor<string, []> aw_653_equation_0 = const()[name = tensor<string, []>("aw_653_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_653_cast_fp16 = einsum(equation = aw_653_equation_0, values = (var_4918_cast_fp16_6, var_4900_cast_fp16_6))[name = tensor<string, []>("aw_653_cast_fp16")];
            tensor<string, []> aw_655_equation_0 = const()[name = tensor<string, []>("aw_655_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_655_cast_fp16 = einsum(equation = aw_655_equation_0, values = (var_4918_cast_fp16_7, var_4900_cast_fp16_7))[name = tensor<string, []>("aw_655_cast_fp16")];
            tensor<string, []> aw_657_equation_0 = const()[name = tensor<string, []>("aw_657_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_657_cast_fp16 = einsum(equation = aw_657_equation_0, values = (var_4918_cast_fp16_8, var_4900_cast_fp16_8))[name = tensor<string, []>("aw_657_cast_fp16")];
            tensor<string, []> aw_659_equation_0 = const()[name = tensor<string, []>("aw_659_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_659_cast_fp16 = einsum(equation = aw_659_equation_0, values = (var_4918_cast_fp16_9, var_4900_cast_fp16_9))[name = tensor<string, []>("aw_659_cast_fp16")];
            tensor<string, []> aw_661_equation_0 = const()[name = tensor<string, []>("aw_661_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_661_cast_fp16 = einsum(equation = aw_661_equation_0, values = (var_4918_cast_fp16_10, var_4900_cast_fp16_10))[name = tensor<string, []>("aw_661_cast_fp16")];
            tensor<string, []> aw_663_equation_0 = const()[name = tensor<string, []>("aw_663_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_663_cast_fp16 = einsum(equation = aw_663_equation_0, values = (var_4918_cast_fp16_11, var_4900_cast_fp16_11))[name = tensor<string, []>("aw_663_cast_fp16")];
            tensor<string, []> aw_665_equation_0 = const()[name = tensor<string, []>("aw_665_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_665_cast_fp16 = einsum(equation = aw_665_equation_0, values = (var_4918_cast_fp16_12, var_4900_cast_fp16_12))[name = tensor<string, []>("aw_665_cast_fp16")];
            tensor<string, []> aw_667_equation_0 = const()[name = tensor<string, []>("aw_667_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_667_cast_fp16 = einsum(equation = aw_667_equation_0, values = (var_4918_cast_fp16_13, var_4900_cast_fp16_13))[name = tensor<string, []>("aw_667_cast_fp16")];
            tensor<string, []> aw_669_equation_0 = const()[name = tensor<string, []>("aw_669_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_669_cast_fp16 = einsum(equation = aw_669_equation_0, values = (var_4918_cast_fp16_14, var_4900_cast_fp16_14))[name = tensor<string, []>("aw_669_cast_fp16")];
            tensor<string, []> aw_671_equation_0 = const()[name = tensor<string, []>("aw_671_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_671_cast_fp16 = einsum(equation = aw_671_equation_0, values = (var_4918_cast_fp16_15, var_4900_cast_fp16_15))[name = tensor<string, []>("aw_671_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4984_cast_fp16 = softmax(axis = var_4848, x = aw_641_cast_fp16)[name = tensor<string, []>("op_4984_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4985_cast_fp16 = softmax(axis = var_4848, x = aw_643_cast_fp16)[name = tensor<string, []>("op_4985_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4986_cast_fp16 = softmax(axis = var_4848, x = aw_645_cast_fp16)[name = tensor<string, []>("op_4986_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4987_cast_fp16 = softmax(axis = var_4848, x = aw_647_cast_fp16)[name = tensor<string, []>("op_4987_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4988_cast_fp16 = softmax(axis = var_4848, x = aw_649_cast_fp16)[name = tensor<string, []>("op_4988_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4989_cast_fp16 = softmax(axis = var_4848, x = aw_651_cast_fp16)[name = tensor<string, []>("op_4989_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4990_cast_fp16 = softmax(axis = var_4848, x = aw_653_cast_fp16)[name = tensor<string, []>("op_4990_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4991_cast_fp16 = softmax(axis = var_4848, x = aw_655_cast_fp16)[name = tensor<string, []>("op_4991_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4992_cast_fp16 = softmax(axis = var_4848, x = aw_657_cast_fp16)[name = tensor<string, []>("op_4992_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4993_cast_fp16 = softmax(axis = var_4848, x = aw_659_cast_fp16)[name = tensor<string, []>("op_4993_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4994_cast_fp16 = softmax(axis = var_4848, x = aw_661_cast_fp16)[name = tensor<string, []>("op_4994_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4995_cast_fp16 = softmax(axis = var_4848, x = aw_663_cast_fp16)[name = tensor<string, []>("op_4995_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4996_cast_fp16 = softmax(axis = var_4848, x = aw_665_cast_fp16)[name = tensor<string, []>("op_4996_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4997_cast_fp16 = softmax(axis = var_4848, x = aw_667_cast_fp16)[name = tensor<string, []>("op_4997_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4998_cast_fp16 = softmax(axis = var_4848, x = aw_669_cast_fp16)[name = tensor<string, []>("op_4998_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_4999_cast_fp16 = softmax(axis = var_4848, x = aw_671_cast_fp16)[name = tensor<string, []>("op_4999_cast_fp16")];
            tensor<string, []> var_5001_equation_0 = const()[name = tensor<string, []>("op_5001_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5001_cast_fp16 = einsum(equation = var_5001_equation_0, values = (var_4935_cast_fp16_0, var_4984_cast_fp16))[name = tensor<string, []>("op_5001_cast_fp16")];
            tensor<string, []> var_5003_equation_0 = const()[name = tensor<string, []>("op_5003_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5003_cast_fp16 = einsum(equation = var_5003_equation_0, values = (var_4935_cast_fp16_1, var_4985_cast_fp16))[name = tensor<string, []>("op_5003_cast_fp16")];
            tensor<string, []> var_5005_equation_0 = const()[name = tensor<string, []>("op_5005_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5005_cast_fp16 = einsum(equation = var_5005_equation_0, values = (var_4935_cast_fp16_2, var_4986_cast_fp16))[name = tensor<string, []>("op_5005_cast_fp16")];
            tensor<string, []> var_5007_equation_0 = const()[name = tensor<string, []>("op_5007_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5007_cast_fp16 = einsum(equation = var_5007_equation_0, values = (var_4935_cast_fp16_3, var_4987_cast_fp16))[name = tensor<string, []>("op_5007_cast_fp16")];
            tensor<string, []> var_5009_equation_0 = const()[name = tensor<string, []>("op_5009_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5009_cast_fp16 = einsum(equation = var_5009_equation_0, values = (var_4935_cast_fp16_4, var_4988_cast_fp16))[name = tensor<string, []>("op_5009_cast_fp16")];
            tensor<string, []> var_5011_equation_0 = const()[name = tensor<string, []>("op_5011_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5011_cast_fp16 = einsum(equation = var_5011_equation_0, values = (var_4935_cast_fp16_5, var_4989_cast_fp16))[name = tensor<string, []>("op_5011_cast_fp16")];
            tensor<string, []> var_5013_equation_0 = const()[name = tensor<string, []>("op_5013_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5013_cast_fp16 = einsum(equation = var_5013_equation_0, values = (var_4935_cast_fp16_6, var_4990_cast_fp16))[name = tensor<string, []>("op_5013_cast_fp16")];
            tensor<string, []> var_5015_equation_0 = const()[name = tensor<string, []>("op_5015_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5015_cast_fp16 = einsum(equation = var_5015_equation_0, values = (var_4935_cast_fp16_7, var_4991_cast_fp16))[name = tensor<string, []>("op_5015_cast_fp16")];
            tensor<string, []> var_5017_equation_0 = const()[name = tensor<string, []>("op_5017_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5017_cast_fp16 = einsum(equation = var_5017_equation_0, values = (var_4935_cast_fp16_8, var_4992_cast_fp16))[name = tensor<string, []>("op_5017_cast_fp16")];
            tensor<string, []> var_5019_equation_0 = const()[name = tensor<string, []>("op_5019_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5019_cast_fp16 = einsum(equation = var_5019_equation_0, values = (var_4935_cast_fp16_9, var_4993_cast_fp16))[name = tensor<string, []>("op_5019_cast_fp16")];
            tensor<string, []> var_5021_equation_0 = const()[name = tensor<string, []>("op_5021_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5021_cast_fp16 = einsum(equation = var_5021_equation_0, values = (var_4935_cast_fp16_10, var_4994_cast_fp16))[name = tensor<string, []>("op_5021_cast_fp16")];
            tensor<string, []> var_5023_equation_0 = const()[name = tensor<string, []>("op_5023_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5023_cast_fp16 = einsum(equation = var_5023_equation_0, values = (var_4935_cast_fp16_11, var_4995_cast_fp16))[name = tensor<string, []>("op_5023_cast_fp16")];
            tensor<string, []> var_5025_equation_0 = const()[name = tensor<string, []>("op_5025_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5025_cast_fp16 = einsum(equation = var_5025_equation_0, values = (var_4935_cast_fp16_12, var_4996_cast_fp16))[name = tensor<string, []>("op_5025_cast_fp16")];
            tensor<string, []> var_5027_equation_0 = const()[name = tensor<string, []>("op_5027_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5027_cast_fp16 = einsum(equation = var_5027_equation_0, values = (var_4935_cast_fp16_13, var_4997_cast_fp16))[name = tensor<string, []>("op_5027_cast_fp16")];
            tensor<string, []> var_5029_equation_0 = const()[name = tensor<string, []>("op_5029_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5029_cast_fp16 = einsum(equation = var_5029_equation_0, values = (var_4935_cast_fp16_14, var_4998_cast_fp16))[name = tensor<string, []>("op_5029_cast_fp16")];
            tensor<string, []> var_5031_equation_0 = const()[name = tensor<string, []>("op_5031_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5031_cast_fp16 = einsum(equation = var_5031_equation_0, values = (var_4935_cast_fp16_15, var_4999_cast_fp16))[name = tensor<string, []>("op_5031_cast_fp16")];
            tensor<bool, []> input_205_interleave_0 = const()[name = tensor<string, []>("input_205_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_205_cast_fp16 = concat(axis = var_4848, interleave = input_205_interleave_0, values = (var_5001_cast_fp16, var_5003_cast_fp16, var_5005_cast_fp16, var_5007_cast_fp16, var_5009_cast_fp16, var_5011_cast_fp16, var_5013_cast_fp16, var_5015_cast_fp16, var_5017_cast_fp16, var_5019_cast_fp16, var_5021_cast_fp16, var_5023_cast_fp16, var_5025_cast_fp16, var_5027_cast_fp16, var_5029_cast_fp16, var_5031_cast_fp16))[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<string, []> var_5040_pad_type_0 = const()[name = tensor<string, []>("op_5040_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5040_strides_0 = const()[name = tensor<string, []>("op_5040_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5040_pad_0 = const()[name = tensor<string, []>("op_5040_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5040_dilations_0 = const()[name = tensor<string, []>("op_5040_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5040_groups_0 = const()[name = tensor<string, []>("op_5040_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_20_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(519986752)))];
            tensor<fp16, [1024]> blocks_20_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_20_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(522083968)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5040_cast_fp16 = conv(bias = blocks_20_attn_out_bias_to_fp16, dilations = var_5040_dilations_0, groups = var_5040_groups_0, pad = var_5040_pad_0, pad_type = var_5040_pad_type_0, strides = var_5040_strides_0, weight = blocks_20_attn_out_weight_to_fp16, x = input_205_cast_fp16)[name = tensor<string, []>("op_5040_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_83_cast_fp16 = add(x = inputs_81_cast_fp16, y = var_5040_cast_fp16)[name = tensor<string, []>("inputs_83_cast_fp16")];
            tensor<int32, [1]> input_207_axes_0 = const()[name = tensor<string, []>("input_207_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_207_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_207_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(522086080)))];
            tensor<fp16, [1024]> input_207_beta_0_to_fp16 = const()[name = tensor<string, []>("input_207_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(522088192)))];
            tensor<fp16, []> var_5050_to_fp16 = const()[name = tensor<string, []>("op_5050_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_207_cast_fp16 = layer_norm(axes = input_207_axes_0, beta = input_207_beta_0_to_fp16, epsilon = var_5050_to_fp16, gamma = input_207_gamma_0_to_fp16, x = inputs_83_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<string, []> input_209_pad_type_0 = const()[name = tensor<string, []>("input_209_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_209_strides_0 = const()[name = tensor<string, []>("input_209_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_209_pad_0 = const()[name = tensor<string, []>("input_209_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_209_dilations_0 = const()[name = tensor<string, []>("input_209_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_209_groups_0 = const()[name = tensor<string, []>("input_209_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_20_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(522090304)))];
            tensor<fp16, [4096]> blocks_20_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_20_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(530478976)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_209_cast_fp16 = conv(bias = blocks_20_mlp_0_bias_to_fp16, dilations = input_209_dilations_0, groups = input_209_groups_0, pad = input_209_pad_0, pad_type = input_209_pad_type_0, strides = input_209_strides_0, weight = blocks_20_mlp_0_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<string, []> input_211_mode_0 = const()[name = tensor<string, []>("input_211_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_211_cast_fp16 = gelu(mode = input_211_mode_0, x = input_209_cast_fp16)[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<string, []> var_5076_pad_type_0 = const()[name = tensor<string, []>("op_5076_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5076_strides_0 = const()[name = tensor<string, []>("op_5076_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5076_pad_0 = const()[name = tensor<string, []>("op_5076_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5076_dilations_0 = const()[name = tensor<string, []>("op_5076_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5076_groups_0 = const()[name = tensor<string, []>("op_5076_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_20_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_20_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(530487232)))];
            tensor<fp16, [1024]> blocks_20_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_20_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(538875904)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5076_cast_fp16 = conv(bias = blocks_20_mlp_2_bias_to_fp16, dilations = var_5076_dilations_0, groups = var_5076_groups_0, pad = var_5076_pad_0, pad_type = var_5076_pad_type_0, strides = var_5076_strides_0, weight = blocks_20_mlp_2_weight_to_fp16, x = input_211_cast_fp16)[name = tensor<string, []>("op_5076_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_85_cast_fp16 = add(x = inputs_83_cast_fp16, y = var_5076_cast_fp16)[name = tensor<string, []>("inputs_85_cast_fp16")];
            tensor<int32, []> var_5085 = const()[name = tensor<string, []>("op_5085"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_213_axes_0 = const()[name = tensor<string, []>("input_213_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_213_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_213_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(538878016)))];
            tensor<fp16, [1024]> input_213_beta_0_to_fp16 = const()[name = tensor<string, []>("input_213_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(538880128)))];
            tensor<fp16, []> var_5101_to_fp16 = const()[name = tensor<string, []>("op_5101_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_213_cast_fp16 = layer_norm(axes = input_213_axes_0, beta = input_213_beta_0_to_fp16, epsilon = var_5101_to_fp16, gamma = input_213_gamma_0_to_fp16, x = inputs_85_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<string, []> q_43_pad_type_0 = const()[name = tensor<string, []>("q_43_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_43_strides_0 = const()[name = tensor<string, []>("q_43_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_43_pad_0 = const()[name = tensor<string, []>("q_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_43_dilations_0 = const()[name = tensor<string, []>("q_43_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_43_groups_0 = const()[name = tensor<string, []>("q_43_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_5136_weight_0_to_fp16 = const()[name = tensor<string, []>("op_5136_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(538882240)))];
            tensor<fp16, [1024]> var_5136_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5136_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(540979456)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5136_cast_fp16 = conv(bias = var_5136_bias_0_to_fp16, dilations = q_43_dilations_0, groups = q_43_groups_0, pad = q_43_pad_0, pad_type = q_43_pad_type_0, strides = q_43_strides_0, weight = var_5136_weight_0_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("op_5136_cast_fp16")];
            tensor<string, []> k_43_pad_type_0 = const()[name = tensor<string, []>("k_43_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_43_strides_0 = const()[name = tensor<string, []>("k_43_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_43_pad_0 = const()[name = tensor<string, []>("k_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_43_dilations_0 = const()[name = tensor<string, []>("k_43_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_43_groups_0 = const()[name = tensor<string, []>("k_43_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_21_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(540981568)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_43_cast_fp16 = conv(dilations = k_43_dilations_0, groups = k_43_groups_0, pad = k_43_pad_0, pad_type = k_43_pad_type_0, strides = k_43_strides_0, weight = blocks_21_attn_key_weight_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("k_43_cast_fp16")];
            tensor<string, []> var_5134_pad_type_0 = const()[name = tensor<string, []>("op_5134_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5134_strides_0 = const()[name = tensor<string, []>("op_5134_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5134_pad_0 = const()[name = tensor<string, []>("op_5134_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5134_dilations_0 = const()[name = tensor<string, []>("op_5134_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5134_groups_0 = const()[name = tensor<string, []>("op_5134_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_21_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(543078784)))];
            tensor<fp16, [1024]> blocks_21_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(545176000)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5134_cast_fp16 = conv(bias = blocks_21_attn_value_bias_to_fp16, dilations = var_5134_dilations_0, groups = var_5134_groups_0, pad = var_5134_pad_0, pad_type = var_5134_pad_type_0, strides = var_5134_strides_0, weight = blocks_21_attn_value_weight_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("op_5134_cast_fp16")];
            tensor<int32, [16]> tile_63 = const()[name = tensor<string, []>("tile_63"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5137_axis_0 = const()[name = tensor<string, []>("op_5137_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5137_cast_fp16_15 = split(axis = var_5137_axis_0, split_sizes = tile_63, x = var_5136_cast_fp16)[name = tensor<string, []>("op_5137_cast_fp16")];
            tensor<int32, [4]> var_5154_perm_0 = const()[name = tensor<string, []>("op_5154_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_64 = const()[name = tensor<string, []>("tile_64"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5155_axis_0 = const()[name = tensor<string, []>("op_5155_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_5154_cast_fp16 = transpose(perm = var_5154_perm_0, x = k_43_cast_fp16)[name = tensor<string, []>("transpose_3")];
            tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_5155_cast_fp16_15 = split(axis = var_5155_axis_0, split_sizes = tile_64, x = var_5154_cast_fp16)[name = tensor<string, []>("op_5155_cast_fp16")];
            tensor<int32, [16]> tile_65 = const()[name = tensor<string, []>("tile_65"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5172_axis_0 = const()[name = tensor<string, []>("op_5172_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5172_cast_fp16_15 = split(axis = var_5172_axis_0, split_sizes = tile_65, x = var_5134_cast_fp16)[name = tensor<string, []>("op_5172_cast_fp16")];
            tensor<string, []> aw_673_equation_0 = const()[name = tensor<string, []>("aw_673_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_673_cast_fp16 = einsum(equation = aw_673_equation_0, values = (var_5155_cast_fp16_0, var_5137_cast_fp16_0))[name = tensor<string, []>("aw_673_cast_fp16")];
            tensor<string, []> aw_675_equation_0 = const()[name = tensor<string, []>("aw_675_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_675_cast_fp16 = einsum(equation = aw_675_equation_0, values = (var_5155_cast_fp16_1, var_5137_cast_fp16_1))[name = tensor<string, []>("aw_675_cast_fp16")];
            tensor<string, []> aw_677_equation_0 = const()[name = tensor<string, []>("aw_677_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_677_cast_fp16 = einsum(equation = aw_677_equation_0, values = (var_5155_cast_fp16_2, var_5137_cast_fp16_2))[name = tensor<string, []>("aw_677_cast_fp16")];
            tensor<string, []> aw_679_equation_0 = const()[name = tensor<string, []>("aw_679_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_679_cast_fp16 = einsum(equation = aw_679_equation_0, values = (var_5155_cast_fp16_3, var_5137_cast_fp16_3))[name = tensor<string, []>("aw_679_cast_fp16")];
            tensor<string, []> aw_681_equation_0 = const()[name = tensor<string, []>("aw_681_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_681_cast_fp16 = einsum(equation = aw_681_equation_0, values = (var_5155_cast_fp16_4, var_5137_cast_fp16_4))[name = tensor<string, []>("aw_681_cast_fp16")];
            tensor<string, []> aw_683_equation_0 = const()[name = tensor<string, []>("aw_683_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_683_cast_fp16 = einsum(equation = aw_683_equation_0, values = (var_5155_cast_fp16_5, var_5137_cast_fp16_5))[name = tensor<string, []>("aw_683_cast_fp16")];
            tensor<string, []> aw_685_equation_0 = const()[name = tensor<string, []>("aw_685_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_685_cast_fp16 = einsum(equation = aw_685_equation_0, values = (var_5155_cast_fp16_6, var_5137_cast_fp16_6))[name = tensor<string, []>("aw_685_cast_fp16")];
            tensor<string, []> aw_687_equation_0 = const()[name = tensor<string, []>("aw_687_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_687_cast_fp16 = einsum(equation = aw_687_equation_0, values = (var_5155_cast_fp16_7, var_5137_cast_fp16_7))[name = tensor<string, []>("aw_687_cast_fp16")];
            tensor<string, []> aw_689_equation_0 = const()[name = tensor<string, []>("aw_689_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_689_cast_fp16 = einsum(equation = aw_689_equation_0, values = (var_5155_cast_fp16_8, var_5137_cast_fp16_8))[name = tensor<string, []>("aw_689_cast_fp16")];
            tensor<string, []> aw_691_equation_0 = const()[name = tensor<string, []>("aw_691_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_691_cast_fp16 = einsum(equation = aw_691_equation_0, values = (var_5155_cast_fp16_9, var_5137_cast_fp16_9))[name = tensor<string, []>("aw_691_cast_fp16")];
            tensor<string, []> aw_693_equation_0 = const()[name = tensor<string, []>("aw_693_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_693_cast_fp16 = einsum(equation = aw_693_equation_0, values = (var_5155_cast_fp16_10, var_5137_cast_fp16_10))[name = tensor<string, []>("aw_693_cast_fp16")];
            tensor<string, []> aw_695_equation_0 = const()[name = tensor<string, []>("aw_695_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_695_cast_fp16 = einsum(equation = aw_695_equation_0, values = (var_5155_cast_fp16_11, var_5137_cast_fp16_11))[name = tensor<string, []>("aw_695_cast_fp16")];
            tensor<string, []> aw_697_equation_0 = const()[name = tensor<string, []>("aw_697_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_697_cast_fp16 = einsum(equation = aw_697_equation_0, values = (var_5155_cast_fp16_12, var_5137_cast_fp16_12))[name = tensor<string, []>("aw_697_cast_fp16")];
            tensor<string, []> aw_699_equation_0 = const()[name = tensor<string, []>("aw_699_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_699_cast_fp16 = einsum(equation = aw_699_equation_0, values = (var_5155_cast_fp16_13, var_5137_cast_fp16_13))[name = tensor<string, []>("aw_699_cast_fp16")];
            tensor<string, []> aw_701_equation_0 = const()[name = tensor<string, []>("aw_701_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_701_cast_fp16 = einsum(equation = aw_701_equation_0, values = (var_5155_cast_fp16_14, var_5137_cast_fp16_14))[name = tensor<string, []>("aw_701_cast_fp16")];
            tensor<string, []> aw_703_equation_0 = const()[name = tensor<string, []>("aw_703_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_703_cast_fp16 = einsum(equation = aw_703_equation_0, values = (var_5155_cast_fp16_15, var_5137_cast_fp16_15))[name = tensor<string, []>("aw_703_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5221_cast_fp16 = softmax(axis = var_5085, x = aw_673_cast_fp16)[name = tensor<string, []>("op_5221_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5222_cast_fp16 = softmax(axis = var_5085, x = aw_675_cast_fp16)[name = tensor<string, []>("op_5222_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5223_cast_fp16 = softmax(axis = var_5085, x = aw_677_cast_fp16)[name = tensor<string, []>("op_5223_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5224_cast_fp16 = softmax(axis = var_5085, x = aw_679_cast_fp16)[name = tensor<string, []>("op_5224_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5225_cast_fp16 = softmax(axis = var_5085, x = aw_681_cast_fp16)[name = tensor<string, []>("op_5225_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5226_cast_fp16 = softmax(axis = var_5085, x = aw_683_cast_fp16)[name = tensor<string, []>("op_5226_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5227_cast_fp16 = softmax(axis = var_5085, x = aw_685_cast_fp16)[name = tensor<string, []>("op_5227_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5228_cast_fp16 = softmax(axis = var_5085, x = aw_687_cast_fp16)[name = tensor<string, []>("op_5228_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5229_cast_fp16 = softmax(axis = var_5085, x = aw_689_cast_fp16)[name = tensor<string, []>("op_5229_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5230_cast_fp16 = softmax(axis = var_5085, x = aw_691_cast_fp16)[name = tensor<string, []>("op_5230_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5231_cast_fp16 = softmax(axis = var_5085, x = aw_693_cast_fp16)[name = tensor<string, []>("op_5231_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5232_cast_fp16 = softmax(axis = var_5085, x = aw_695_cast_fp16)[name = tensor<string, []>("op_5232_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5233_cast_fp16 = softmax(axis = var_5085, x = aw_697_cast_fp16)[name = tensor<string, []>("op_5233_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5234_cast_fp16 = softmax(axis = var_5085, x = aw_699_cast_fp16)[name = tensor<string, []>("op_5234_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5235_cast_fp16 = softmax(axis = var_5085, x = aw_701_cast_fp16)[name = tensor<string, []>("op_5235_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5236_cast_fp16 = softmax(axis = var_5085, x = aw_703_cast_fp16)[name = tensor<string, []>("op_5236_cast_fp16")];
            tensor<string, []> var_5238_equation_0 = const()[name = tensor<string, []>("op_5238_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5238_cast_fp16 = einsum(equation = var_5238_equation_0, values = (var_5172_cast_fp16_0, var_5221_cast_fp16))[name = tensor<string, []>("op_5238_cast_fp16")];
            tensor<string, []> var_5240_equation_0 = const()[name = tensor<string, []>("op_5240_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5240_cast_fp16 = einsum(equation = var_5240_equation_0, values = (var_5172_cast_fp16_1, var_5222_cast_fp16))[name = tensor<string, []>("op_5240_cast_fp16")];
            tensor<string, []> var_5242_equation_0 = const()[name = tensor<string, []>("op_5242_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5242_cast_fp16 = einsum(equation = var_5242_equation_0, values = (var_5172_cast_fp16_2, var_5223_cast_fp16))[name = tensor<string, []>("op_5242_cast_fp16")];
            tensor<string, []> var_5244_equation_0 = const()[name = tensor<string, []>("op_5244_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5244_cast_fp16 = einsum(equation = var_5244_equation_0, values = (var_5172_cast_fp16_3, var_5224_cast_fp16))[name = tensor<string, []>("op_5244_cast_fp16")];
            tensor<string, []> var_5246_equation_0 = const()[name = tensor<string, []>("op_5246_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5246_cast_fp16 = einsum(equation = var_5246_equation_0, values = (var_5172_cast_fp16_4, var_5225_cast_fp16))[name = tensor<string, []>("op_5246_cast_fp16")];
            tensor<string, []> var_5248_equation_0 = const()[name = tensor<string, []>("op_5248_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5248_cast_fp16 = einsum(equation = var_5248_equation_0, values = (var_5172_cast_fp16_5, var_5226_cast_fp16))[name = tensor<string, []>("op_5248_cast_fp16")];
            tensor<string, []> var_5250_equation_0 = const()[name = tensor<string, []>("op_5250_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5250_cast_fp16 = einsum(equation = var_5250_equation_0, values = (var_5172_cast_fp16_6, var_5227_cast_fp16))[name = tensor<string, []>("op_5250_cast_fp16")];
            tensor<string, []> var_5252_equation_0 = const()[name = tensor<string, []>("op_5252_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5252_cast_fp16 = einsum(equation = var_5252_equation_0, values = (var_5172_cast_fp16_7, var_5228_cast_fp16))[name = tensor<string, []>("op_5252_cast_fp16")];
            tensor<string, []> var_5254_equation_0 = const()[name = tensor<string, []>("op_5254_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5254_cast_fp16 = einsum(equation = var_5254_equation_0, values = (var_5172_cast_fp16_8, var_5229_cast_fp16))[name = tensor<string, []>("op_5254_cast_fp16")];
            tensor<string, []> var_5256_equation_0 = const()[name = tensor<string, []>("op_5256_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5256_cast_fp16 = einsum(equation = var_5256_equation_0, values = (var_5172_cast_fp16_9, var_5230_cast_fp16))[name = tensor<string, []>("op_5256_cast_fp16")];
            tensor<string, []> var_5258_equation_0 = const()[name = tensor<string, []>("op_5258_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5258_cast_fp16 = einsum(equation = var_5258_equation_0, values = (var_5172_cast_fp16_10, var_5231_cast_fp16))[name = tensor<string, []>("op_5258_cast_fp16")];
            tensor<string, []> var_5260_equation_0 = const()[name = tensor<string, []>("op_5260_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5260_cast_fp16 = einsum(equation = var_5260_equation_0, values = (var_5172_cast_fp16_11, var_5232_cast_fp16))[name = tensor<string, []>("op_5260_cast_fp16")];
            tensor<string, []> var_5262_equation_0 = const()[name = tensor<string, []>("op_5262_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5262_cast_fp16 = einsum(equation = var_5262_equation_0, values = (var_5172_cast_fp16_12, var_5233_cast_fp16))[name = tensor<string, []>("op_5262_cast_fp16")];
            tensor<string, []> var_5264_equation_0 = const()[name = tensor<string, []>("op_5264_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5264_cast_fp16 = einsum(equation = var_5264_equation_0, values = (var_5172_cast_fp16_13, var_5234_cast_fp16))[name = tensor<string, []>("op_5264_cast_fp16")];
            tensor<string, []> var_5266_equation_0 = const()[name = tensor<string, []>("op_5266_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5266_cast_fp16 = einsum(equation = var_5266_equation_0, values = (var_5172_cast_fp16_14, var_5235_cast_fp16))[name = tensor<string, []>("op_5266_cast_fp16")];
            tensor<string, []> var_5268_equation_0 = const()[name = tensor<string, []>("op_5268_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5268_cast_fp16 = einsum(equation = var_5268_equation_0, values = (var_5172_cast_fp16_15, var_5236_cast_fp16))[name = tensor<string, []>("op_5268_cast_fp16")];
            tensor<bool, []> input_215_interleave_0 = const()[name = tensor<string, []>("input_215_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_215_cast_fp16 = concat(axis = var_5085, interleave = input_215_interleave_0, values = (var_5238_cast_fp16, var_5240_cast_fp16, var_5242_cast_fp16, var_5244_cast_fp16, var_5246_cast_fp16, var_5248_cast_fp16, var_5250_cast_fp16, var_5252_cast_fp16, var_5254_cast_fp16, var_5256_cast_fp16, var_5258_cast_fp16, var_5260_cast_fp16, var_5262_cast_fp16, var_5264_cast_fp16, var_5266_cast_fp16, var_5268_cast_fp16))[name = tensor<string, []>("input_215_cast_fp16")];
            tensor<string, []> var_5277_pad_type_0 = const()[name = tensor<string, []>("op_5277_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5277_strides_0 = const()[name = tensor<string, []>("op_5277_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5277_pad_0 = const()[name = tensor<string, []>("op_5277_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5277_dilations_0 = const()[name = tensor<string, []>("op_5277_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5277_groups_0 = const()[name = tensor<string, []>("op_5277_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_21_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(545178112)))];
            tensor<fp16, [1024]> blocks_21_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_21_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(547275328)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5277_cast_fp16 = conv(bias = blocks_21_attn_out_bias_to_fp16, dilations = var_5277_dilations_0, groups = var_5277_groups_0, pad = var_5277_pad_0, pad_type = var_5277_pad_type_0, strides = var_5277_strides_0, weight = blocks_21_attn_out_weight_to_fp16, x = input_215_cast_fp16)[name = tensor<string, []>("op_5277_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_87_cast_fp16 = add(x = inputs_85_cast_fp16, y = var_5277_cast_fp16)[name = tensor<string, []>("inputs_87_cast_fp16")];
            tensor<int32, [1]> input_217_axes_0 = const()[name = tensor<string, []>("input_217_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_217_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_217_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(547277440)))];
            tensor<fp16, [1024]> input_217_beta_0_to_fp16 = const()[name = tensor<string, []>("input_217_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(547279552)))];
            tensor<fp16, []> var_5287_to_fp16 = const()[name = tensor<string, []>("op_5287_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_217_cast_fp16 = layer_norm(axes = input_217_axes_0, beta = input_217_beta_0_to_fp16, epsilon = var_5287_to_fp16, gamma = input_217_gamma_0_to_fp16, x = inputs_87_cast_fp16)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<string, []> input_219_pad_type_0 = const()[name = tensor<string, []>("input_219_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_219_strides_0 = const()[name = tensor<string, []>("input_219_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_219_pad_0 = const()[name = tensor<string, []>("input_219_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_219_dilations_0 = const()[name = tensor<string, []>("input_219_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_219_groups_0 = const()[name = tensor<string, []>("input_219_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_21_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(547281664)))];
            tensor<fp16, [4096]> blocks_21_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_21_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(555670336)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_219_cast_fp16 = conv(bias = blocks_21_mlp_0_bias_to_fp16, dilations = input_219_dilations_0, groups = input_219_groups_0, pad = input_219_pad_0, pad_type = input_219_pad_type_0, strides = input_219_strides_0, weight = blocks_21_mlp_0_weight_to_fp16, x = input_217_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<string, []> input_221_mode_0 = const()[name = tensor<string, []>("input_221_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_221_cast_fp16 = gelu(mode = input_221_mode_0, x = input_219_cast_fp16)[name = tensor<string, []>("input_221_cast_fp16")];
            tensor<string, []> var_5313_pad_type_0 = const()[name = tensor<string, []>("op_5313_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5313_strides_0 = const()[name = tensor<string, []>("op_5313_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5313_pad_0 = const()[name = tensor<string, []>("op_5313_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5313_dilations_0 = const()[name = tensor<string, []>("op_5313_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5313_groups_0 = const()[name = tensor<string, []>("op_5313_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_21_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_21_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(555678592)))];
            tensor<fp16, [1024]> blocks_21_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_21_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(564067264)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5313_cast_fp16 = conv(bias = blocks_21_mlp_2_bias_to_fp16, dilations = var_5313_dilations_0, groups = var_5313_groups_0, pad = var_5313_pad_0, pad_type = var_5313_pad_type_0, strides = var_5313_strides_0, weight = blocks_21_mlp_2_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("op_5313_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_89_cast_fp16 = add(x = inputs_87_cast_fp16, y = var_5313_cast_fp16)[name = tensor<string, []>("inputs_89_cast_fp16")];
            tensor<int32, []> var_5322 = const()[name = tensor<string, []>("op_5322"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_223_axes_0 = const()[name = tensor<string, []>("input_223_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_223_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_223_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(564069376)))];
            tensor<fp16, [1024]> input_223_beta_0_to_fp16 = const()[name = tensor<string, []>("input_223_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(564071488)))];
            tensor<fp16, []> var_5338_to_fp16 = const()[name = tensor<string, []>("op_5338_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_223_cast_fp16 = layer_norm(axes = input_223_axes_0, beta = input_223_beta_0_to_fp16, epsilon = var_5338_to_fp16, gamma = input_223_gamma_0_to_fp16, x = inputs_89_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<string, []> q_45_pad_type_0 = const()[name = tensor<string, []>("q_45_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_45_strides_0 = const()[name = tensor<string, []>("q_45_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_45_pad_0 = const()[name = tensor<string, []>("q_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_45_dilations_0 = const()[name = tensor<string, []>("q_45_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_45_groups_0 = const()[name = tensor<string, []>("q_45_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_5373_weight_0_to_fp16 = const()[name = tensor<string, []>("op_5373_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(564073600)))];
            tensor<fp16, [1024]> var_5373_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5373_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(566170816)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5373_cast_fp16 = conv(bias = var_5373_bias_0_to_fp16, dilations = q_45_dilations_0, groups = q_45_groups_0, pad = q_45_pad_0, pad_type = q_45_pad_type_0, strides = q_45_strides_0, weight = var_5373_weight_0_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("op_5373_cast_fp16")];
            tensor<string, []> k_45_pad_type_0 = const()[name = tensor<string, []>("k_45_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_45_strides_0 = const()[name = tensor<string, []>("k_45_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_45_pad_0 = const()[name = tensor<string, []>("k_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_45_dilations_0 = const()[name = tensor<string, []>("k_45_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_45_groups_0 = const()[name = tensor<string, []>("k_45_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_22_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(566172928)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_45_cast_fp16 = conv(dilations = k_45_dilations_0, groups = k_45_groups_0, pad = k_45_pad_0, pad_type = k_45_pad_type_0, strides = k_45_strides_0, weight = blocks_22_attn_key_weight_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("k_45_cast_fp16")];
            tensor<string, []> var_5371_pad_type_0 = const()[name = tensor<string, []>("op_5371_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5371_strides_0 = const()[name = tensor<string, []>("op_5371_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5371_pad_0 = const()[name = tensor<string, []>("op_5371_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5371_dilations_0 = const()[name = tensor<string, []>("op_5371_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5371_groups_0 = const()[name = tensor<string, []>("op_5371_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_22_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(568270144)))];
            tensor<fp16, [1024]> blocks_22_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(570367360)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5371_cast_fp16 = conv(bias = blocks_22_attn_value_bias_to_fp16, dilations = var_5371_dilations_0, groups = var_5371_groups_0, pad = var_5371_pad_0, pad_type = var_5371_pad_type_0, strides = var_5371_strides_0, weight = blocks_22_attn_value_weight_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("op_5371_cast_fp16")];
            tensor<int32, [16]> tile_66 = const()[name = tensor<string, []>("tile_66"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5374_axis_0 = const()[name = tensor<string, []>("op_5374_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5374_cast_fp16_15 = split(axis = var_5374_axis_0, split_sizes = tile_66, x = var_5373_cast_fp16)[name = tensor<string, []>("op_5374_cast_fp16")];
            tensor<int32, [4]> var_5391_perm_0 = const()[name = tensor<string, []>("op_5391_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_67 = const()[name = tensor<string, []>("tile_67"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5392_axis_0 = const()[name = tensor<string, []>("op_5392_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_5391_cast_fp16 = transpose(perm = var_5391_perm_0, x = k_45_cast_fp16)[name = tensor<string, []>("transpose_2")];
            tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_5392_cast_fp16_15 = split(axis = var_5392_axis_0, split_sizes = tile_67, x = var_5391_cast_fp16)[name = tensor<string, []>("op_5392_cast_fp16")];
            tensor<int32, [16]> tile_68 = const()[name = tensor<string, []>("tile_68"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5409_axis_0 = const()[name = tensor<string, []>("op_5409_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5409_cast_fp16_15 = split(axis = var_5409_axis_0, split_sizes = tile_68, x = var_5371_cast_fp16)[name = tensor<string, []>("op_5409_cast_fp16")];
            tensor<string, []> aw_705_equation_0 = const()[name = tensor<string, []>("aw_705_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_705_cast_fp16 = einsum(equation = aw_705_equation_0, values = (var_5392_cast_fp16_0, var_5374_cast_fp16_0))[name = tensor<string, []>("aw_705_cast_fp16")];
            tensor<string, []> aw_707_equation_0 = const()[name = tensor<string, []>("aw_707_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_707_cast_fp16 = einsum(equation = aw_707_equation_0, values = (var_5392_cast_fp16_1, var_5374_cast_fp16_1))[name = tensor<string, []>("aw_707_cast_fp16")];
            tensor<string, []> aw_709_equation_0 = const()[name = tensor<string, []>("aw_709_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_709_cast_fp16 = einsum(equation = aw_709_equation_0, values = (var_5392_cast_fp16_2, var_5374_cast_fp16_2))[name = tensor<string, []>("aw_709_cast_fp16")];
            tensor<string, []> aw_711_equation_0 = const()[name = tensor<string, []>("aw_711_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_711_cast_fp16 = einsum(equation = aw_711_equation_0, values = (var_5392_cast_fp16_3, var_5374_cast_fp16_3))[name = tensor<string, []>("aw_711_cast_fp16")];
            tensor<string, []> aw_713_equation_0 = const()[name = tensor<string, []>("aw_713_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_713_cast_fp16 = einsum(equation = aw_713_equation_0, values = (var_5392_cast_fp16_4, var_5374_cast_fp16_4))[name = tensor<string, []>("aw_713_cast_fp16")];
            tensor<string, []> aw_715_equation_0 = const()[name = tensor<string, []>("aw_715_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_715_cast_fp16 = einsum(equation = aw_715_equation_0, values = (var_5392_cast_fp16_5, var_5374_cast_fp16_5))[name = tensor<string, []>("aw_715_cast_fp16")];
            tensor<string, []> aw_717_equation_0 = const()[name = tensor<string, []>("aw_717_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_717_cast_fp16 = einsum(equation = aw_717_equation_0, values = (var_5392_cast_fp16_6, var_5374_cast_fp16_6))[name = tensor<string, []>("aw_717_cast_fp16")];
            tensor<string, []> aw_719_equation_0 = const()[name = tensor<string, []>("aw_719_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_719_cast_fp16 = einsum(equation = aw_719_equation_0, values = (var_5392_cast_fp16_7, var_5374_cast_fp16_7))[name = tensor<string, []>("aw_719_cast_fp16")];
            tensor<string, []> aw_721_equation_0 = const()[name = tensor<string, []>("aw_721_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_721_cast_fp16 = einsum(equation = aw_721_equation_0, values = (var_5392_cast_fp16_8, var_5374_cast_fp16_8))[name = tensor<string, []>("aw_721_cast_fp16")];
            tensor<string, []> aw_723_equation_0 = const()[name = tensor<string, []>("aw_723_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_723_cast_fp16 = einsum(equation = aw_723_equation_0, values = (var_5392_cast_fp16_9, var_5374_cast_fp16_9))[name = tensor<string, []>("aw_723_cast_fp16")];
            tensor<string, []> aw_725_equation_0 = const()[name = tensor<string, []>("aw_725_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_725_cast_fp16 = einsum(equation = aw_725_equation_0, values = (var_5392_cast_fp16_10, var_5374_cast_fp16_10))[name = tensor<string, []>("aw_725_cast_fp16")];
            tensor<string, []> aw_727_equation_0 = const()[name = tensor<string, []>("aw_727_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_727_cast_fp16 = einsum(equation = aw_727_equation_0, values = (var_5392_cast_fp16_11, var_5374_cast_fp16_11))[name = tensor<string, []>("aw_727_cast_fp16")];
            tensor<string, []> aw_729_equation_0 = const()[name = tensor<string, []>("aw_729_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_729_cast_fp16 = einsum(equation = aw_729_equation_0, values = (var_5392_cast_fp16_12, var_5374_cast_fp16_12))[name = tensor<string, []>("aw_729_cast_fp16")];
            tensor<string, []> aw_731_equation_0 = const()[name = tensor<string, []>("aw_731_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_731_cast_fp16 = einsum(equation = aw_731_equation_0, values = (var_5392_cast_fp16_13, var_5374_cast_fp16_13))[name = tensor<string, []>("aw_731_cast_fp16")];
            tensor<string, []> aw_733_equation_0 = const()[name = tensor<string, []>("aw_733_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_733_cast_fp16 = einsum(equation = aw_733_equation_0, values = (var_5392_cast_fp16_14, var_5374_cast_fp16_14))[name = tensor<string, []>("aw_733_cast_fp16")];
            tensor<string, []> aw_735_equation_0 = const()[name = tensor<string, []>("aw_735_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_735_cast_fp16 = einsum(equation = aw_735_equation_0, values = (var_5392_cast_fp16_15, var_5374_cast_fp16_15))[name = tensor<string, []>("aw_735_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5458_cast_fp16 = softmax(axis = var_5322, x = aw_705_cast_fp16)[name = tensor<string, []>("op_5458_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5459_cast_fp16 = softmax(axis = var_5322, x = aw_707_cast_fp16)[name = tensor<string, []>("op_5459_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5460_cast_fp16 = softmax(axis = var_5322, x = aw_709_cast_fp16)[name = tensor<string, []>("op_5460_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5461_cast_fp16 = softmax(axis = var_5322, x = aw_711_cast_fp16)[name = tensor<string, []>("op_5461_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5462_cast_fp16 = softmax(axis = var_5322, x = aw_713_cast_fp16)[name = tensor<string, []>("op_5462_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5463_cast_fp16 = softmax(axis = var_5322, x = aw_715_cast_fp16)[name = tensor<string, []>("op_5463_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5464_cast_fp16 = softmax(axis = var_5322, x = aw_717_cast_fp16)[name = tensor<string, []>("op_5464_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5465_cast_fp16 = softmax(axis = var_5322, x = aw_719_cast_fp16)[name = tensor<string, []>("op_5465_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5466_cast_fp16 = softmax(axis = var_5322, x = aw_721_cast_fp16)[name = tensor<string, []>("op_5466_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5467_cast_fp16 = softmax(axis = var_5322, x = aw_723_cast_fp16)[name = tensor<string, []>("op_5467_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5468_cast_fp16 = softmax(axis = var_5322, x = aw_725_cast_fp16)[name = tensor<string, []>("op_5468_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5469_cast_fp16 = softmax(axis = var_5322, x = aw_727_cast_fp16)[name = tensor<string, []>("op_5469_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5470_cast_fp16 = softmax(axis = var_5322, x = aw_729_cast_fp16)[name = tensor<string, []>("op_5470_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5471_cast_fp16 = softmax(axis = var_5322, x = aw_731_cast_fp16)[name = tensor<string, []>("op_5471_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5472_cast_fp16 = softmax(axis = var_5322, x = aw_733_cast_fp16)[name = tensor<string, []>("op_5472_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5473_cast_fp16 = softmax(axis = var_5322, x = aw_735_cast_fp16)[name = tensor<string, []>("op_5473_cast_fp16")];
            tensor<string, []> var_5475_equation_0 = const()[name = tensor<string, []>("op_5475_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5475_cast_fp16 = einsum(equation = var_5475_equation_0, values = (var_5409_cast_fp16_0, var_5458_cast_fp16))[name = tensor<string, []>("op_5475_cast_fp16")];
            tensor<string, []> var_5477_equation_0 = const()[name = tensor<string, []>("op_5477_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5477_cast_fp16 = einsum(equation = var_5477_equation_0, values = (var_5409_cast_fp16_1, var_5459_cast_fp16))[name = tensor<string, []>("op_5477_cast_fp16")];
            tensor<string, []> var_5479_equation_0 = const()[name = tensor<string, []>("op_5479_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5479_cast_fp16 = einsum(equation = var_5479_equation_0, values = (var_5409_cast_fp16_2, var_5460_cast_fp16))[name = tensor<string, []>("op_5479_cast_fp16")];
            tensor<string, []> var_5481_equation_0 = const()[name = tensor<string, []>("op_5481_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5481_cast_fp16 = einsum(equation = var_5481_equation_0, values = (var_5409_cast_fp16_3, var_5461_cast_fp16))[name = tensor<string, []>("op_5481_cast_fp16")];
            tensor<string, []> var_5483_equation_0 = const()[name = tensor<string, []>("op_5483_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5483_cast_fp16 = einsum(equation = var_5483_equation_0, values = (var_5409_cast_fp16_4, var_5462_cast_fp16))[name = tensor<string, []>("op_5483_cast_fp16")];
            tensor<string, []> var_5485_equation_0 = const()[name = tensor<string, []>("op_5485_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5485_cast_fp16 = einsum(equation = var_5485_equation_0, values = (var_5409_cast_fp16_5, var_5463_cast_fp16))[name = tensor<string, []>("op_5485_cast_fp16")];
            tensor<string, []> var_5487_equation_0 = const()[name = tensor<string, []>("op_5487_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5487_cast_fp16 = einsum(equation = var_5487_equation_0, values = (var_5409_cast_fp16_6, var_5464_cast_fp16))[name = tensor<string, []>("op_5487_cast_fp16")];
            tensor<string, []> var_5489_equation_0 = const()[name = tensor<string, []>("op_5489_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5489_cast_fp16 = einsum(equation = var_5489_equation_0, values = (var_5409_cast_fp16_7, var_5465_cast_fp16))[name = tensor<string, []>("op_5489_cast_fp16")];
            tensor<string, []> var_5491_equation_0 = const()[name = tensor<string, []>("op_5491_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5491_cast_fp16 = einsum(equation = var_5491_equation_0, values = (var_5409_cast_fp16_8, var_5466_cast_fp16))[name = tensor<string, []>("op_5491_cast_fp16")];
            tensor<string, []> var_5493_equation_0 = const()[name = tensor<string, []>("op_5493_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5493_cast_fp16 = einsum(equation = var_5493_equation_0, values = (var_5409_cast_fp16_9, var_5467_cast_fp16))[name = tensor<string, []>("op_5493_cast_fp16")];
            tensor<string, []> var_5495_equation_0 = const()[name = tensor<string, []>("op_5495_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5495_cast_fp16 = einsum(equation = var_5495_equation_0, values = (var_5409_cast_fp16_10, var_5468_cast_fp16))[name = tensor<string, []>("op_5495_cast_fp16")];
            tensor<string, []> var_5497_equation_0 = const()[name = tensor<string, []>("op_5497_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5497_cast_fp16 = einsum(equation = var_5497_equation_0, values = (var_5409_cast_fp16_11, var_5469_cast_fp16))[name = tensor<string, []>("op_5497_cast_fp16")];
            tensor<string, []> var_5499_equation_0 = const()[name = tensor<string, []>("op_5499_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5499_cast_fp16 = einsum(equation = var_5499_equation_0, values = (var_5409_cast_fp16_12, var_5470_cast_fp16))[name = tensor<string, []>("op_5499_cast_fp16")];
            tensor<string, []> var_5501_equation_0 = const()[name = tensor<string, []>("op_5501_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5501_cast_fp16 = einsum(equation = var_5501_equation_0, values = (var_5409_cast_fp16_13, var_5471_cast_fp16))[name = tensor<string, []>("op_5501_cast_fp16")];
            tensor<string, []> var_5503_equation_0 = const()[name = tensor<string, []>("op_5503_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5503_cast_fp16 = einsum(equation = var_5503_equation_0, values = (var_5409_cast_fp16_14, var_5472_cast_fp16))[name = tensor<string, []>("op_5503_cast_fp16")];
            tensor<string, []> var_5505_equation_0 = const()[name = tensor<string, []>("op_5505_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5505_cast_fp16 = einsum(equation = var_5505_equation_0, values = (var_5409_cast_fp16_15, var_5473_cast_fp16))[name = tensor<string, []>("op_5505_cast_fp16")];
            tensor<bool, []> input_225_interleave_0 = const()[name = tensor<string, []>("input_225_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_225_cast_fp16 = concat(axis = var_5322, interleave = input_225_interleave_0, values = (var_5475_cast_fp16, var_5477_cast_fp16, var_5479_cast_fp16, var_5481_cast_fp16, var_5483_cast_fp16, var_5485_cast_fp16, var_5487_cast_fp16, var_5489_cast_fp16, var_5491_cast_fp16, var_5493_cast_fp16, var_5495_cast_fp16, var_5497_cast_fp16, var_5499_cast_fp16, var_5501_cast_fp16, var_5503_cast_fp16, var_5505_cast_fp16))[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<string, []> var_5514_pad_type_0 = const()[name = tensor<string, []>("op_5514_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5514_strides_0 = const()[name = tensor<string, []>("op_5514_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5514_pad_0 = const()[name = tensor<string, []>("op_5514_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5514_dilations_0 = const()[name = tensor<string, []>("op_5514_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5514_groups_0 = const()[name = tensor<string, []>("op_5514_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_22_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(570369472)))];
            tensor<fp16, [1024]> blocks_22_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_22_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(572466688)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5514_cast_fp16 = conv(bias = blocks_22_attn_out_bias_to_fp16, dilations = var_5514_dilations_0, groups = var_5514_groups_0, pad = var_5514_pad_0, pad_type = var_5514_pad_type_0, strides = var_5514_strides_0, weight = blocks_22_attn_out_weight_to_fp16, x = input_225_cast_fp16)[name = tensor<string, []>("op_5514_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_91_cast_fp16 = add(x = inputs_89_cast_fp16, y = var_5514_cast_fp16)[name = tensor<string, []>("inputs_91_cast_fp16")];
            tensor<int32, [1]> input_227_axes_0 = const()[name = tensor<string, []>("input_227_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_227_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_227_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(572468800)))];
            tensor<fp16, [1024]> input_227_beta_0_to_fp16 = const()[name = tensor<string, []>("input_227_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(572470912)))];
            tensor<fp16, []> var_5524_to_fp16 = const()[name = tensor<string, []>("op_5524_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_227_cast_fp16 = layer_norm(axes = input_227_axes_0, beta = input_227_beta_0_to_fp16, epsilon = var_5524_to_fp16, gamma = input_227_gamma_0_to_fp16, x = inputs_91_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<string, []> input_229_pad_type_0 = const()[name = tensor<string, []>("input_229_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_229_strides_0 = const()[name = tensor<string, []>("input_229_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_229_pad_0 = const()[name = tensor<string, []>("input_229_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_229_dilations_0 = const()[name = tensor<string, []>("input_229_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_229_groups_0 = const()[name = tensor<string, []>("input_229_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_22_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(572473024)))];
            tensor<fp16, [4096]> blocks_22_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_22_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(580861696)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_229_cast_fp16 = conv(bias = blocks_22_mlp_0_bias_to_fp16, dilations = input_229_dilations_0, groups = input_229_groups_0, pad = input_229_pad_0, pad_type = input_229_pad_type_0, strides = input_229_strides_0, weight = blocks_22_mlp_0_weight_to_fp16, x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<string, []> input_231_mode_0 = const()[name = tensor<string, []>("input_231_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_231_cast_fp16 = gelu(mode = input_231_mode_0, x = input_229_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<string, []> var_5550_pad_type_0 = const()[name = tensor<string, []>("op_5550_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5550_strides_0 = const()[name = tensor<string, []>("op_5550_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5550_pad_0 = const()[name = tensor<string, []>("op_5550_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5550_dilations_0 = const()[name = tensor<string, []>("op_5550_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5550_groups_0 = const()[name = tensor<string, []>("op_5550_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_22_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_22_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(580869952)))];
            tensor<fp16, [1024]> blocks_22_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_22_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(589258624)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5550_cast_fp16 = conv(bias = blocks_22_mlp_2_bias_to_fp16, dilations = var_5550_dilations_0, groups = var_5550_groups_0, pad = var_5550_pad_0, pad_type = var_5550_pad_type_0, strides = var_5550_strides_0, weight = blocks_22_mlp_2_weight_to_fp16, x = input_231_cast_fp16)[name = tensor<string, []>("op_5550_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_93_cast_fp16 = add(x = inputs_91_cast_fp16, y = var_5550_cast_fp16)[name = tensor<string, []>("inputs_93_cast_fp16")];
            tensor<int32, []> var_5559 = const()[name = tensor<string, []>("op_5559"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> input_233_axes_0 = const()[name = tensor<string, []>("input_233_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_233_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_233_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(589260736)))];
            tensor<fp16, [1024]> input_233_beta_0_to_fp16 = const()[name = tensor<string, []>("input_233_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(589262848)))];
            tensor<fp16, []> var_5575_to_fp16 = const()[name = tensor<string, []>("op_5575_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_233_cast_fp16 = layer_norm(axes = input_233_axes_0, beta = input_233_beta_0_to_fp16, epsilon = var_5575_to_fp16, gamma = input_233_gamma_0_to_fp16, x = inputs_93_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<string, []> q_pad_type_0 = const()[name = tensor<string, []>("q_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> q_strides_0 = const()[name = tensor<string, []>("q_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> q_pad_0 = const()[name = tensor<string, []>("q_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> q_dilations_0 = const()[name = tensor<string, []>("q_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> q_groups_0 = const()[name = tensor<string, []>("q_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> var_5610_weight_0_to_fp16 = const()[name = tensor<string, []>("op_5610_weight_0_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(589264960)))];
            tensor<fp16, [1024]> var_5610_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5610_bias_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(591362176)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5610_cast_fp16 = conv(bias = var_5610_bias_0_to_fp16, dilations = q_dilations_0, groups = q_groups_0, pad = q_pad_0, pad_type = q_pad_type_0, strides = q_strides_0, weight = var_5610_weight_0_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("op_5610_cast_fp16")];
            tensor<string, []> k_pad_type_0 = const()[name = tensor<string, []>("k_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> k_strides_0 = const()[name = tensor<string, []>("k_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> k_pad_0 = const()[name = tensor<string, []>("k_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> k_dilations_0 = const()[name = tensor<string, []>("k_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> k_groups_0 = const()[name = tensor<string, []>("k_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_23_attn_key_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_key_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(591364288)))];
            tensor<fp16, [1, 1024, 1, 1500]> k_cast_fp16 = conv(dilations = k_dilations_0, groups = k_groups_0, pad = k_pad_0, pad_type = k_pad_type_0, strides = k_strides_0, weight = blocks_23_attn_key_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("k_cast_fp16")];
            tensor<string, []> var_5608_pad_type_0 = const()[name = tensor<string, []>("op_5608_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5608_strides_0 = const()[name = tensor<string, []>("op_5608_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5608_pad_0 = const()[name = tensor<string, []>("op_5608_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5608_dilations_0 = const()[name = tensor<string, []>("op_5608_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5608_groups_0 = const()[name = tensor<string, []>("op_5608_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_23_attn_value_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_value_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(593461504)))];
            tensor<fp16, [1024]> blocks_23_attn_value_bias_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_value_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(595558720)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5608_cast_fp16 = conv(bias = blocks_23_attn_value_bias_to_fp16, dilations = var_5608_dilations_0, groups = var_5608_groups_0, pad = var_5608_pad_0, pad_type = var_5608_pad_type_0, strides = var_5608_strides_0, weight = blocks_23_attn_value_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("op_5608_cast_fp16")];
            tensor<int32, [16]> tile_69 = const()[name = tensor<string, []>("tile_69"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5611_axis_0 = const()[name = tensor<string, []>("op_5611_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5611_cast_fp16_15 = split(axis = var_5611_axis_0, split_sizes = tile_69, x = var_5610_cast_fp16)[name = tensor<string, []>("op_5611_cast_fp16")];
            tensor<int32, [4]> var_5628_perm_0 = const()[name = tensor<string, []>("op_5628_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [16]> tile_70 = const()[name = tensor<string, []>("tile_70"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5629_axis_0 = const()[name = tensor<string, []>("op_5629_axis_0"), val = tensor<int32, []>(3)];
            tensor<fp16, [1, 1500, 1, 1024]> var_5628_cast_fp16 = transpose(perm = var_5628_perm_0, x = k_cast_fp16)[name = tensor<string, []>("transpose_1")];
            tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_0, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_1, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_2, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_3, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_4, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_5, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_6, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_7, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_8, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_9, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_10, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_11, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_12, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_13, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_14, tensor<fp16, [1, 1500, 1, 64]> var_5629_cast_fp16_15 = split(axis = var_5629_axis_0, split_sizes = tile_70, x = var_5628_cast_fp16)[name = tensor<string, []>("op_5629_cast_fp16")];
            tensor<int32, [16]> tile_71 = const()[name = tensor<string, []>("tile_71"), val = tensor<int32, [16]>([64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5646_axis_0 = const()[name = tensor<string, []>("op_5646_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_0, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_1, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_2, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_3, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_4, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_5, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_6, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_7, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_8, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_9, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_10, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_11, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_12, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_13, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_14, tensor<fp16, [1, 64, 1, 1500]> var_5646_cast_fp16_15 = split(axis = var_5646_axis_0, split_sizes = tile_71, x = var_5608_cast_fp16)[name = tensor<string, []>("op_5646_cast_fp16")];
            tensor<string, []> aw_737_equation_0 = const()[name = tensor<string, []>("aw_737_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_737_cast_fp16 = einsum(equation = aw_737_equation_0, values = (var_5629_cast_fp16_0, var_5611_cast_fp16_0))[name = tensor<string, []>("aw_737_cast_fp16")];
            tensor<string, []> aw_739_equation_0 = const()[name = tensor<string, []>("aw_739_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_739_cast_fp16 = einsum(equation = aw_739_equation_0, values = (var_5629_cast_fp16_1, var_5611_cast_fp16_1))[name = tensor<string, []>("aw_739_cast_fp16")];
            tensor<string, []> aw_741_equation_0 = const()[name = tensor<string, []>("aw_741_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_741_cast_fp16 = einsum(equation = aw_741_equation_0, values = (var_5629_cast_fp16_2, var_5611_cast_fp16_2))[name = tensor<string, []>("aw_741_cast_fp16")];
            tensor<string, []> aw_743_equation_0 = const()[name = tensor<string, []>("aw_743_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_743_cast_fp16 = einsum(equation = aw_743_equation_0, values = (var_5629_cast_fp16_3, var_5611_cast_fp16_3))[name = tensor<string, []>("aw_743_cast_fp16")];
            tensor<string, []> aw_745_equation_0 = const()[name = tensor<string, []>("aw_745_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_745_cast_fp16 = einsum(equation = aw_745_equation_0, values = (var_5629_cast_fp16_4, var_5611_cast_fp16_4))[name = tensor<string, []>("aw_745_cast_fp16")];
            tensor<string, []> aw_747_equation_0 = const()[name = tensor<string, []>("aw_747_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_747_cast_fp16 = einsum(equation = aw_747_equation_0, values = (var_5629_cast_fp16_5, var_5611_cast_fp16_5))[name = tensor<string, []>("aw_747_cast_fp16")];
            tensor<string, []> aw_749_equation_0 = const()[name = tensor<string, []>("aw_749_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_749_cast_fp16 = einsum(equation = aw_749_equation_0, values = (var_5629_cast_fp16_6, var_5611_cast_fp16_6))[name = tensor<string, []>("aw_749_cast_fp16")];
            tensor<string, []> aw_751_equation_0 = const()[name = tensor<string, []>("aw_751_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_751_cast_fp16 = einsum(equation = aw_751_equation_0, values = (var_5629_cast_fp16_7, var_5611_cast_fp16_7))[name = tensor<string, []>("aw_751_cast_fp16")];
            tensor<string, []> aw_753_equation_0 = const()[name = tensor<string, []>("aw_753_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_753_cast_fp16 = einsum(equation = aw_753_equation_0, values = (var_5629_cast_fp16_8, var_5611_cast_fp16_8))[name = tensor<string, []>("aw_753_cast_fp16")];
            tensor<string, []> aw_755_equation_0 = const()[name = tensor<string, []>("aw_755_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_755_cast_fp16 = einsum(equation = aw_755_equation_0, values = (var_5629_cast_fp16_9, var_5611_cast_fp16_9))[name = tensor<string, []>("aw_755_cast_fp16")];
            tensor<string, []> aw_757_equation_0 = const()[name = tensor<string, []>("aw_757_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_757_cast_fp16 = einsum(equation = aw_757_equation_0, values = (var_5629_cast_fp16_10, var_5611_cast_fp16_10))[name = tensor<string, []>("aw_757_cast_fp16")];
            tensor<string, []> aw_759_equation_0 = const()[name = tensor<string, []>("aw_759_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_759_cast_fp16 = einsum(equation = aw_759_equation_0, values = (var_5629_cast_fp16_11, var_5611_cast_fp16_11))[name = tensor<string, []>("aw_759_cast_fp16")];
            tensor<string, []> aw_761_equation_0 = const()[name = tensor<string, []>("aw_761_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_761_cast_fp16 = einsum(equation = aw_761_equation_0, values = (var_5629_cast_fp16_12, var_5611_cast_fp16_12))[name = tensor<string, []>("aw_761_cast_fp16")];
            tensor<string, []> aw_763_equation_0 = const()[name = tensor<string, []>("aw_763_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_763_cast_fp16 = einsum(equation = aw_763_equation_0, values = (var_5629_cast_fp16_13, var_5611_cast_fp16_13))[name = tensor<string, []>("aw_763_cast_fp16")];
            tensor<string, []> aw_765_equation_0 = const()[name = tensor<string, []>("aw_765_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_765_cast_fp16 = einsum(equation = aw_765_equation_0, values = (var_5629_cast_fp16_14, var_5611_cast_fp16_14))[name = tensor<string, []>("aw_765_cast_fp16")];
            tensor<string, []> aw_equation_0 = const()[name = tensor<string, []>("aw_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [1, 1500, 1, 1500]> aw_cast_fp16 = einsum(equation = aw_equation_0, values = (var_5629_cast_fp16_15, var_5611_cast_fp16_15))[name = tensor<string, []>("aw_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5695_cast_fp16 = softmax(axis = var_5559, x = aw_737_cast_fp16)[name = tensor<string, []>("op_5695_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5696_cast_fp16 = softmax(axis = var_5559, x = aw_739_cast_fp16)[name = tensor<string, []>("op_5696_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5697_cast_fp16 = softmax(axis = var_5559, x = aw_741_cast_fp16)[name = tensor<string, []>("op_5697_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5698_cast_fp16 = softmax(axis = var_5559, x = aw_743_cast_fp16)[name = tensor<string, []>("op_5698_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5699_cast_fp16 = softmax(axis = var_5559, x = aw_745_cast_fp16)[name = tensor<string, []>("op_5699_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5700_cast_fp16 = softmax(axis = var_5559, x = aw_747_cast_fp16)[name = tensor<string, []>("op_5700_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5701_cast_fp16 = softmax(axis = var_5559, x = aw_749_cast_fp16)[name = tensor<string, []>("op_5701_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5702_cast_fp16 = softmax(axis = var_5559, x = aw_751_cast_fp16)[name = tensor<string, []>("op_5702_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5703_cast_fp16 = softmax(axis = var_5559, x = aw_753_cast_fp16)[name = tensor<string, []>("op_5703_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5704_cast_fp16 = softmax(axis = var_5559, x = aw_755_cast_fp16)[name = tensor<string, []>("op_5704_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5705_cast_fp16 = softmax(axis = var_5559, x = aw_757_cast_fp16)[name = tensor<string, []>("op_5705_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5706_cast_fp16 = softmax(axis = var_5559, x = aw_759_cast_fp16)[name = tensor<string, []>("op_5706_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5707_cast_fp16 = softmax(axis = var_5559, x = aw_761_cast_fp16)[name = tensor<string, []>("op_5707_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5708_cast_fp16 = softmax(axis = var_5559, x = aw_763_cast_fp16)[name = tensor<string, []>("op_5708_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5709_cast_fp16 = softmax(axis = var_5559, x = aw_765_cast_fp16)[name = tensor<string, []>("op_5709_cast_fp16")];
            tensor<fp16, [1, 1500, 1, 1500]> var_5710_cast_fp16 = softmax(axis = var_5559, x = aw_cast_fp16)[name = tensor<string, []>("op_5710_cast_fp16")];
            tensor<string, []> var_5712_equation_0 = const()[name = tensor<string, []>("op_5712_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5712_cast_fp16 = einsum(equation = var_5712_equation_0, values = (var_5646_cast_fp16_0, var_5695_cast_fp16))[name = tensor<string, []>("op_5712_cast_fp16")];
            tensor<string, []> var_5714_equation_0 = const()[name = tensor<string, []>("op_5714_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5714_cast_fp16 = einsum(equation = var_5714_equation_0, values = (var_5646_cast_fp16_1, var_5696_cast_fp16))[name = tensor<string, []>("op_5714_cast_fp16")];
            tensor<string, []> var_5716_equation_0 = const()[name = tensor<string, []>("op_5716_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5716_cast_fp16 = einsum(equation = var_5716_equation_0, values = (var_5646_cast_fp16_2, var_5697_cast_fp16))[name = tensor<string, []>("op_5716_cast_fp16")];
            tensor<string, []> var_5718_equation_0 = const()[name = tensor<string, []>("op_5718_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5718_cast_fp16 = einsum(equation = var_5718_equation_0, values = (var_5646_cast_fp16_3, var_5698_cast_fp16))[name = tensor<string, []>("op_5718_cast_fp16")];
            tensor<string, []> var_5720_equation_0 = const()[name = tensor<string, []>("op_5720_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5720_cast_fp16 = einsum(equation = var_5720_equation_0, values = (var_5646_cast_fp16_4, var_5699_cast_fp16))[name = tensor<string, []>("op_5720_cast_fp16")];
            tensor<string, []> var_5722_equation_0 = const()[name = tensor<string, []>("op_5722_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5722_cast_fp16 = einsum(equation = var_5722_equation_0, values = (var_5646_cast_fp16_5, var_5700_cast_fp16))[name = tensor<string, []>("op_5722_cast_fp16")];
            tensor<string, []> var_5724_equation_0 = const()[name = tensor<string, []>("op_5724_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5724_cast_fp16 = einsum(equation = var_5724_equation_0, values = (var_5646_cast_fp16_6, var_5701_cast_fp16))[name = tensor<string, []>("op_5724_cast_fp16")];
            tensor<string, []> var_5726_equation_0 = const()[name = tensor<string, []>("op_5726_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5726_cast_fp16 = einsum(equation = var_5726_equation_0, values = (var_5646_cast_fp16_7, var_5702_cast_fp16))[name = tensor<string, []>("op_5726_cast_fp16")];
            tensor<string, []> var_5728_equation_0 = const()[name = tensor<string, []>("op_5728_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5728_cast_fp16 = einsum(equation = var_5728_equation_0, values = (var_5646_cast_fp16_8, var_5703_cast_fp16))[name = tensor<string, []>("op_5728_cast_fp16")];
            tensor<string, []> var_5730_equation_0 = const()[name = tensor<string, []>("op_5730_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5730_cast_fp16 = einsum(equation = var_5730_equation_0, values = (var_5646_cast_fp16_9, var_5704_cast_fp16))[name = tensor<string, []>("op_5730_cast_fp16")];
            tensor<string, []> var_5732_equation_0 = const()[name = tensor<string, []>("op_5732_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5732_cast_fp16 = einsum(equation = var_5732_equation_0, values = (var_5646_cast_fp16_10, var_5705_cast_fp16))[name = tensor<string, []>("op_5732_cast_fp16")];
            tensor<string, []> var_5734_equation_0 = const()[name = tensor<string, []>("op_5734_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5734_cast_fp16 = einsum(equation = var_5734_equation_0, values = (var_5646_cast_fp16_11, var_5706_cast_fp16))[name = tensor<string, []>("op_5734_cast_fp16")];
            tensor<string, []> var_5736_equation_0 = const()[name = tensor<string, []>("op_5736_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5736_cast_fp16 = einsum(equation = var_5736_equation_0, values = (var_5646_cast_fp16_12, var_5707_cast_fp16))[name = tensor<string, []>("op_5736_cast_fp16")];
            tensor<string, []> var_5738_equation_0 = const()[name = tensor<string, []>("op_5738_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5738_cast_fp16 = einsum(equation = var_5738_equation_0, values = (var_5646_cast_fp16_13, var_5708_cast_fp16))[name = tensor<string, []>("op_5738_cast_fp16")];
            tensor<string, []> var_5740_equation_0 = const()[name = tensor<string, []>("op_5740_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5740_cast_fp16 = einsum(equation = var_5740_equation_0, values = (var_5646_cast_fp16_14, var_5709_cast_fp16))[name = tensor<string, []>("op_5740_cast_fp16")];
            tensor<string, []> var_5742_equation_0 = const()[name = tensor<string, []>("op_5742_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [1, 64, 1, 1500]> var_5742_cast_fp16 = einsum(equation = var_5742_equation_0, values = (var_5646_cast_fp16_15, var_5710_cast_fp16))[name = tensor<string, []>("op_5742_cast_fp16")];
            tensor<bool, []> input_235_interleave_0 = const()[name = tensor<string, []>("input_235_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 1, 1500]> input_235_cast_fp16 = concat(axis = var_5559, interleave = input_235_interleave_0, values = (var_5712_cast_fp16, var_5714_cast_fp16, var_5716_cast_fp16, var_5718_cast_fp16, var_5720_cast_fp16, var_5722_cast_fp16, var_5724_cast_fp16, var_5726_cast_fp16, var_5728_cast_fp16, var_5730_cast_fp16, var_5732_cast_fp16, var_5734_cast_fp16, var_5736_cast_fp16, var_5738_cast_fp16, var_5740_cast_fp16, var_5742_cast_fp16))[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<string, []> var_5751_pad_type_0 = const()[name = tensor<string, []>("op_5751_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5751_strides_0 = const()[name = tensor<string, []>("op_5751_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5751_pad_0 = const()[name = tensor<string, []>("op_5751_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5751_dilations_0 = const()[name = tensor<string, []>("op_5751_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5751_groups_0 = const()[name = tensor<string, []>("op_5751_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 1024, 1, 1]> blocks_23_attn_out_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_out_weight_to_fp16"), val = tensor<fp16, [1024, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(595560832)))];
            tensor<fp16, [1024]> blocks_23_attn_out_bias_to_fp16 = const()[name = tensor<string, []>("blocks_23_attn_out_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(597658048)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5751_cast_fp16 = conv(bias = blocks_23_attn_out_bias_to_fp16, dilations = var_5751_dilations_0, groups = var_5751_groups_0, pad = var_5751_pad_0, pad_type = var_5751_pad_type_0, strides = var_5751_strides_0, weight = blocks_23_attn_out_weight_to_fp16, x = input_235_cast_fp16)[name = tensor<string, []>("op_5751_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_95_cast_fp16 = add(x = inputs_93_cast_fp16, y = var_5751_cast_fp16)[name = tensor<string, []>("inputs_95_cast_fp16")];
            tensor<int32, [1]> input_237_axes_0 = const()[name = tensor<string, []>("input_237_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> input_237_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_237_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(597660160)))];
            tensor<fp16, [1024]> input_237_beta_0_to_fp16 = const()[name = tensor<string, []>("input_237_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(597662272)))];
            tensor<fp16, []> var_5761_to_fp16 = const()[name = tensor<string, []>("op_5761_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> input_237_cast_fp16 = layer_norm(axes = input_237_axes_0, beta = input_237_beta_0_to_fp16, epsilon = var_5761_to_fp16, gamma = input_237_gamma_0_to_fp16, x = inputs_95_cast_fp16)[name = tensor<string, []>("input_237_cast_fp16")];
            tensor<string, []> input_239_pad_type_0 = const()[name = tensor<string, []>("input_239_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_239_strides_0 = const()[name = tensor<string, []>("input_239_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_239_pad_0 = const()[name = tensor<string, []>("input_239_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_239_dilations_0 = const()[name = tensor<string, []>("input_239_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_239_groups_0 = const()[name = tensor<string, []>("input_239_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [4096, 1024, 1, 1]> blocks_23_mlp_0_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_mlp_0_weight_to_fp16"), val = tensor<fp16, [4096, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(597664384)))];
            tensor<fp16, [4096]> blocks_23_mlp_0_bias_to_fp16 = const()[name = tensor<string, []>("blocks_23_mlp_0_bias_to_fp16"), val = tensor<fp16, [4096]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(606053056)))];
            tensor<fp16, [1, 4096, 1, 1500]> input_239_cast_fp16 = conv(bias = blocks_23_mlp_0_bias_to_fp16, dilations = input_239_dilations_0, groups = input_239_groups_0, pad = input_239_pad_0, pad_type = input_239_pad_type_0, strides = input_239_strides_0, weight = blocks_23_mlp_0_weight_to_fp16, x = input_237_cast_fp16)[name = tensor<string, []>("input_239_cast_fp16")];
            tensor<string, []> input_mode_0 = const()[name = tensor<string, []>("input_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 4096, 1, 1500]> input_cast_fp16 = gelu(mode = input_mode_0, x = input_239_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<string, []> var_5787_pad_type_0 = const()[name = tensor<string, []>("op_5787_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_5787_strides_0 = const()[name = tensor<string, []>("op_5787_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_5787_pad_0 = const()[name = tensor<string, []>("op_5787_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_5787_dilations_0 = const()[name = tensor<string, []>("op_5787_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_5787_groups_0 = const()[name = tensor<string, []>("op_5787_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1024, 4096, 1, 1]> blocks_23_mlp_2_weight_to_fp16 = const()[name = tensor<string, []>("blocks_23_mlp_2_weight_to_fp16"), val = tensor<fp16, [1024, 4096, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(606061312)))];
            tensor<fp16, [1024]> blocks_23_mlp_2_bias_to_fp16 = const()[name = tensor<string, []>("blocks_23_mlp_2_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(614449984)))];
            tensor<fp16, [1, 1024, 1, 1500]> var_5787_cast_fp16 = conv(bias = blocks_23_mlp_2_bias_to_fp16, dilations = var_5787_dilations_0, groups = var_5787_groups_0, pad = var_5787_pad_0, pad_type = var_5787_pad_type_0, strides = var_5787_strides_0, weight = blocks_23_mlp_2_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("op_5787_cast_fp16")];
            tensor<fp16, [1, 1024, 1, 1500]> inputs_cast_fp16 = add(x = inputs_95_cast_fp16, y = var_5787_cast_fp16)[name = tensor<string, []>("inputs_cast_fp16")];
            tensor<int32, [1]> x_axes_0 = const()[name = tensor<string, []>("x_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1024]> x_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_gamma_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(614452096)))];
            tensor<fp16, [1024]> x_beta_0_to_fp16 = const()[name = tensor<string, []>("x_beta_0_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(614454208)))];
            tensor<fp16, []> var_5801_to_fp16 = const()[name = tensor<string, []>("op_5801_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1024, 1, 1500]> x_cast_fp16 = layer_norm(axes = x_axes_0, beta = x_beta_0_to_fp16, epsilon = var_5801_to_fp16, gamma = x_gamma_0_to_fp16, x = inputs_cast_fp16)[name = tensor<string, []>("x_cast_fp16")];
            tensor<int32, [1]> var_5812_axes_0 = const()[name = tensor<string, []>("op_5812_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1024, 1500]> var_5812_cast_fp16 = squeeze(axes = var_5812_axes_0, x = x_cast_fp16)[name = tensor<string, []>("op_5812_cast_fp16")];
            tensor<int32, [3]> var_5815_perm_0 = const()[name = tensor<string, []>("op_5815_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<string, []> var_5815_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_5815_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, [1, 1500, 1024]> var_5815_cast_fp16 = transpose(perm = var_5815_perm_0, x = var_5812_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp32, [1, 1500, 1024]> output = cast(dtype = var_5815_cast_fp16_to_fp32_dtype_0, x = var_5815_cast_fp16)[name = tensor<string, []>("cast_99")];
        } -> (output);
}